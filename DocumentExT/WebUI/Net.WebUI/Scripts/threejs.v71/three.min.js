var THREE={REVISION:"71"};typeof define=="function"&&define.amd?define("three",THREE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=THREE);(self.requestAnimationFrame===undefined||self.cancelAnimationFrame===undefined)&&function(){for(var i=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!self.requestAnimationFrame;++n)self.requestAnimationFrame=self[t[n]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[n]+"CancelAnimationFrame"]||self[t[n]+"CancelRequestAnimationFrame"];self.requestAnimationFrame===undefined&&self.setTimeout!==undefined&&(self.requestAnimationFrame=function(n){var t=Date.now(),r=Math.max(0,16-(t-i)),u=self.setTimeout(function(){n(t+r)},r);return i=t+r,u});self.cancelAnimationFrame===undefined&&self.clearTimeout!==undefined&&(self.cancelAnimationFrame=function(n){self.clearTimeout(n)})}();self.performance===undefined&&(self.performance={});self.performance.now===undefined&&function(){var n=Date.now();self.performance.now=function(){return Date.now()-n}}();Number.EPSILON===undefined&&(Number.EPSILON=Math.pow(2,-52));Math.sign===undefined&&(Math.sign=function(n){return n<0?-1:n>0?1:+n});Function.prototype.name===undefined&&Object.defineProperty!==undefined&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}});THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1e3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;THREE.Projector=function(){THREE.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(n,t){THREE.warn("THREE.Projector: .projectVector() is now vector.project().");n.project(t)};this.unprojectVector=function(n,t){THREE.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");n.unproject(t)};this.pickingRay=function(){THREE.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};THREE.CanvasRenderer=function(){THREE.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");this.domElement=document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(n){return arguments.length===3?this.fromArray(arguments):this.set(n)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(n){return n instanceof THREE.Color?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n),this},setHex:function(n){return n=Math.floor(n),this.r=(n>>16&255)/255,this.g=(n>>8&255)/255,this.b=(n&255)/255,this},setRGB:function(n,t,i){return this.r=n,this.g=t,this.b=i,this},setHSL:function(){function n(n,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?n+(t-n)*6*i:i<1/2?t:i<2/3?n+(t-n)*6*(2/3-i):n}return function(t,i,r){if(t=THREE.Math.euclideanModulo(t,1),i=THREE.Math.clamp(i,0,1),r=THREE.Math.clamp(r,0,1),i===0)this.r=this.g=this.b=r;else{var u=r<=.5?r*(1+i):r+i-r*i,f=2*r-u;this.r=n(f,u,t+1/3);this.g=n(f,u,t);this.b=n(f,u,t-1/3)}return this}}(),setStyle:function(n){function f(t){t!==undefined&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+n+" will be ignored.")}var r,i,o,u,e,t;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(n)){o=r[1];u=r[2];switch(o){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(u))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,f(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(u))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,f(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(u)){var s=parseFloat(i[1])/360,h=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return f(i[5]),this.setHSL(s,h,c)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(n)){if(t=r[1],e=t.length,e===3)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(e===6)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return n&&n.length>0&&(t=THREE.ColorKeywords[n],t!==undefined?this.setHex(t):console.warn("THREE.Color: Unknown color "+n)),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(n){return this.r=n.r,this.g=n.g,this.b=n.b,this},copyGammaToLinear:function(n,t){return t===undefined&&(t=2),this.r=Math.pow(n.r,t),this.g=Math.pow(n.g,t),this.b=Math.pow(n.b,t),this},copyLinearToGamma:function(n,t){t===undefined&&(t=2);var i=t>0?1/t:1;return this.r=Math.pow(n.r,i),this.g=Math.pow(n.g,i),this.b=Math.pow(n.b,i),this},convertGammaToLinear:function(){var n=this.r,t=this.g,i=this.b;return this.r=n*n,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(n){var s=n||{h:0,s:0,l:0},e=this.r,t=this.g,i=this.b,r=Math.max(e,t,i),o=Math.min(e,t,i),u,h,c=(o+r)/2,f;if(o===r)u=0,h=0;else{f=r-o;h=c<=.5?f/(r+o):f/(2-r-o);switch(r){case e:u=(t-i)/f+(t<i?6:0);break;case t:u=(i-e)/f+2;break;case i:u=(e-t)/f+4}u/=6}return s.h=u,s.s=h,s.l=c,s},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(n,t,i){var r=this.getHSL();return r.h+=n,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(n){return this.r+=n.r,this.g+=n.g,this.b+=n.b,this},addColors:function(n,t){return this.r=n.r+t.r,this.g=n.g+t.g,this.b=n.b+t.b,this},addScalar:function(n){return this.r+=n,this.g+=n,this.b+=n,this},multiply:function(n){return this.r*=n.r,this.g*=n.g,this.b*=n.b,this},multiplyScalar:function(n){return this.r*=n,this.g*=n,this.b*=n,this},lerp:function(n,t){return this.r+=(n.r-this.r)*t,this.g+=(n.g-this.g)*t,this.b+=(n.b-this.b)*t,this},equals:function(n){return n.r===this.r&&n.g===this.g&&n.b===this.b},fromArray:function(n,t){return t===undefined&&(t=0),this.r=n[t],this.g=n[t+1],this.b=n[t+2],this},toArray:function(n,t){return n===undefined&&(n=[]),t===undefined&&(t=0),n[t]=this.r,n[t+1]=this.g,n[t+2]=this.b,n}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(n,t,i,r){this._x=n||0;this._y=t||0;this._z=i||0;this._w=r!==undefined?r:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(n){this._x=n;this.onChangeCallback()},get y(){return this._y},set y(n){this._y=n;this.onChangeCallback()},get z(){return this._z},set z(n){this._z=n;this.onChangeCallback()},get w(){return this._w},set w(n){this._w=n;this.onChangeCallback()},set:function(n,t,i,r){return this._x=n,this._y=t,this._z=i,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(n){return this._x=n.x,this._y=n.y,this._z=n.z,this._w=n.w,this.onChangeCallback(),this},setFromEuler:function(n,t){if(n instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var i=Math.cos(n._x/2),r=Math.cos(n._y/2),u=Math.cos(n._z/2),f=Math.sin(n._x/2),e=Math.sin(n._y/2),o=Math.sin(n._z/2),s=n.order;return s==="XYZ"?(this._x=f*r*u+i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u-f*e*o):s==="YXZ"?(this._x=f*r*u+i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u+f*e*o):s==="ZXY"?(this._x=f*r*u-i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u-f*e*o):s==="ZYX"?(this._x=f*r*u-i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u+f*e*o):s==="YZX"?(this._x=f*r*u+i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u-f*e*o):s==="XZY"&&(this._x=f*r*u-i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u+f*e*o),t!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(n,t){var r=t/2,i=Math.sin(r);return this._x=n.x*i,this._y=n.y*i,this._z=n.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(n){var i=n.elements,r=i[0],e=i[4],o=i[8],s=i[1],u=i[5],h=i[9],c=i[2],l=i[6],f=i[10],a=r+u+f,t;return a>0?(t=.5/Math.sqrt(a+1),this._w=.25/t,this._x=(l-h)*t,this._y=(o-c)*t,this._z=(s-e)*t):r>u&&r>f?(t=2*Math.sqrt(1+r-u-f),this._w=(l-h)/t,this._x=.25*t,this._y=(e+s)/t,this._z=(o+c)/t):u>f?(t=2*Math.sqrt(1+u-r-f),this._w=(o-c)/t,this._x=(e+s)/t,this._y=.25*t,this._z=(h+l)/t):(t=2*Math.sqrt(1+f-r-u),this._w=(s-e)/t,this._x=(o+c)/t,this._y=(h+l)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var n,t,i=1e-6;return function(r,u){return n===undefined&&(n=new THREE.Vector3),t=r.dot(u)+1,t<i?(t=0,Math.abs(r.x)>Math.abs(r.z)?n.set(-r.y,r.x,0):n.set(0,-r.z,r.y)):n.crossVectors(r,u),this._x=n.x,this._y=n.y,this._z=n.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(n){return this._x*n._x+this._y*n._y+this._z*n._z+this._w*n._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var n=this.length();return n===0?(this._x=0,this._y=0,this._z=0,this._w=1):(n=1/n,this._x=this._x*n,this._y=this._y*n,this._z=this._z*n,this._w=this._w*n),this.onChangeCallback(),this},multiply:function(n,t){return t!==undefined?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(n,t)):this.multiplyQuaternions(this,n)},multiplyQuaternions:function(n,t){var i=n._x,r=n._y,u=n._z,f=n._w,e=t._x,o=t._y,s=t._z,h=t._w;return this._x=i*h+f*e+r*s-u*o,this._y=r*h+f*o+u*e-i*s,this._z=u*h+f*s+i*o-r*e,this._w=f*h-i*e-r*o-u*s,this.onChangeCallback(),this},multiplyVector3:function(n){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),n.applyQuaternion(this)},slerp:function(n,t){var c,h,r,u;if(t===0)return this;if(t===1)return this.copy(n);var f=this._x,e=this._y,o=this._z,s=this._w,i=s*n._w+f*n._x+e*n._y+o*n._z;return(i<0?(this._w=-n._w,this._x=-n._x,this._y=-n._y,this._z=-n._z,i=-i):this.copy(n),i>=1)?(this._w=s,this._x=f,this._y=e,this._z=o,this):(c=Math.acos(i),h=Math.sqrt(1-i*i),Math.abs(h)<.001)?(this._w=.5*(s+this._w),this._x=.5*(f+this._x),this._y=.5*(e+this._y),this._z=.5*(o+this._z),this):(r=Math.sin((1-t)*c)/h,u=Math.sin(t*c)/h,this._w=s*r+this._w*u,this._x=f*r+this._x*u,this._y=e*r+this._y*u,this._z=o*r+this._z*u,this.onChangeCallback(),this)},equals:function(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._w===this._w},fromArray:function(n,t){return t===undefined&&(t=0),this._x=n[t],this._y=n[t+1],this._z=n[t+2],this._w=n[t+3],this.onChangeCallback(),this},toArray:function(n,t){return n===undefined&&(n=[]),t===undefined&&(t=0),n[t]=this._x,n[t+1]=this._y,n[t+2]=this._z,n[t+3]=this._w,n},onChange:function(n){return this.onChangeCallback=n,this},onChangeCallback:function(){}};THREE.Quaternion.slerp=function(n,t,i,r){return i.copy(n).slerp(t,r)};THREE.Vector2=function(n,t){this.x=n||0;this.y=t||0};THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(n){this.x=n},get height(){return this.y},set height(n){this.y=n},set:function(n,t){return this.x=n,this.y=t,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+n);}},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+n);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(n){return this.x=n.x,this.y=n.y,this},add:function(n,t){return t!==undefined?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this)},addScalar:function(n){return this.x+=n,this.y+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this},addScaledVector:function(n,t){return this.x+=n.x*t,this.y+=n.y*t,this},sub:function(n,t){return t!==undefined?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this)},subScalar:function(n){return this.x-=n,this.y-=n,this},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this},multiply:function(n){return this.x*=n.x,this.y*=n.y,this},multiplyScalar:function(n){return isFinite(n)?(this.x*=n,this.y*=n):(this.x=0,this.y=0),this},divide:function(n){return this.x/=n.x,this.y/=n.y,this},divideScalar:function(n){return this.multiplyScalar(1/n)},min:function(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this},max:function(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this},clamp:function(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this},clampScalar:function(){var n,t;return function(i,r){return n===undefined&&(n=new THREE.Vector2,t=new THREE.Vector2),n.set(i,i),t.set(r,r),this.clamp(n,t)}}(),clampLength:function(n,t){var i=this.length();return this.multiplyScalar(Math.max(n,Math.min(t,i))/i),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(n){return this.x*n.x+this.y*n.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(n){return Math.sqrt(this.distanceToSquared(n))},distanceToSquared:function(n){var t=this.x-n.x,i=this.y-n.y;return t*t+i*i},setLength:function(n){return this.multiplyScalar(n/this.length())},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this},lerpVectors:function(n,t,i){return this.subVectors(t,n).multiplyScalar(i).add(n),this},equals:function(n){return n.x===this.x&&n.y===this.y},fromArray:function(n,t){return t===undefined&&(t=0),this.x=n[t],this.y=n[t+1],this},toArray:function(n,t){return n===undefined&&(n=[]),t===undefined&&(t=0),n[t]=this.x,n[t+1]=this.y,n},fromAttribute:function(n,t,i){return i===undefined&&(i=0),t=t*n.itemSize+i,this.x=n.array[t],this.y=n.array[t+1],this},rotateAround:function(n,t){var i=Math.cos(t),r=Math.sin(t),u=this.x-n.x,f=this.y-n.y;return this.x=u*i-f*r+n.x,this.y=u*r+f*i+n.y,this}};THREE.Vector3=function(n,t,i){this.x=n||0;this.y=t||0;this.z=i||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(n,t,i){return this.x=n,this.y=t,this.z=i,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setZ:function(n){return this.z=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+n);}},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+n);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(n){return this.x=n.x,this.y=n.y,this.z=n.z,this},add:function(n,t){return t!==undefined?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this)},addScalar:function(n){return this.x+=n,this.y+=n,this.z+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this},addScaledVector:function(n,t){return this.x+=n.x*t,this.y+=n.y*t,this.z+=n.z*t,this},sub:function(n,t){return t!==undefined?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this)},subScalar:function(n){return this.x-=n,this.y-=n,this.z-=n,this},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this},multiply:function(n,t){return t!==undefined?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(n,t)):(this.x*=n.x,this.y*=n.y,this.z*=n.z,this)},multiplyScalar:function(n){return isFinite(n)?(this.x*=n,this.y*=n,this.z*=n):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(n,t){return this.x=n.x*t.x,this.y=n.y*t.y,this.z=n.z*t.z,this},applyEuler:function(){var n;return function(t){return t instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),n===undefined&&(n=new THREE.Quaternion),this.applyQuaternion(n.setFromEuler(t)),this}}(),applyAxisAngle:function(){var n;return function(t,i){return n===undefined&&(n=new THREE.Quaternion),this.applyQuaternion(n.setFromAxisAngle(t,i)),this}}(),applyMatrix3:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[3]*r+t[6]*u,this.y=t[1]*i+t[4]*r+t[7]*u,this.z=t[2]*i+t[5]*r+t[8]*u,this},applyMatrix4:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u+t[12],this.y=t[1]*i+t[5]*r+t[9]*u+t[13],this.z=t[2]*i+t[6]*r+t[10]*u+t[14],this},applyProjection:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements,f=1/(t[3]*i+t[7]*r+t[11]*u+t[15]);return this.x=(t[0]*i+t[4]*r+t[8]*u+t[12])*f,this.y=(t[1]*i+t[5]*r+t[9]*u+t[13])*f,this.z=(t[2]*i+t[6]*r+t[10]*u+t[14])*f,this},applyQuaternion:function(n){var f=this.x,e=this.y,o=this.z,t=n.x,i=n.y,r=n.z,u=n.w,s=u*f+i*o-r*e,h=u*e+r*f-t*o,c=u*o+t*e-i*f,l=-t*f-i*e-r*o;return this.x=s*u+l*-t+h*-r-c*-i,this.y=h*u+l*-i+c*-t-s*-r,this.z=c*u+l*-r+s*-i-h*-t,this},project:function(){var n;return function(t){return n===undefined&&(n=new THREE.Matrix4),n.multiplyMatrices(t.projectionMatrix,n.getInverse(t.matrixWorld)),this.applyProjection(n)}}(),unproject:function(){var n;return function(t){return n===undefined&&(n=new THREE.Matrix4),n.multiplyMatrices(t.matrixWorld,n.getInverse(t.projectionMatrix)),this.applyProjection(n)}}(),transformDirection:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u,this.y=t[1]*i+t[5]*r+t[9]*u,this.z=t[2]*i+t[6]*r+t[10]*u,this.normalize(),this},divide:function(n){return this.x/=n.x,this.y/=n.y,this.z/=n.z,this},divideScalar:function(n){return this.multiplyScalar(1/n)},min:function(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this},max:function(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this},clamp:function(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this.z=Math.max(n.z,Math.min(t.z,this.z)),this},clampScalar:function(){var n,t;return function(i,r){return n===undefined&&(n=new THREE.Vector3,t=new THREE.Vector3),n.set(i,i,i),t.set(r,r,r),this.clamp(n,t)}}(),clampLength:function(n,t){var i=this.length();return this.multiplyScalar(Math.max(n,Math.min(t,i))/i),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(n){return this.x*n.x+this.y*n.y+this.z*n.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(n){return this.multiplyScalar(n/this.length())},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this},lerpVectors:function(n,t,i){return this.subVectors(t,n).multiplyScalar(i).add(n),this},cross:function(n,t){if(t!==undefined)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(n,t);var i=this.x,r=this.y,u=this.z;return this.x=r*n.z-u*n.y,this.y=u*n.x-i*n.z,this.z=i*n.y-r*n.x,this},crossVectors:function(n,t){var i=n.x,r=n.y,u=n.z,f=t.x,e=t.y,o=t.z;return this.x=r*o-u*e,this.y=u*f-i*o,this.z=i*e-r*f,this},projectOnVector:function(){var n,t;return function(i){return n===undefined&&(n=new THREE.Vector3),n.copy(i).normalize(),t=this.dot(n),this.copy(n).multiplyScalar(t)}}(),projectOnPlane:function(){var n;return function(t){return n===undefined&&(n=new THREE.Vector3),n.copy(this).projectOnVector(t),this.sub(n)}}(),reflect:function(){var n;return function(t){return n===undefined&&(n=new THREE.Vector3),this.sub(n.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(n){var t=this.dot(n)/(this.length()*n.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(n){return Math.sqrt(this.distanceToSquared(n))},distanceToSquared:function(n){var t=this.x-n.x,i=this.y-n.y,r=this.z-n.z;return t*t+i*i+r*r},setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(n){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(n)},getScaleFromMatrix:function(n){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(n)},getColumnFromMatrix:function(n,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(n,t)},setFromMatrixPosition:function(n){return this.x=n.elements[12],this.y=n.elements[13],this.z=n.elements[14],this},setFromMatrixScale:function(n){var t=this.set(n.elements[0],n.elements[1],n.elements[2]).length(),i=this.set(n.elements[4],n.elements[5],n.elements[6]).length(),r=this.set(n.elements[8],n.elements[9],n.elements[10]).length();return this.x=t,this.y=i,this.z=r,this},setFromMatrixColumn:function(n,t){var i=n*4,r=t.elements;return this.x=r[i],this.y=r[i+1],this.z=r[i+2],this},equals:function(n){return n.x===this.x&&n.y===this.y&&n.z===this.z},fromArray:function(n,t){return t===undefined&&(t=0),this.x=n[t],this.y=n[t+1],this.z=n[t+2],this},toArray:function(n,t){return n===undefined&&(n=[]),t===undefined&&(t=0),n[t]=this.x,n[t+1]=this.y,n[t+2]=this.z,n},fromAttribute:function(n,t,i){return i===undefined&&(i=0),t=t*n.itemSize+i,this.x=n.array[t],this.y=n.array[t+1],this.z=n.array[t+2],this}};THREE.Vector4=function(n,t,i,r){this.x=n||0;this.y=t||0;this.z=i||0;this.w=r!==undefined?r:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(n,t,i,r){return this.x=n,this.y=t,this.z=i,this.w=r,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setZ:function(n){return this.z=n,this},setW:function(n){return this.w=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+n);}},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+n);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(n){return this.x=n.x,this.y=n.y,this.z=n.z,this.w=n.w!==undefined?n.w:1,this},add:function(n,t){return t!==undefined?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this.w+=n.w,this)},addScalar:function(n){return this.x+=n,this.y+=n,this.z+=n,this.w+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this.w=n.w+t.w,this},addScaledVector:function(n,t){return this.x+=n.x*t,this.y+=n.y*t,this.z+=n.z*t,this.w+=n.w*t,this},sub:function(n,t){return t!==undefined?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this.w-=n.w,this)},subScalar:function(n){return this.x-=n,this.y-=n,this.z-=n,this.w-=n,this},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this.w=n.w-t.w,this},multiplyScalar:function(n){return isFinite(n)?(this.x*=n,this.y*=n,this.z*=n,this.w*=n):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(n){var i=this.x,r=this.y,u=this.z,f=this.w,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u+t[12]*f,this.y=t[1]*i+t[5]*r+t[9]*u+t[13]*f,this.z=t[2]*i+t[6]*r+t[10]*u+t[14]*f,this.w=t[3]*i+t[7]*r+t[11]*u+t[15]*f,this},divideScalar:function(n){return this.multiplyScalar(1/n)},setAxisAngleFromQuaternion:function(n){this.w=2*Math.acos(n.w);var t=Math.sqrt(1-n.w*n.w);return t<.0001?(this.x=1,this.y=0,this.z=0):(this.x=n.x/t,this.y=n.y/t,this.z=n.z/t),this},setAxisAngleFromRotationMatrix:function(n){var g,t,i,r,f=.01,v=.1,u=n.elements,b=u[0],e=u[4],o=u[8],s=u[1],k=u[5],h=u[9],c=u[2],l=u[6],d=u[10],a;if(Math.abs(e-s)<f&&Math.abs(o-c)<f&&Math.abs(h-l)<f){if(Math.abs(e+s)<v&&Math.abs(o+c)<v&&Math.abs(h+l)<v&&Math.abs(b+k+d-3)<v)return this.set(1,0,0,0),this;g=Math.PI;var y=(b+1)/2,p=(k+1)/2,w=(d+1)/2,nt=(e+s)/4,tt=(o+c)/4,it=(h+l)/4;return y>p&&y>w?y<f?(t=0,i=.707106781,r=.707106781):(t=Math.sqrt(y),i=nt/t,r=tt/t):p>w?p<f?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(p),t=nt/i,r=it/i):w<f?(t=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),t=tt/r,i=it/r),this.set(t,i,r,g),this}return a=Math.sqrt((l-h)*(l-h)+(o-c)*(o-c)+(s-e)*(s-e)),Math.abs(a)<.001&&(a=1),this.x=(l-h)/a,this.y=(o-c)/a,this.z=(s-e)/a,this.w=Math.acos((b+k+d-1)/2),this},min:function(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this.w=Math.min(this.w,n.w),this},max:function(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this.w=Math.max(this.w,n.w),this},clamp:function(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this.z=Math.max(n.z,Math.min(t.z,this.z)),this.w=Math.max(n.w,Math.min(t.w,this.w)),this},clampScalar:function(){var n,t;return function(i,r){return n===undefined&&(n=new THREE.Vector4,t=new THREE.Vector4),n.set(i,i,i,i),t.set(r,r,r,r),this.clamp(n,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(n){return this.x*n.x+this.y*n.y+this.z*n.z+this.w*n.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(n){return this.multiplyScalar(n/this.length())},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this.w+=(n.w-this.w)*t,this},lerpVectors:function(n,t,i){return this.subVectors(t,n).multiplyScalar(i).add(n),this},equals:function(n){return n.x===this.x&&n.y===this.y&&n.z===this.z&&n.w===this.w},fromArray:function(n,t){return t===undefined&&(t=0),this.x=n[t],this.y=n[t+1],this.z=n[t+2],this.w=n[t+3],this},toArray:function(n,t){return n===undefined&&(n=[]),t===undefined&&(t=0),n[t]=this.x,n[t+1]=this.y,n[t+2]=this.z,n[t+3]=this.w,n},fromAttribute:function(n,t,i){return i===undefined&&(i=0),t=t*n.itemSize+i,this.x=n.array[t],this.y=n.array[t+1],this.z=n.array[t+2],this.w=n.array[t+3],this}};THREE.Euler=function(n,t,i,r){this._x=n||0;this._y=t||0;this._z=i||0;this._order=r||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(n){this._x=n;this.onChangeCallback()},get y(){return this._y},set y(n){this._y=n;this.onChangeCallback()},get z(){return this._z},set z(n){this._z=n;this.onChangeCallback()},get order(){return this._order},set order(n){this._order=n;this.onChangeCallback()},set:function(n,t,i,r){return this._x=n,this._y=t,this._z=i,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(n){return this._x=n._x,this._y=n._y,this._z=n._z,this._order=n._order,this.onChangeCallback(),this},setFromRotationMatrix:function(n,t,i){var u=THREE.Math.clamp,r=n.elements,f=r[0],s=r[4],h=r[8],c=r[1],e=r[5],l=r[9],a=r[2],v=r[6],o=r[10];return t=t||this._order,t==="XYZ"?(this._y=Math.asin(u(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-l,o),this._z=Math.atan2(-s,f)):(this._x=Math.atan2(v,e),this._z=0)):t==="YXZ"?(this._x=Math.asin(-u(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(h,o),this._z=Math.atan2(c,e)):(this._y=Math.atan2(-a,f),this._z=0)):t==="ZXY"?(this._x=Math.asin(u(v,-1,1)),Math.abs(v)<.99999?(this._y=Math.atan2(-a,o),this._z=Math.atan2(-s,e)):(this._y=0,this._z=Math.atan2(c,f))):t==="ZYX"?(this._y=Math.asin(-u(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(v,o),this._z=Math.atan2(c,f)):(this._x=0,this._z=Math.atan2(-s,e))):t==="YZX"?(this._z=Math.asin(u(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,e),this._y=Math.atan2(-a,f)):(this._x=0,this._y=Math.atan2(h,o))):t==="XZY"?(this._z=Math.asin(-u(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(v,e),this._y=Math.atan2(h,f)):(this._x=Math.atan2(-l,o),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,i!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var n;return function(t,i,r){return n===undefined&&(n=new THREE.Matrix4),n.makeRotationFromQuaternion(t),this.setFromRotationMatrix(n,i,r),this}}(),setFromVector3:function(n,t){return this.set(n.x,n.y,n.z,t||this._order)},reorder:function(){var n=new THREE.Quaternion;return function(t){n.setFromEuler(this);this.setFromQuaternion(n,t)}}(),equals:function(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._order===this._order},fromArray:function(n){return this._x=n[0],this._y=n[1],this._z=n[2],n[3]!==undefined&&(this._order=n[3]),this.onChangeCallback(),this},toArray:function(n,t){return n===undefined&&(n=[]),t===undefined&&(t=0),n[t]=this._x,n[t+1]=this._y,n[t+2]=this._z,n[t+3]=this._order,n},toVector3:function(n){return n?n.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(n){return this.onChangeCallback=n,this},onChangeCallback:function(){}};THREE.Line3=function(n,t){this.start=n!==undefined?n:new THREE.Vector3;this.end=t!==undefined?t:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(n,t){return this.start.copy(n),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.start.copy(n.start),this.end.copy(n.end),this},center:function(n){var t=n||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(n){var t=n||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(n,t){var i=t||new THREE.Vector3;return this.delta(i).multiplyScalar(n).add(this.start)},closestPointToPointParameter:function(){var t=new THREE.Vector3,n=new THREE.Vector3;return function(i,r){t.subVectors(i,this.start);n.subVectors(this.end,this.start);var f=n.dot(n),e=n.dot(t),u=e/f;return r&&(u=THREE.Math.clamp(u,0,1)),u}}(),closestPointToPoint:function(n,t,i){var r=this.closestPointToPointParameter(n,t),u=i||new THREE.Vector3;return this.delta(u).multiplyScalar(r).add(this.start)},applyMatrix4:function(n){return this.start.applyMatrix4(n),this.end.applyMatrix4(n),this},equals:function(n){return n.start.equals(this.start)&&n.end.equals(this.end)}};THREE.Box3=function(n,t){this.min=n!==undefined?n:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=t!==undefined?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(n,t){return this.min.copy(n),this.max.copy(t),this},setFromPoints:function(n){this.makeEmpty();for(var t=0,i=n.length;t<i;t++)this.expandByPoint(n[t]);return this},setFromCenterAndSize:function(){var n=new THREE.Vector3;return function(t,i){var r=n.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var n=new THREE.Vector3;return function(t){var i=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var u=t.geometry,o,f,r,e;if(u!==undefined)if(u instanceof THREE.Geometry)for(o=u.vertices,r=0,e=o.length;r<e;r++)n.copy(o[r]),n.applyMatrix4(t.matrixWorld),i.expandByPoint(n);else if(u instanceof THREE.BufferGeometry&&u.attributes.position!==undefined)for(f=u.attributes.position.array,r=0,e=f.length;r<e;r+=3)n.set(f[r],f[r+1],f[r+2]),n.applyMatrix4(t.matrixWorld),i.expandByPoint(n)}),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.min.copy(n.min),this.max.copy(n.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(n){var t=n||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(n){var t=n||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(n){return this.min.min(n),this.max.max(n),this},expandByVector:function(n){return this.min.sub(n),this.max.add(n),this},expandByScalar:function(n){return this.min.addScalar(-n),this.max.addScalar(n),this},containsPoint:function(n){return n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y||n.z<this.min.z||n.z>this.max.z?!1:!0},containsBox:function(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y&&this.min.z<=n.min.z&&n.max.z<=this.max.z?!0:!1},getParameter:function(n,t){var i=t||new THREE.Vector3;return i.set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y),(n.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(n){return n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y||n.max.z<this.min.z||n.min.z>this.max.z?!1:!0},clampPoint:function(n,t){var i=t||new THREE.Vector3;return i.copy(n).clamp(this.min,this.max)},distanceToPoint:function(){var n=new THREE.Vector3;return function(t){var i=n.copy(t).clamp(this.min,this.max);return i.sub(t).length()}}(),getBoundingSphere:function(){var n=new THREE.Vector3;return function(t){var i=t||new THREE.Sphere;return i.center=this.center(),i.radius=this.size(n).length()*.5,i}}(),intersect:function(n){return this.min.max(n.min),this.max.min(n.max),this},union:function(n){return this.min.min(n.min),this.max.max(n.max),this},applyMatrix4:function(){var n=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return n[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),n[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),n[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),n[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),n[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),n[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),n[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),n[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(n),this}}(),translate:function(n){return this.min.add(n),this.max.add(n),this},equals:function(n){return n.min.equals(this.min)&&n.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(n,t,i,r,u,f,e,o,s){var h=this.elements;return h[0]=n,h[3]=t,h[6]=i,h[1]=r,h[4]=u,h[7]=f,h[2]=e,h[5]=o,h[8]=s,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(n){var t=n.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(n){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},multiplyVector3Array:function(n){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(n)},applyToVector3Array:function(){var n;return function(t,i,r){n===undefined&&(n=new THREE.Vector3);i===undefined&&(i=0);r===undefined&&(r=t.length);for(var f=0,u=i;f<r;f+=3,u+=3)n.fromArray(t,u),n.applyMatrix3(this),n.toArray(t,u);return t}}(),applyToBuffer:function(){var n;return function(t,i,r){n===undefined&&(n=new THREE.Vector3);i===undefined&&(i=0);r===undefined&&(r=t.length/t.itemSize);for(var f=0,u=i;f<r;f++,u++)n.x=t.getX(u),n.y=t.getY(u),n.z=t.getZ(u),n.applyMatrix3(this),t.setXYZ(n.x,n.y,n.z);return t}}(),multiplyScalar:function(n){var t=this.elements;return t[0]*=n,t[3]*=n,t[6]*=n,t[1]*=n,t[4]*=n,t[7]*=n,t[2]*=n,t[5]*=n,t[8]*=n,this},determinant:function(){var n=this.elements,t=n[0],i=n[1],r=n[2],u=n[3],f=n[4],e=n[5],o=n[6],s=n[7],h=n[8];return t*f*h-t*e*s-i*u*h+i*e*o+r*u*s-r*f*o},getInverse:function(n,t){var i=n.elements,r=this.elements,u,f;if(r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4],u=i[0]*r[0]+i[1]*r[3]+i[2]*r[6],u===0){if(f="Matrix3.getInverse(): can't invert matrix, determinant is 0",t||!1)throw new Error(f);else console.warn(f);return this.identity(),this}return this.multiplyScalar(1/u),this},transpose:function(){var t,n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this},flattenToArrayOffset:function(n,t){var i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n},getNormalMatrix:function(n){return this.getInverse(n).transpose(),this},transposeIntoArray:function(n){var t=this.elements;return n[0]=t[0],n[1]=t[3],n[2]=t[6],n[3]=t[1],n[4]=t[4],n[5]=t[7],n[6]=t[2],n[7]=t[5],n[8]=t[8],this},fromArray:function(n){return this.elements.set(n),this},toArray:function(){var n=this.elements;return[n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8]]}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p){var w=this.elements;return w[0]=n,w[4]=t,w[8]=i,w[12]=r,w[1]=u,w[5]=f,w[9]=e,w[13]=o,w[2]=s,w[6]=h,w[10]=c,w[14]=l,w[3]=a,w[7]=v,w[11]=y,w[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(n){return this.elements.set(n.elements),this},extractPosition:function(n){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(n)},copyPosition:function(n){var t=this.elements,i=n.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this},extractBasis:function(n,t,i){var r=this.elements;return n.set(r[0],r[1],r[2]),t.set(r[4],r[5],r[6]),i.set(r[8],r[9],r[10]),this},makeBasis:function(n,t,i){return this.set(n.x,t.x,i.x,0,n.y,t.y,i.y,0,n.z,t.z,i.z,0,0,0,0,1),this},extractRotation:function(){var n;return function(t){n===undefined&&(n=new THREE.Vector3);var r=this.elements,i=t.elements,u=1/n.set(i[0],i[1],i[2]).length(),f=1/n.set(i[4],i[5],i[6]).length(),e=1/n.set(i[8],i[9],i[10]).length();return r[0]=i[0]*u,r[1]=i[1]*u,r[2]=i[2]*u,r[4]=i[4]*f,r[5]=i[5]*f,r[6]=i[6]*f,r[8]=i[8]*e,r[9]=i[9]*e,r[10]=i[10]*e,this}}(),makeRotationFromEuler:function(n){n instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,g=n.x,nt=n.y,tt=n.z,f=Math.cos(g),i=Math.sin(g),e=Math.cos(nt),r=Math.sin(nt),o=Math.cos(tt),u=Math.sin(tt);if(n.order==="XYZ"){var s=f*o,h=f*u,c=i*o,l=i*u;t[0]=e*o;t[4]=-e*u;t[8]=r;t[1]=h+c*r;t[5]=s-l*r;t[9]=-i*e;t[2]=l-s*r;t[6]=c+h*r;t[10]=f*e}else if(n.order==="YXZ"){var a=e*o,v=e*u,y=r*o,p=r*u;t[0]=a+p*i;t[4]=y*i-v;t[8]=f*r;t[1]=f*u;t[5]=f*o;t[9]=-i;t[2]=v*i-y;t[6]=p+a*i;t[10]=f*e}else if(n.order==="ZXY"){var a=e*o,v=e*u,y=r*o,p=r*u;t[0]=a-p*i;t[4]=-f*u;t[8]=y+v*i;t[1]=v+y*i;t[5]=f*o;t[9]=p-a*i;t[2]=-f*r;t[6]=i;t[10]=f*e}else if(n.order==="ZYX"){var s=f*o,h=f*u,c=i*o,l=i*u;t[0]=e*o;t[4]=c*r-h;t[8]=s*r+l;t[1]=e*u;t[5]=l*r+s;t[9]=h*r-c;t[2]=-r;t[6]=i*e;t[10]=f*e}else if(n.order==="YZX"){var w=f*e,b=f*r,k=i*e,d=i*r;t[0]=e*o;t[4]=d-w*u;t[8]=k*u+b;t[1]=u;t[5]=f*o;t[9]=-i*o;t[2]=-r*o;t[6]=b*u+k;t[10]=w-d*u}else if(n.order==="XZY"){var w=f*e,b=f*r,k=i*e,d=i*r;t[0]=e*o;t[4]=-u;t[8]=r*o;t[1]=w*u+d;t[5]=f*o;t[9]=b*u-k;t[2]=k*u-b;t[6]=i*o;t[10]=d*u+w}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(n){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(n)},makeRotationFromQuaternion:function(n){var t=this.elements,i=n.x,r=n.y,f=n.z,e=n.w,s=i+i,o=r+r,u=f+f,h=i*s,c=i*o,l=i*u,a=r*o,v=r*u,y=f*u,p=e*s,w=e*o,b=e*u;return t[0]=1-(a+y),t[4]=c-b,t[8]=l+w,t[1]=c+b,t[5]=1-(h+y),t[9]=v-p,t[2]=l-w,t[6]=v+p,t[10]=1-(h+a),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var t,i,n;return function(r,u,f){t===undefined&&(t=new THREE.Vector3);i===undefined&&(i=new THREE.Vector3);n===undefined&&(n=new THREE.Vector3);var e=this.elements;return n.subVectors(r,u).normalize(),n.lengthSq()===0&&(n.z=1),t.crossVectors(f,n).normalize(),t.lengthSq()===0&&(n.x+=.0001,t.crossVectors(f,n).normalize()),i.crossVectors(n,t),e[0]=t.x,e[4]=i.x,e[8]=n.x,e[1]=t.y,e[5]=i.y,e[9]=n.y,e[2]=t.z,e[6]=i.z,e[10]=n.z,this}}(),multiply:function(n,t){return t!==undefined?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(n,t)):this.multiplyMatrices(this,n)},multiplyMatrices:function(n,t){var i=n.elements,r=t.elements,u=this.elements,f=i[0],e=i[4],o=i[8],s=i[12],h=i[1],c=i[5],l=i[9],a=i[13],v=i[2],y=i[6],p=i[10],w=i[14],b=i[3],k=i[7],d=i[11],g=i[15],nt=r[0],tt=r[4],it=r[8],rt=r[12],ut=r[1],ft=r[5],et=r[9],ot=r[13],st=r[2],ht=r[6],ct=r[10],lt=r[14],at=r[3],vt=r[7],yt=r[11],pt=r[15];return u[0]=f*nt+e*ut+o*st+s*at,u[4]=f*tt+e*ft+o*ht+s*vt,u[8]=f*it+e*et+o*ct+s*yt,u[12]=f*rt+e*ot+o*lt+s*pt,u[1]=h*nt+c*ut+l*st+a*at,u[5]=h*tt+c*ft+l*ht+a*vt,u[9]=h*it+c*et+l*ct+a*yt,u[13]=h*rt+c*ot+l*lt+a*pt,u[2]=v*nt+y*ut+p*st+w*at,u[6]=v*tt+y*ft+p*ht+w*vt,u[10]=v*it+y*et+p*ct+w*yt,u[14]=v*rt+y*ot+p*lt+w*pt,u[3]=b*nt+k*ut+d*st+g*at,u[7]=b*tt+k*ft+d*ht+g*vt,u[11]=b*it+k*et+d*ct+g*yt,u[15]=b*rt+k*ot+d*lt+g*pt,this},multiplyToArray:function(n,t,i){var r=this.elements;return this.multiplyMatrices(n,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(n){var t=this.elements;return t[0]*=n,t[4]*=n,t[8]*=n,t[12]*=n,t[1]*=n,t[5]*=n,t[9]*=n,t[13]*=n,t[2]*=n,t[6]*=n,t[10]*=n,t[14]*=n,t[3]*=n,t[7]*=n,t[11]*=n,t[15]*=n,this},multiplyVector3:function(n){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),n.applyProjection(this)},multiplyVector4:function(n){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector3Array:function(n){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(n)},applyToVector3Array:function(){var n;return function(t,i,r){n===undefined&&(n=new THREE.Vector3);i===undefined&&(i=0);r===undefined&&(r=t.length);for(var f=0,u=i;f<r;f+=3,u+=3)n.fromArray(t,u),n.applyMatrix4(this),n.toArray(t,u);return t}}(),applyToBuffer:function(){var n;return function(t,i,r){n===undefined&&(n=new THREE.Vector3);i===undefined&&(i=0);r===undefined&&(r=t.length/t.itemSize);for(var f=0,u=i;f<r;f++,u++)n.x=t.getX(u),n.y=t.getY(u),n.z=t.getZ(u),n.applyMatrix4(this),t.setXYZ(n.x,n.y,n.z);return t}}(),rotateAxis:function(n){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");n.transformDirection(this)},crossVector:function(n){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},determinant:function(){var n=this.elements,t=n[0],i=n[4],r=n[8],u=n[12],f=n[1],e=n[5],o=n[9],s=n[13],h=n[2],c=n[6],l=n[10],a=n[14],v=n[3],y=n[7],p=n[11],w=n[15];return v*(+u*o*c-r*s*c-u*e*l+i*s*l+r*e*a-i*o*a)+y*(+t*o*a-t*s*l+u*f*l-r*f*a+r*s*h-u*o*h)+p*(+t*s*c-t*e*a-u*f*c+i*f*a+u*e*h-i*s*h)+w*(-r*e*h-t*o*c+t*e*l+r*f*c-i*f*l+i*o*h)},transpose:function(){var n=this.elements,t;return t=n[1],n[1]=n[4],n[4]=t,t=n[2],n[2]=n[8],n[8]=t,t=n[6],n[6]=n[9],n[9]=t,t=n[3],n[3]=n[12],n[12]=t,t=n[7],n[7]=n[13],n[13]=t,t=n[11],n[11]=n[14],n[14]=t,this},flattenToArrayOffset:function(n,t){var i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n[t+9]=i[9],n[t+10]=i[10],n[t+11]=i[11],n[t+12]=i[12],n[t+13]=i[13],n[t+14]=i[14],n[t+15]=i[15],n},getPosition:function(){var n;return function(){n===undefined&&(n=new THREE.Vector3);console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return n.set(t[12],t[13],t[14])}}(),setPosition:function(n){var t=this.elements;return t[12]=n.x,t[13]=n.y,t[14]=n.z,this},getInverse:function(n,t){var i=this.elements,d=n.elements,r=d[0],o=d[4],s=d[8],h=d[12],u=d[1],c=d[5],l=d[9],a=d[13],f=d[2],v=d[6],y=d[10],p=d[14],e=d[3],w=d[7],b=d[11],k=d[15],g,nt;if(i[0]=l*p*w-a*y*w+a*v*b-c*p*b-l*v*k+c*y*k,i[4]=h*y*w-s*p*w-h*v*b+o*p*b+s*v*k-o*y*k,i[8]=s*a*w-h*l*w+h*c*b-o*a*b-s*c*k+o*l*k,i[12]=h*l*v-s*a*v-h*c*y+o*a*y+s*c*p-o*l*p,i[1]=a*y*e-l*p*e-a*f*b+u*p*b+l*f*k-u*y*k,i[5]=s*p*e-h*y*e+h*f*b-r*p*b-s*f*k+r*y*k,i[9]=h*l*e-s*a*e-h*u*b+r*a*b+s*u*k-r*l*k,i[13]=s*a*f-h*l*f+h*u*y-r*a*y-s*u*p+r*l*p,i[2]=c*p*e-a*v*e+a*f*w-u*p*w-c*f*k+u*v*k,i[6]=h*v*e-o*p*e-h*f*w+r*p*w+o*f*k-r*v*k,i[10]=o*a*e-h*c*e+h*u*w-r*a*w-o*u*k+r*c*k,i[14]=h*c*f-o*a*f-h*u*v+r*a*v+o*u*p-r*c*p,i[3]=l*v*e-c*y*e-l*f*w+u*y*w+c*f*b-u*v*b,i[7]=o*y*e-s*v*e+s*f*w-r*y*w-o*f*b+r*v*b,i[11]=s*c*e-o*l*e-s*u*w+r*l*w+o*u*b-r*c*b,i[15]=o*l*f-s*c*f+s*u*v-r*l*v-o*u*y+r*c*y,g=r*i[0]+u*i[4]+f*i[8]+e*i[12],g===0){if(nt="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0",t||!1)throw new Error(nt);else console.warn(nt);return this.identity(),this}return this.multiplyScalar(1/g),this},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(n){var t=this.elements,i=n.x,r=n.y,u=n.z;return t[0]*=i,t[4]*=r,t[8]*=u,t[1]*=i,t[5]*=r,t[9]*=u,t[2]*=i,t[6]*=r,t[10]*=u,t[3]*=i,t[7]*=r,t[11]*=u,this},getMaxScaleOnAxis:function(){var n=this.elements,t=n[0]*n[0]+n[1]*n[1]+n[2]*n[2],i=n[4]*n[4]+n[5]*n[5]+n[6]*n[6],r=n[8]*n[8]+n[9]*n[9]+n[10]*n[10];return Math.sqrt(Math.max(t,i,r))},makeTranslation:function(n,t,i){return this.set(1,0,0,n,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this},makeRotationY:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this},makeRotationZ:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(n,t){var e=Math.cos(t),r=Math.sin(t),s=1-e,o=n.x,u=n.y,i=n.z,f=s*o,h=s*u;return this.set(f*o+e,f*u-r*i,f*i+r*u,0,f*u+r*i,h*u+e,h*i-r*o,0,f*i-r*u,h*i+r*o,s*i*i+e,0,0,0,0,1),this},makeScale:function(n,t,i){return this.set(n,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},compose:function(n,t,i){return this.makeRotationFromQuaternion(t),this.scale(i),this.setPosition(n),this},decompose:function(){var t,n;return function(i,r,u){t===undefined&&(t=new THREE.Vector3);n===undefined&&(n=new THREE.Matrix4);var f=this.elements,e=t.set(f[0],f[1],f[2]).length(),c=t.set(f[4],f[5],f[6]).length(),l=t.set(f[8],f[9],f[10]).length(),a=this.determinant();a<0&&(e=-e);i.x=f[12];i.y=f[13];i.z=f[14];n.elements.set(this.elements);var o=1/e,s=1/c,h=1/l;return n.elements[0]*=o,n.elements[1]*=o,n.elements[2]*=o,n.elements[4]*=s,n.elements[5]*=s,n.elements[6]*=s,n.elements[8]*=h,n.elements[9]*=h,n.elements[10]*=h,r.setFromRotationMatrix(n),u.x=e,u.y=c,u.z=l,this}}(),makeFrustum:function(n,t,i,r,u,f){var e=this.elements,o=2*u/(t-n),s=2*u/(r-i),h=(t+n)/(t-n),c=(r+i)/(r-i),l=-(f+u)/(f-u),a=-2*f*u/(f-u);return e[0]=o,e[4]=0,e[8]=h,e[12]=0,e[1]=0,e[5]=s,e[9]=c,e[13]=0,e[2]=0,e[6]=0,e[10]=l,e[14]=a,e[3]=0,e[7]=0,e[11]=-1,e[15]=0,this},makePerspective:function(n,t,i,r){var u=i*Math.tan(THREE.Math.degToRad(n*.5)),f=-u,e=f*t,o=u*t;return this.makeFrustum(e,o,f,u,i,r)},makeOrthographic:function(n,t,i,r,u,f){var e=this.elements,o=t-n,s=i-r,h=f-u,c=(t+n)/o,l=(i+r)/s,a=(f+u)/h;return e[0]=2/o,e[4]=0,e[8]=0,e[12]=-c,e[1]=0,e[5]=2/s,e[9]=0,e[13]=-l,e[2]=0,e[6]=0,e[10]=-2/h,e[14]=-a,e[3]=0,e[7]=0,e[11]=0,e[15]=1,this},equals:function(n){for(var i=this.elements,r=n.elements,t=0;t<16;t++)if(i[t]!==r[t])return!1;return!0},fromArray:function(n){return this.elements.set(n),this},toArray:function(){var n=this.elements;return[n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]]}};THREE.Ray=function(n,t){this.origin=n!==undefined?n:new THREE.Vector3;this.direction=t!==undefined?t:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(n,t){return this.origin.copy(n),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.origin.copy(n.origin),this.direction.copy(n.direction),this},at:function(n,t){var i=t||new THREE.Vector3;return i.copy(this.direction).multiplyScalar(n).add(this.origin)},recast:function(){var n=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,n)),this}}(),closestPointToPoint:function(n,t){var i=t||new THREE.Vector3,r;return(i.subVectors(n,this.origin),r=i.dot(this.direction),r<0)?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(n){return Math.sqrt(this.distanceSqToPoint(n))},distanceSqToPoint:function(){var n=new THREE.Vector3;return function(t){var i=n.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):(n.copy(this.direction).multiplyScalar(i).add(this.origin),n.distanceToSquared(t))}}(),distanceSqToSegment:function(){var i=new THREE.Vector3,n=new THREE.Vector3,t=new THREE.Vector3;return function(r,u,f,e){var b;i.copy(r).add(u).multiplyScalar(.5);n.copy(u).sub(r).normalize();t.copy(this.origin).sub(i);var h=r.distanceTo(u)*.5,c=-this.direction.dot(n),a=t.dot(this.direction),l=-t.dot(n),y=t.lengthSq(),w=Math.abs(1-c*c),s,o,v,p;return w>0?(s=c*l-a,o=c*a-l,p=h*w,s>=0?o>=-p?o<=p?(b=1/w,s*=b,o*=b,v=s*(s+c*o+2*a)+o*(c*s+o+2*l)+y):(o=h,s=Math.max(0,-(c*o+a)),v=-s*s+o*(o+2*l)+y):(o=-h,s=Math.max(0,-(c*o+a)),v=-s*s+o*(o+2*l)+y):o<=-p?(s=Math.max(0,-(-c*h+a)),o=s>0?-h:Math.min(Math.max(-h,-l),h),v=-s*s+o*(o+2*l)+y):o<=p?(s=0,o=Math.min(Math.max(-h,-l),h),v=o*(o+2*l)+y):(s=Math.max(0,-(c*h+a)),o=s>0?h:Math.min(Math.max(-h,-l),h),v=-s*s+o*(o+2*l)+y)):(o=c>0?-h:h,s=Math.max(0,-(c*o+a)),v=-s*s+o*(o+2*l)+y),f&&f.copy(this.direction).multiplyScalar(s).add(this.origin),e&&e.copy(n).multiplyScalar(o).add(i),v}}(),isIntersectionSphere:function(n){return this.distanceToPoint(n.center)<=n.radius},intersectSphere:function(){var n=new THREE.Vector3;return function(t,i){n.subVectors(t.center,this.origin);var r=n.dot(this.direction),f=n.dot(n)-r*r,e=t.radius*t.radius;if(f>e)return null;var o=Math.sqrt(e-f),u=r-o,s=r+o;return u<0&&s<0?null:u<0?this.at(s,i):this.at(u,i)}}(),isIntersectionPlane:function(n){var t=n.distanceToPoint(this.origin),i;return t===0?!0:(i=n.normal.dot(this.direction),i*t<0)?!0:!1},distanceToPlane:function(n){var i=n.normal.dot(this.direction),t;return i===0?n.distanceToPoint(this.origin)===0?0:null:(t=-(this.origin.dot(n.normal)+n.constant)/i,t>=0?t:null)},intersectPlane:function(n,t){var i=this.distanceToPlane(n);return i===null?null:this.at(i,t)},isIntersectionBox:function(){var n=new THREE.Vector3;return function(t){return this.intersectBox(t,n)!==null}}(),intersectBox:function(n,t){var i,r,f,e,o,s,h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return(h>=0?(i=(n.min.x-u.x)*h,r=(n.max.x-u.x)*h):(i=(n.max.x-u.x)*h,r=(n.min.x-u.x)*h),c>=0?(f=(n.min.y-u.y)*c,e=(n.max.y-u.y)*c):(f=(n.max.y-u.y)*c,e=(n.min.y-u.y)*c),i>e||f>r)?null:((f>i||i!==i)&&(i=f),(e<r||r!==r)&&(r=e),l>=0?(o=(n.min.z-u.z)*l,s=(n.max.z-u.z)*l):(o=(n.max.z-u.z)*l,s=(n.min.z-u.z)*l),i>s||o>r)?null:((o>i||i!==i)&&(i=o),(s<r||r!==r)&&(r=s),r<0)?null:this.at(i>=0?i:r,t)},intersectTriangle:function(){var n=new THREE.Vector3,i=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(u,f,e,o,s){var h,c,l,a,v;if(i.subVectors(f,u),t.subVectors(e,u),r.crossVectors(i,t),h=this.direction.dot(r),h>0){if(o)return null;c=1}else if(h<0)c=-1,h=-h;else return null;return(n.subVectors(this.origin,u),l=c*this.direction.dot(t.crossVectors(n,t)),l<0)?null:(a=c*this.direction.dot(i.cross(n)),a<0)?null:l+a>h?null:(v=-c*n.dot(r),v<0)?null:this.at(v/h,s)}}(),applyMatrix4:function(n){return this.direction.add(this.origin).applyMatrix4(n),this.origin.applyMatrix4(n),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(n){return n.origin.equals(this.origin)&&n.direction.equals(this.direction)}};THREE.Sphere=function(n,t){this.center=n!==undefined?n:new THREE.Vector3;this.radius=t!==undefined?t:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(n,t){return this.center.copy(n),this.radius=t,this},setFromPoints:function(){var n=new THREE.Box3;return function(t,i){var f=this.center,r,u,e;for(i!==undefined?f.copy(i):n.setFromPoints(t).center(f),r=0,u=0,e=t.length;u<e;u++)r=Math.max(r,f.distanceToSquared(t[u]));return this.radius=Math.sqrt(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.center.copy(n.center),this.radius=n.radius,this},empty:function(){return this.radius<=0},containsPoint:function(n){return n.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(n){return n.distanceTo(this.center)-this.radius},intersectsSphere:function(n){var t=this.radius+n.radius;return n.center.distanceToSquared(this.center)<=t*t},clampPoint:function(n,t){var r=this.center.distanceToSquared(n),i=t||new THREE.Vector3;return i.copy(n),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(n){var t=n||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(n){return this.center.applyMatrix4(n),this.radius=this.radius*n.getMaxScaleOnAxis(),this},translate:function(n){return this.center.add(n),this},equals:function(n){return n.center.equals(this.center)&&n.radius===this.radius}};THREE.Frustum=function(n,t,i,r,u,f){this.planes=[n!==undefined?n:new THREE.Plane,t!==undefined?t:new THREE.Plane,i!==undefined?i:new THREE.Plane,r!==undefined?r:new THREE.Plane,u!==undefined?u:new THREE.Plane,f!==undefined?f:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(n,t,i,r,u,f){var e=this.planes;return e[0].copy(n),e[1].copy(t),e[2].copy(i),e[3].copy(r),e[4].copy(u),e[5].copy(f),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){for(var i=this.planes,t=0;t<6;t++)i[t].copy(n.planes[t]);return this},setFromMatrix:function(n){var i=this.planes,t=n.elements,o=t[0],s=t[1],h=t[2],r=t[3],c=t[4],l=t[5],a=t[6],u=t[7],v=t[8],y=t[9],p=t[10],f=t[11],w=t[12],b=t[13],k=t[14],e=t[15];return i[0].setComponents(r-o,u-c,f-v,e-w).normalize(),i[1].setComponents(r+o,u+c,f+v,e+w).normalize(),i[2].setComponents(r+s,u+l,f+y,e+b).normalize(),i[3].setComponents(r-s,u-l,f-y,e-b).normalize(),i[4].setComponents(r-h,u-a,f-p,e-k).normalize(),i[5].setComponents(r+h,u+a,f+p,e+k).normalize(),this},intersectsObject:function(){var n=new THREE.Sphere;return function(t){var i=t.geometry;return i.boundingSphere===null&&i.computeBoundingSphere(),n.copy(i.boundingSphere),n.applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}}(),intersectsSphere:function(n){for(var i,r=this.planes,u=n.center,f=-n.radius,t=0;t<6;t++)if(i=r[t].distanceToPoint(u),i<f)return!1;return!0},intersectsBox:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i){for(var r,f,e,o=this.planes,u=0;u<6;u++)if(r=o[u],n.x=r.normal.x>0?i.min.x:i.max.x,t.x=r.normal.x>0?i.max.x:i.min.x,n.y=r.normal.y>0?i.min.y:i.max.y,t.y=r.normal.y>0?i.max.y:i.min.y,n.z=r.normal.z>0?i.min.z:i.max.z,t.z=r.normal.z>0?i.max.z:i.min.z,f=r.distanceToPoint(n),e=r.distanceToPoint(t),f<0&&e<0)return!1;return!0}}(),containsPoint:function(n){for(var i=this.planes,t=0;t<6;t++)if(i[t].distanceToPoint(n)<0)return!1;return!0}};THREE.Plane=function(n,t){this.normal=n!==undefined?n:new THREE.Vector3(1,0,0);this.constant=t!==undefined?t:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(n,t){return this.normal.copy(n),this.constant=t,this},setComponents:function(n,t,i,r){return this.normal.set(n,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(n,t){return this.normal.copy(n),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,u){var f=n.subVectors(u,r).cross(t.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(f,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.normal.copy(n.normal),this.constant=n.constant,this},normalize:function(){var n=1/this.normal.length();return this.normal.multiplyScalar(n),this.constant*=n,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(n){return this.normal.dot(n)+this.constant},distanceToSphere:function(n){return this.distanceToPoint(n.center)-n.radius},projectPoint:function(n,t){return this.orthoPoint(n,t).sub(n).negate()},orthoPoint:function(n,t){var i=this.distanceToPoint(n),r=t||new THREE.Vector3;return r.copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(n){var t=this.distanceToPoint(n.start),i=this.distanceToPoint(n.end);return t<0&&i>0||i<0&&t>0},intersectLine:function(){var n=new THREE.Vector3;return function(t,i){var u=i||new THREE.Vector3,f=t.delta(n),e=this.normal.dot(f),r;return e===0?this.distanceToPoint(t.start)===0?u.copy(t.start):undefined:(r=-(t.start.dot(this.normal)+this.constant)/e,r<0||r>1)?undefined:u.copy(f).multiplyScalar(r).add(t.start)}}(),coplanarPoint:function(n){var t=n||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var n=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Matrix3;return function(r,u){var e=u||i.getNormalMatrix(r),o=n.copy(this.normal).applyMatrix3(e),f=this.coplanarPoint(t);return f.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(o,f),this}}(),translate:function(n){return this.constant=this.constant-n.dot(this.normal),this},equals:function(n){return n.normal.equals(this.normal)&&n.constant===this.constant}};THREE.Math={generateUUID:function(){var r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=new Array(36),n=0,i;return function(){for(var u=0;u<36;u++)u===8||u===13||u===18||u===23?t[u]="-":u===14?t[u]="4":(n<=2&&(n=33554432+Math.random()*16777216|0),i=n&15,n=n>>4,t[u]=r[u===19?i&3|8:i]);return t.join("")}}(),clamp:function(n,t,i){return Math.max(t,Math.min(i,n))},euclideanModulo:function(n,t){return(n%t+t)%t},mapLinear:function(n,t,i,r,u){return r+(n-t)*(u-r)/(i-t)},smoothstep:function(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t),n*n*(3-2*n))},smootherstep:function(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t),n*n*n*(n*(n*6-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(n,t){return n+Math.floor(Math.random()*(t-n+1))},randFloat:function(n,t){return n+Math.random()*(t-n)},randFloatSpread:function(n){return n*(.5-Math.random())},degToRad:function(){var n=Math.PI/180;return function(t){return t*n}}(),radToDeg:function(){var n=180/Math.PI;return function(t){return t*n}}(),isPowerOfTwo:function(n){return(n&n-1)==0&&n!==0},nearestPowerOfTwo:function(n){return Math.pow(2,Math.round(Math.log(n)/Math.LN2))},nextPowerOfTwo:function(n){return n--,n|=n>>1,n|=n>>2,n|=n>>4,n|=n>>8,n|=n>>16,n++,n}};THREE.Spline=function(n){function a(n,t,i,r,u,f,e){var o=(i-n)*.5,s=(r-t)*.5;return(2*(t-i)+o+s)*e+(-3*(t-i)-2*o-s)*f+o*u+t}this.points=n;var i=[],f={x:0,y:0,z:0},l,t,r,u,e,o,s,h,c;this.initFromArray=function(n){this.points=[];for(var t=0;t<n.length;t++)this.points[t]={x:n[t][0],y:n[t][1],z:n[t][2]}};this.getPoint=function(n){return l=(this.points.length-1)*n,t=Math.floor(l),r=l-t,i[0]=t===0?t:t-1,i[1]=t,i[2]=t>this.points.length-2?this.points.length-1:t+1,i[3]=t>this.points.length-3?this.points.length-1:t+2,o=this.points[i[0]],s=this.points[i[1]],h=this.points[i[2]],c=this.points[i[3]],u=r*r,e=r*u,f.x=a(o.x,s.x,h.x,c.x,r,u,e),f.y=a(o.y,s.y,h.y,c.y,r,u,e),f.z=a(o.z,s.z,h.z,c.z,r,u,e),f};this.getControlPointsArray=function(){for(var t,r=this.points.length,i=[],n=0;n<r;n++)t=this.points[n],i[n]=[t.x,t.y,t.z];return i};this.getLength=function(n){var i,f,e,o,h=0,r=0,c=0,s=new THREE.Vector3,l=new THREE.Vector3,t=[],u=0;for(t[0]=0,n||(n=100),e=this.points.length*n,s.copy(this.points[0]),i=1;i<e;i++)f=i/e,o=this.getPoint(f),l.copy(o),u+=l.distanceTo(s),s.copy(o),h=(this.points.length-1)*f,r=Math.floor(h),r!==c&&(t[r]=u,c=r);return t[t.length]=u,{chunks:t,total:u}};this.reparametrizeByArcLength=function(n){var t,i,s,u,h,c,f,l,r=[],e=new THREE.Vector3,o=this.getLength();for(r.push(e.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(c=o.chunks[t]-o.chunks[t-1],f=Math.ceil(n*c/o.total),u=(t-1)/(this.points.length-1),h=t/(this.points.length-1),i=1;i<f-1;i++)s=u+i*(1/f)*(h-u),l=this.getPoint(s),r.push(e.copy(l).clone());r.push(e.copy(this.points[t]).clone())}this.points=r}};THREE.Triangle=function(n,t,i){this.a=n!==undefined?n:new THREE.Vector3;this.b=t!==undefined?t:new THREE.Vector3;this.c=i!==undefined?i:new THREE.Vector3};THREE.Triangle.normal=function(){var n=new THREE.Vector3;return function(t,i,r,u){var f=u||new THREE.Vector3,e;return(f.subVectors(r,i),n.subVectors(t,i),f.cross(n),e=f.lengthSq(),e>0)?f.multiplyScalar(1/Math.sqrt(e)):f.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var n=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,u,f,e,o){n.subVectors(e,u);t.subVectors(f,u);i.subVectors(r,u);var h=n.dot(n),s=n.dot(t),c=n.dot(i),l=t.dot(t),a=t.dot(i),v=h*l-s*s,y=o||new THREE.Vector3;if(v===0)return y.set(-2,-1,-1);var p=1/v,w=(l*c-s*a)*p,b=(h*a-s*c)*p;return y.set(1-w-b,b,w)}}();THREE.Triangle.containsPoint=function(){var n=new THREE.Vector3;return function(t,i,r,u){var f=THREE.Triangle.barycoordFromPoint(t,i,r,u,n);return f.x>=0&&f.y>=0&&f.x+f.y<=1}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(n,t,i){return this.a.copy(n),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(n,t,i,r){return this.a.copy(n[t]),this.b.copy(n[i]),this.c.copy(n[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.a.copy(n.a),this.b.copy(n.b),this.c.copy(n.c),this},area:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(){return n.subVectors(this.c,this.b),t.subVectors(this.a,this.b),n.cross(t).length()*.5}}(),midpoint:function(n){var t=n||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(n){return THREE.Triangle.normal(this.a,this.b,this.c,n)},plane:function(n){var t=n||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(n,t){return THREE.Triangle.barycoordFromPoint(n,this.a,this.b,this.c,t)},containsPoint:function(n){return THREE.Triangle.containsPoint(n,this.a,this.b,this.c)},equals:function(n){return n.a.equals(this.a)&&n.b.equals(this.b)&&n.c.equals(this.c)}};THREE.Channels=function(){this.mask=1};THREE.Channels.prototype={constructor:THREE.Channels,set:function(n){this.mask=1<<n},enable:function(n){this.mask|=1<<n},toggle:function(n){this.mask^=1<<n},disable:function(n){this.mask&=~(1<<n)}};THREE.Clock=function(n){this.autoStart=n!==undefined?n:!0;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=self.performance.now();this.oldTime=this.startTime;this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var n=0,t;return this.autoStart&&!this.running&&this.start(),this.running&&(t=self.performance.now(),n=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=n),n}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(n){n.addEventListener=THREE.EventDispatcher.prototype.addEventListener;n.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;n.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;n.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(n,t){this._listeners===undefined&&(this._listeners={});var i=this._listeners;i[n]===undefined&&(i[n]=[]);i[n].indexOf(t)===-1&&i[n].push(t)},hasEventListener:function(n,t){if(this._listeners===undefined)return!1;var i=this._listeners;return i[n]!==undefined&&i[n].indexOf(t)!==-1?!0:!1},removeEventListener:function(n,t){var u,i,r;this._listeners!==undefined&&(u=this._listeners,i=u[n],i!==undefined&&(r=i.indexOf(t),r!==-1&&i.splice(r,1)))},dispatchEvent:function(n){var f,i,r,u,t;if(this._listeners!==undefined&&(f=this._listeners,i=f[n.type],i!==undefined)){for(n.target=this,r=[],u=i.length,t=0;t<u;t++)r[t]=i[t];for(t=0;t<u;t++)r[t].call(this,n)}}},function(n){function i(n,t){return n.distance-t.distance}function t(n,i,r,u){var e,f,o;if(n.visible!==!1&&(n.raycast(i,r),u===!0))for(e=n.children,f=0,o=e.length;f<o;f++)t(e[f],i,r,!0)}n.Raycaster=function(t,i,r,u){this.ray=new n.Ray(t,i);this.near=r||0;this.far=u||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})};n.Raycaster.prototype={constructor:n.Raycaster,linePrecision:1,set:function(n,t){this.ray.set(n,t)},setFromCamera:function(t,i){i instanceof n.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(i.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(i).sub(this.ray.origin).normalize()):i instanceof n.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(i),this.ray.direction.set(0,0,-1).transformDirection(i.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(n,r){var u=[];return t(n,this,u,r),u.sort(i),u},intersectObjects:function(n,r){var u=[],f,e;if(Array.isArray(n)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),u;for(f=0,e=n.length;f<e;f++)t(n[f],this,u,r);return u.sort(i),u}}}(THREE);THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=undefined;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var i=new THREE.Vector3,n=new THREE.Euler,t=new THREE.Quaternion,r=new THREE.Vector3(1,1,1),u=function(){t.setFromEuler(n,!1)},f=function(){n.setFromQuaternion(t,undefined,!1)};n.onChange(u);t.onChange(f);Object.defineProperties(this,{position:{enumerable:!0,value:i},rotation:{enumerable:!0,value:n},quaternion:{enumerable:!0,value:t},scale:{enumerable:!0,value:r}});this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.castShadow=!1;this.receiveShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(n){THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order.");this.rotation.order=n},get useQuaternion(){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(n){this.matrix.multiplyMatrices(n,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(n,t){this.quaternion.setFromAxisAngle(n,t)},setRotationFromEuler:function(n){this.quaternion.setFromEuler(n,!0)},setRotationFromMatrix:function(n){this.quaternion.setFromRotationMatrix(n)},setRotationFromQuaternion:function(n){this.quaternion.copy(n)},rotateOnAxis:function(){var n=new THREE.Quaternion;return function(t,i){return n.setFromAxisAngle(t,i),this.quaternion.multiply(n),this}}(),rotateX:function(){var n=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(n,t)}}(),rotateY:function(){var n=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(n,t)}}(),rotateZ:function(){var n=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(n,t)}}(),translateOnAxis:function(){var n=new THREE.Vector3;return function(t,i){return n.copy(t).applyQuaternion(this.quaternion),this.position.add(n.multiplyScalar(i)),this}}(),translate:function(n,t){return THREE.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,n)},translateX:function(){var n=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(n,t)}}(),translateY:function(){var n=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(n,t)}}(),translateZ:function(){var n=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(n,t)}}(),localToWorld:function(n){return n.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var n=new THREE.Matrix4;return function(t){return t.applyMatrix4(n.getInverse(this.matrixWorld))}}(),lookAt:function(){var n=new THREE.Matrix4;return function(t){n.lookAt(t,this.position,this.up);this.quaternion.setFromRotationMatrix(n)}}(),add:function(n){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return n===this?(THREE.error("THREE.Object3D.add: object can't be added as a child of itself.",n),this):(n instanceof THREE.Object3D?(n.parent!==undefined&&n.parent.remove(n),n.parent=this,n.dispatchEvent({type:"added"}),this.children.push(n)):THREE.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",n),this)},remove:function(n){var t,i;if(arguments.length>1)for(t=0;t<arguments.length;t++)this.remove(arguments[t]);i=this.children.indexOf(n);i!==-1&&(n.parent=undefined,n.dispatchEvent({type:"removed"}),this.children.splice(i,1))},getChildByName:function(n){return THREE.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(n)},getObjectById:function(n){return this.getObjectByProperty("id",n)},getObjectByName:function(n){return this.getObjectByProperty("name",n)},getObjectByProperty:function(n,t){var i,u,f,r;if(this[n]===t)return this;for(i=0,u=this.children.length;i<u;i++)if(f=this.children[i],r=f.getObjectByProperty(n,t),r!==undefined)return r;return undefined},getWorldPosition:function(n){var t=n||new THREE.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i){var r=i||new THREE.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(n,r,t),r}}(),getWorldRotation:function(){var n=new THREE.Quaternion;return function(t){var i=t||new THREE.Euler;return this.getWorldQuaternion(n),i.setFromQuaternion(n,this.rotation.order,!1)}}(),getWorldScale:function(){var n=new THREE.Vector3,t=new THREE.Quaternion;return function(i){var r=i||new THREE.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(n,t,r),r}}(),getWorldDirection:function(){var n=new THREE.Quaternion;return function(t){var i=t||new THREE.Vector3;return this.getWorldQuaternion(n),i.set(0,0,1).applyQuaternion(n)}}(),raycast:function(){},traverse:function(n){n(this);for(var t=0,i=this.children.length;t<i;t++)this.children[t].traverse(n)},traverseVisible:function(n){if(this.visible!==!1){n(this);for(var t=0,i=this.children.length;t<i;t++)this.children[t].traverseVisible(n)}},traverseAncestors:function(n){this.parent&&(n(this.parent),this.parent.traverseAncestors(n))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate===!0&&this.updateMatrix();(this.matrixWorldNeedsUpdate===!0||n===!0)&&(this.parent===undefined?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(n)},toJSON:function(){var n={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},t={},f=function(i){if(n.geometries===undefined&&(n.geometries=[]),t[i.uuid]===undefined){var r=i.toJSON();delete r.metadata;t[i.uuid]=r;n.geometries.push(r)}return i.uuid},i={},r=function(t){if(n.materials===undefined&&(n.materials=[]),i[t.uuid]===undefined){var r=t.toJSON();delete r.metadata;i[t.uuid]=r;n.materials.push(r)}return t.uuid},u=function(n){var t={},i;if(t.uuid=n.uuid,t.type=n.type,n.name!==""&&(t.name=n.name),JSON.stringify(n.userData)!=="{}"&&(t.userData=n.userData),n.visible!==!0&&(t.visible=n.visible),n instanceof THREE.PerspectiveCamera?(t.fov=n.fov,t.aspect=n.aspect,t.near=n.near,t.far=n.far):n instanceof THREE.OrthographicCamera?(t.left=n.left,t.right=n.right,t.top=n.top,t.bottom=n.bottom,t.near=n.near,t.far=n.far):n instanceof THREE.AmbientLight?t.color=n.color.getHex():n instanceof THREE.DirectionalLight?(t.color=n.color.getHex(),t.intensity=n.intensity):n instanceof THREE.PointLight?(t.color=n.color.getHex(),t.intensity=n.intensity,t.distance=n.distance,t.decay=n.decay):n instanceof THREE.SpotLight?(t.color=n.color.getHex(),t.intensity=n.intensity,t.distance=n.distance,t.angle=n.angle,t.exponent=n.exponent,t.decay=n.decay):n instanceof THREE.HemisphereLight?(t.color=n.color.getHex(),t.groundColor=n.groundColor.getHex()):n instanceof THREE.Mesh||n instanceof THREE.Line||n instanceof THREE.PointCloud?(t.geometry=f(n.geometry),t.material=r(n.material),n instanceof THREE.Line&&(t.mode=n.mode)):n instanceof THREE.Sprite&&(t.material=r(n.material)),t.matrix=n.matrix.toArray(),n.children.length>0)for(t.children=[],i=0;i<n.children.length;i++)t.children.push(u(n.children[i]));return t};return n.object=u(this),n},clone:function(n,t){var i,r;if(n===undefined&&(n=new THREE.Object3D),t===undefined&&(t=!0),n.name=this.name,n.up.copy(this.up),n.position.copy(this.position),n.quaternion.copy(this.quaternion),n.scale.copy(this.scale),n.rotationAutoUpdate=this.rotationAutoUpdate,n.matrix.copy(this.matrix),n.matrixWorld.copy(this.matrixWorld),n.matrixAutoUpdate=this.matrixAutoUpdate,n.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,n.visible=this.visible,n.castShadow=this.castShadow,n.receiveShadow=this.receiveShadow,n.frustumCulled=this.frustumCulled,n.userData=JSON.parse(JSON.stringify(this.userData)),t===!0)for(i=0;i<this.children.length;i++)r=this.children[i],n.add(r.clone());return n}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Face3=function(n,t,i,r,u,f){this.a=n;this.b=t;this.c=i;this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3;this.vertexNormals=r instanceof Array?r:[];this.color=u instanceof THREE.Color?u:new THREE.Color;this.vertexColors=u instanceof Array?u:[];this.vertexTangents=[];this.materialIndex=f!==undefined?f:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var t=new THREE.Face3(this.a,this.b,this.c),n,i;for(t.normal.copy(this.normal),t.color.copy(this.color),t.materialIndex=this.materialIndex,n=0,i=this.vertexNormals.length;n<i;n++)t.vertexNormals[n]=this.vertexNormals[n].clone();for(n=0,i=this.vertexColors.length;n<i;n++)t.vertexColors[n]=this.vertexColors[n].clone();for(n=0,i=this.vertexTangents.length;n<i;n++)t.vertexTangents[n]=this.vertexTangents[n].clone();return t}};THREE.Face4=function(n,t,i,r,u,f,e){return THREE.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(n,t,i,u,f,e)};THREE.BufferAttribute=function(n,t){this.array=n;this.itemSize=t;this.needsUpdate=!1};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(n,t,i){n*=this.itemSize;i*=t.itemSize;for(var r=0,u=this.itemSize;r<u;r++)this.array[n+r]=t.array[i+r];return this},set:function(n,t){return t===undefined&&(t=0),this.array.set(n,t),this},setX:function(n,t){return this.array[n*this.itemSize]=t,this},setY:function(n,t){return this.array[n*this.itemSize+1]=t,this},setZ:function(n,t){return this.array[n*this.itemSize+2]=t,this},setXY:function(n,t,i){return n*=this.itemSize,this.array[n]=t,this.array[n+1]=i,this},setXYZ:function(n,t,i,r){return n*=this.itemSize,this.array[n]=t,this.array[n+1]=i,this.array[n+2]=r,this},setXYZW:function(n,t,i,r,u){return n*=this.itemSize,this.array[n]=t,this.array[n+1]=i,this.array[n+2]=r,this.array[n+3]=u,this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}};THREE.Int8Attribute=function(n,t){return THREE.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Uint8Attribute=function(n,t){return THREE.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Uint8ClampedAttribute=function(n,t){return THREE.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Int16Attribute=function(n,t){return THREE.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Uint16Attribute=function(n,t){return THREE.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Int32Attribute=function(n,t){return THREE.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Uint32Attribute=function(n,t){return THREE.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Float32Attribute=function(n,t){return THREE.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.Float64Attribute=function(n,t){return THREE.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(n,t)};THREE.DynamicBufferAttribute=function(n,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new THREE.BufferAttribute(n,t).setDynamic(!0)};THREE.DynamicBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.DynamicBufferAttribute.prototype.constructor=THREE.DynamicBufferAttribute;THREE.DynamicBufferAttribute.prototype.clone=function(){return new THREE.DynamicBufferAttribute(new this.array.constructor(this.array),this.itemSize)};THREE.InterleavedBuffer=function(n,t){this.uuid=THREE.Math.generateUUID();this.array=n;this.stride=t;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0};THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(n){n===!0&&this.version++},setDynamic:function(n){return this.dynamic=n,this},copy:function(n){this.array=new n.array.constructor(n.array);this.stride=n.stride;this.dynamic=n.dynamic},copyAt:function(n,t,i){n*=this.stride;i*=t.stride;for(var r=0,u=this.stride;r<u;r++)this.array[n+r]=t.array[i+r];return this},set:function(n,t){return t===undefined&&(t=0),this.array.set(n,t),this},clone:function(){return(new this.constructor).copy(this)}};THREE.InstancedInterleavedBuffer=function(n,t,i){THREE.InterleavedBuffer.call(this,n,t);this.meshPerAttribute=i||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;THREE.InstancedInterleavedBuffer.prototype.copy=function(n){return THREE.InterleavedBuffer.prototype.copy.call(this,n),this.meshPerAttribute=n.meshPerAttribute,this};THREE.InterleavedBufferAttribute=function(n,t,i){this.uuid=THREE.Math.generateUUID();this.data=n;this.itemSize=t;this.offset=i};THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.array.length/this.data.stride},setX:function(n,t){return this.data.array[n*this.data.stride+this.offset]=t,this},setY:function(n,t){return this.data.array[n*this.data.stride+this.offset+1]=t,this},setZ:function(n,t){return this.data.array[n*this.data.stride+this.offset+2]=t,this},setW:function(n,t){return this.data.array[n*this.data.stride+this.offset+3]=t,this},getX:function(n){return this.data.array[n*this.data.stride+this.offset]},getY:function(n){return this.data.array[n*this.data.stride+this.offset+1]},getZ:function(n){return this.data.array[n*this.data.stride+this.offset+2]},getW:function(n){return this.data.array[n*this.data.stride+this.offset+3]},setXY:function(n,t,i){return n=n*this.data.stride+this.offset,this.data.array[n+0]=t,this.data.array[n+1]=i,this},setXYZ:function(n,t,i,r){return n=n*this.data.stride+this.offset,this.data.array[n+0]=t,this.data.array[n+1]=i,this.data.array[n+2]=r,this},setXYZW:function(n,t,i,r,u){return n=n*this.data.stride+this.offset,this.data.array[n+0]=t,this.data.array[n+1]=i,this.data.array[n+2]=r,this.data.array[n+3]=u,this}};THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=!1;this.elementsNeedUpdate=!1;this.uvsNeedUpdate=!1;this.normalsNeedUpdate=!1;this.colorsNeedUpdate=!1;this.lineDistancesNeedUpdate=!1;this.groupsNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(n){for(var e,i,r,o,f=(new THREE.Matrix3).getNormalMatrix(n),t=0,u=this.vertices.length;t<u;t++)e=this.vertices[t],e.applyMatrix4(n);for(t=0,u=this.faces.length;t<u;t++)for(i=this.faces[t],i.normal.applyMatrix3(f).normalize(),r=0,o=i.vertexNormals.length;r<o;r++)i.vertexNormals[r].applyMatrix3(f).normalize();this.boundingBox!==null&&this.computeBoundingBox();this.boundingSphere!==null&&this.computeBoundingSphere();this.verticesNeedUpdate=!0;this.normalsNeedUpdate=!0},rotateX:function(){var n;return function(t){return n===undefined&&(n=new THREE.Matrix4),n.makeRotationX(t),this.applyMatrix(n),this}}(),rotateY:function(){var n;return function(t){return n===undefined&&(n=new THREE.Matrix4),n.makeRotationY(t),this.applyMatrix(n),this}}(),rotateZ:function(){var n;return function(t){return n===undefined&&(n=new THREE.Matrix4),n.makeRotationZ(t),this.applyMatrix(n),this}}(),translate:function(){var n;return function(t,i,r){return n===undefined&&(n=new THREE.Matrix4),n.makeTranslation(t,i,r),this.applyMatrix(n),this}}(),scale:function(){var n;return function(t,i,r){return n===undefined&&(n=new THREE.Matrix4),n.makeScale(t,i,r),this.applyMatrix(n),this}}(),lookAt:function(){var n;return function(t){n===undefined&&(n=new THREE.Object3D);n.lookAt(t);n.updateMatrix();this.applyMatrix(n.matrix)}}(),fromBufferGeometry:function(n){function p(n,t,i){var r=o!==undefined?[l[n].clone(),l[t].clone(),l[i].clone()]:[],f=s!==undefined?[u.colors[n].clone(),u.colors[t].clone(),u.colors[i].clone()]:[],e=new THREE.Face3(n,t,i,r,f);u.faces.push(e);c!==undefined&&u.faceVertexUvs[0].push([a[n].clone(),a[t].clone(),a[i].clone()]);h!==undefined&&u.faceVertexUvs[1].push([v[n].clone(),v[t].clone(),v[i].clone()])}var u=this,f=n.index!==null?n.index.array:undefined,r=n.attributes,e=r.position.array,o=r.normal!==undefined?r.normal.array:undefined,s=r.color!==undefined?r.color.array:undefined,c=r.uv!==undefined?r.uv.array:undefined,h=r.uv2!==undefined?r.uv2.array:undefined,y,i,k,t;h!==undefined&&(this.faceVertexUvs[1]=[]);for(var l=[],a=[],v=[],t=0,i=0,d=0;t<e.length;t+=3,i+=2,d+=4)u.vertices.push(new THREE.Vector3(e[t],e[t+1],e[t+2])),o!==undefined&&l.push(new THREE.Vector3(o[t],o[t+1],o[t+2])),s!==undefined&&u.colors.push(new THREE.Color(s[t],s[t+1],s[t+2])),c!==undefined&&a.push(new THREE.Vector2(c[i],c[i+1])),h!==undefined&&v.push(new THREE.Vector2(h[i],h[i+1]));if(f!==undefined)if(y=n.groups,y.length>0)for(t=0;t<y.length;t++){var w=y[t],b=w.start,g=w.count;for(i=b,k=b+g;i<k;i+=3)p(f[i],f[i+1],f[i+2])}else for(t=0;t<f.length;t+=3)p(f[t],f[t+1],f[t+2]);else for(t=0;t<e.length/3;t+=3)p(t,t+1,t+2);return this.computeFaceNormals(),n.boundingBox!==null&&(this.boundingBox=n.boundingBox.clone()),n.boundingSphere!==null&&(this.boundingSphere=n.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var n=this.boundingBox.center().negate();return this.translate(n.x,n.y,n.z),n},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,i=this.boundingSphere.radius,n=i===0?1:1/i,r=new THREE.Matrix4;return r.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var n=new THREE.Vector3,r=new THREE.Vector3,i=0,f=this.faces.length;i<f;i++){var t=this.faces[i],e=this.vertices[t.a],u=this.vertices[t.b],o=this.vertices[t.c];n.subVectors(o,u);r.subVectors(e,u);n.cross(r);n.normalize();t.normal.copy(n)}},computeVertexNormals:function(n){var u,s,r,e,t,i,l,h,a,o,c,f;for(i=new Array(this.vertices.length),u=0,s=this.vertices.length;u<s;u++)i[u]=new THREE.Vector3;if(n)for(o=new THREE.Vector3,c=new THREE.Vector3,r=0,e=this.faces.length;r<e;r++)t=this.faces[r],l=this.vertices[t.a],h=this.vertices[t.b],a=this.vertices[t.c],o.subVectors(a,h),c.subVectors(l,h),o.cross(c),i[t.a].add(o),i[t.b].add(o),i[t.c].add(o);else for(r=0,e=this.faces.length;r<e;r++)t=this.faces[r],i[t.a].add(t.normal),i[t.b].add(t.normal),i[t.c].add(t.normal);for(u=0,s=this.vertices.length;u<s;u++)i[u].normalize();for(r=0,e=this.faces.length;r<e;r++)t=this.faces[r],f=t.vertexNormals,f.length===3?(f[0].copy(i[t.a]),f[1].copy(i[t.b]),f[2].copy(i[t.c])):(f[0]=i[t.a].clone(),f[1]=i[t.b].clone(),f[2]=i[t.c].clone())},computeMorphNormals:function(){for(var t,e,n,f,h,c,s,o,u,i=0,r=this.faces.length;i<r;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();for(f=new THREE.Geometry,f.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t])for(this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[],h=this.morphNormals[t].faceNormals,c=this.morphNormals[t].vertexNormals,i=0,r=this.faces.length;i<r;i++)o=new THREE.Vector3,u={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(o),c.push(u);for(s=this.morphNormals[t],f.vertices=this.morphTargets[t].vertices,f.computeFaceNormals(),f.computeVertexNormals(),i=0,r=this.faces.length;i<r;i++)n=this.faces[i],o=s.faceNormals[i],u=s.vertexNormals[i],o.copy(n.normal),u.a.copy(n.vertexNormals[0]),u.b.copy(n.vertexNormals[1]),u.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;i<r;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){for(var i=0,t=this.vertices,n=0,r=t.length;n<r;n++)n>0&&(i+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=i},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(n,t,i){var r,o,k,a,c,y,u,s;if(n instanceof THREE.Geometry==!1){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",n);return}var h,l=this.vertices.length,tt=this.vertices,p=n.vertices,it=this.faces,w=n.faces,rt=this.faceVertexUvs[0],b=n.faceVertexUvs[0];for(i===undefined&&(i=0),t!==undefined&&(h=(new THREE.Matrix3).getNormalMatrix(t)),r=0,o=p.length;r<o;r++)k=p[r],a=k.clone(),t!==undefined&&a.applyMatrix4(t),tt.push(a);for(r=0,o=w.length;r<o;r++){var f=w[r],e,v,d,g=f.vertexNormals,nt=f.vertexColors;for(e=new THREE.Face3(f.a+l,f.b+l,f.c+l),e.normal.copy(f.normal),h!==undefined&&e.normal.applyMatrix3(h).normalize(),u=0,s=g.length;u<s;u++)v=g[u].clone(),h!==undefined&&v.applyMatrix3(h).normalize(),e.vertexNormals.push(v);for(e.color.copy(f.color),u=0,s=nt.length;u<s;u++)d=nt[u],e.vertexColors.push(d.clone());e.materialIndex=f.materialIndex+i;it.push(e)}for(r=0,o=b.length;r<o;r++)if(c=b[r],y=[],c!==undefined){for(u=0,s=c.length;u<s;u++)y.push(c[u].clone());rt.push(y)}},mergeMesh:function(n){if(n instanceof THREE.Mesh==!1){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",n);return}n.matrixAutoUpdate&&n.updateMatrix();this.merge(n.geometry,n.matrix)},mergeVertices:function(){for(var c={},u=[],i=[],f,e,l=Math.pow(10,4),t,a,s,y,h,p,r,v,w,n=0,o=this.vertices.length;n<o;n++)f=this.vertices[n],e=Math.round(f.x*l)+"_"+Math.round(f.y*l)+"_"+Math.round(f.z*l),c[e]===undefined?(c[e]=n,u.push(this.vertices[n]),i[n]=u.length-1):i[n]=i[c[e]];for(h=[],n=0,o=this.faces.length;n<o;n++)for(t=this.faces[n],t.a=i[t.a],t.b=i[t.b],t.c=i[t.c],a=[t.a,t.b,t.c],p=-1,r=0;r<3;r++)if(a[r]===a[(r+1)%3]){p=r;h.push(n);break}for(n=h.length-1;n>=0;n--)for(v=h[n],this.faces.splice(v,1),s=0,y=this.faceVertexUvs.length;s<y;s++)this.faceVertexUvs[s].splice(v,1);return w=this.vertices.length-u.length,this.vertices=u,w},sortFacesByMaterialIndex:function(){function s(n,t){return n.materialIndex-t.materialIndex}for(var f,e,t,i,o,r=this.faces,u=r.length,n=0;n<u;n++)r[n]._id=n;for(r.sort(s),f=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f&&f.length===u&&(t=[]),e&&e.length===u&&(i=[]),n=0;n<u;n++)o=r[n]._id,t&&t.push(f[o]),i&&i.push(e[o]);t&&(this.faceVertexUvs[0]=t);i&&(this.faceVertexUvs[1]=i)},toJSON:function(){function f(n,t,i){return i?n|1<<t:n&~(1<<t)}function b(n){var t=n.x.toString()+n.y.toString()+n.z.toString();return h[t]!==undefined?h[t]:(h[t]=g.length/3,g.push(n.x,n.y,n.z),h[t])}function k(n){var t=n.r.toString()+n.g.toString()+n.b.toString();return l[t]!==undefined?l[t]:(l[t]=c.length,c.push(n.getHex()),l[t])}function nt(n){var t=n.x.toString()+n.y.toString();return v[t]!==undefined?v[t]:(v[t]=a.length/2,a.push(n.x,n.y),v[t])}var i={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}},e,o,d,s,r,y,p,w;if(i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.parameters!==undefined){e=this.parameters;for(o in e)e[o]!==undefined&&(i[o]=e[o]);return i}for(d=[],r=0;r<this.vertices.length;r++)s=this.vertices[r],d.push(s.x,s.y,s.z);var u=[],g=[],h={},c=[],l={},a=[],v={};for(r=0;r<this.faces.length;r++){var t=this.faces[r],tt=this.faceVertexUvs[0][r]!==undefined,it=t.normal.length()>0,rt=t.vertexNormals.length>0,ut=t.color.r!==1||t.color.g!==1||t.color.b!==1,ft=t.vertexColors.length>0,n=0;n=f(n,0,0);n=f(n,1,!1);n=f(n,2,!1);n=f(n,3,tt);n=f(n,4,it);n=f(n,5,rt);n=f(n,6,ut);n=f(n,7,ft);u.push(n);u.push(t.a,t.b,t.c);tt&&(y=this.faceVertexUvs[0][r],u.push(nt(y[0]),nt(y[1]),nt(y[2])));it&&u.push(b(t.normal));rt&&(p=t.vertexNormals,u.push(b(p[0]),b(p[1]),b(p[2])));ut&&u.push(k(t.color));ft&&(w=t.vertexColors,u.push(k(w[0]),k(w[1]),k(w[2])))}return i.data={},i.data.vertices=d,i.data.normals=g,c.length>0&&(i.data.colors=c),a.length>0&&(i.data.uvs=[a]),i.data.faces=u,i},clone:function(){return(new this.constructor).copy(this)},copy:function(n){var f,e,t,i,o,r,c,s,h,u,l,a;for(this.vertices=[],this.faces=[],this.faceVertexUvs=[[]],f=n.vertices,t=0,i=f.length;t<i;t++)this.vertices.push(f[t].clone());for(e=n.faces,t=0,i=e.length;t<i;t++)this.faces.push(e[t].clone());for(t=0,i=n.faceVertexUvs.length;t<i;t++)for(o=n.faceVertexUvs[t],this.faceVertexUvs[t]===undefined&&(this.faceVertexUvs[t]=[]),r=0,c=o.length;r<c;r++){for(s=o[r],h=[],u=0,l=s.length;u<l;u++)a=s[u],h.push(a.clone());this.faceVertexUvs[t].push(h)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="DirectGeometry";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=!1;this.normalsNeedUpdate=!1;this.colorsNeedUpdate=!1;this.uvsNeedUpdate=!1;this.groupsNeedUpdate=!1};THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(n){for(var f,t,r=[],u,e=n.faces,i=0;i<e.length;i++)f=e[i],f.materialIndex!==u&&(u=f.materialIndex,t!==undefined&&(t.count=i*3-t.start,r.push(t)),t={start:i*3,materialIndex:u});t!==undefined&&(t.count=i*3-t.start,r.push(t));this.groups=r},fromGeometry:function(n){var g=n.faces,e=n.vertices,f=n.faceVertexUvs,tt=f[0]&&f[0].length>0,it=f[1]&&f[1].length>0,nt=n.morphTargets,k=nt.length,h,d,c,l,t,i,o,y,s,p,r,w,u,b;if(k>0){for(h=[],t=0;t<k;t++)h[t]=[];this.morphTargets.position=h}if(d=n.morphNormals,c=d.length,c>0){for(l=[],t=0;t<c;t++)l[t]=[];this.morphTargets.normal=l}var a=n.skinIndices,v=n.skinWeights,rt=a.length===e.length,ut=v.length===e.length;for(t=0;t<g.length;t++){for(i=g[t],this.vertices.push(e[i.a],e[i.b],e[i.c]),o=i.vertexNormals,o.length===3?this.normals.push(o[0],o[1],o[2]):(y=i.normal,this.normals.push(y,y,y)),s=i.vertexColors,s.length===3?this.colors.push(s[0],s[1],s[2]):(p=i.color,this.colors.push(p,p,p)),tt===!0&&(r=f[0][t],r!==undefined?this.uvs.push(r[0],r[1],r[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",t),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2))),it===!0&&(r=f[1][t],r!==undefined?this.uvs2.push(r[0],r[1],r[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",t),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2))),u=0;u<k;u++)w=nt[u].vertices,h[u].push(w[i.a],w[i.b],w[i.c]);for(u=0;u<c;u++)b=d[u].vertexNormals[t],l[u].push(b.a,b.b,b.c);rt&&this.skinIndices.push(a[i.a],a[i.b],a[i.c]);ut&&this.skinWeights.push(v[i.a],v[i.b],v[i.c])}return this.computeGroups(n),this.verticesNeedUpdate=n.verticesNeedUpdate,this.normalsNeedUpdate=n.normalsNeedUpdate,this.colorsNeedUpdate=n.colorsNeedUpdate,this.uvsNeedUpdate=n.uvsNeedUpdate,this.groupsNeedUpdate=n.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype);THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.attributes={};this.attributesKeys=[];this.drawcalls=[];this.offsets=this.drawcalls;this.boundingBox=null;this.boundingSphere=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(n,t){if(t instanceof THREE.BufferAttribute==!1){THREE.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");this.attributes[n]={array:arguments[1],itemSize:arguments[2]};return}this.attributes[n]=t;this.attributesKeys=Object.keys(this.attributes)},getAttribute:function(n){return this.attributes[n]},addDrawCall:function(n,t,i){this.drawcalls.push({start:n,count:t,index:i!==undefined?i:0})},applyMatrix:function(n){var i=this.attributes.position,t,r;i!==undefined&&(n.applyToVector3Array(i.array),i.needsUpdate=!0);t=this.attributes.normal;t!==undefined&&(r=(new THREE.Matrix3).getNormalMatrix(n),r.applyToVector3Array(t.array),t.needsUpdate=!0);this.boundingBox!==null&&this.computeBoundingBox();this.boundingSphere!==null&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var n=this.boundingBox.center().negate();return this.applyMatrix((new THREE.Matrix4).setPosition(n)),n},fromGeometry:function(n,t){var r,u,h,o,s;t=t||{vertexColors:THREE.NoColors};var y=n.vertices,c=n.faces,v=n.faceVertexUvs,p=t.vertexColors,ut=v[0].length>0,st=c[0].vertexNormals.length==3,e=new Float32Array(c.length*9);this.addAttribute("position",new THREE.BufferAttribute(e,3));r=new Float32Array(c.length*9);this.addAttribute("normal",new THREE.BufferAttribute(r,3));p!==THREE.NoColors&&(u=new Float32Array(c.length*9),this.addAttribute("color",new THREE.BufferAttribute(u,3)));ut===!0&&(h=new Float32Array(c.length*6),this.addAttribute("uv",new THREE.BufferAttribute(h,2)));for(var a=0,l=0,i=0;a<c.length;a++,l+=6,i+=9){var f=c[a],w=y[f.a],b=y[f.b],k=y[f.c];if(e[i]=w.x,e[i+1]=w.y,e[i+2]=w.z,e[i+3]=b.x,e[i+4]=b.y,e[i+5]=b.z,e[i+6]=k.x,e[i+7]=k.y,e[i+8]=k.z,st===!0){var d=f.vertexNormals[0],g=f.vertexNormals[1],nt=f.vertexNormals[2];r[i]=d.x;r[i+1]=d.y;r[i+2]=d.z;r[i+3]=g.x;r[i+4]=g.y;r[i+5]=g.z;r[i+6]=nt.x;r[i+7]=nt.y;r[i+8]=nt.z}else o=f.normal,r[i]=o.x,r[i+1]=o.y,r[i+2]=o.z,r[i+3]=o.x,r[i+4]=o.y,r[i+5]=o.z,r[i+6]=o.x,r[i+7]=o.y,r[i+8]=o.z;if(p===THREE.FaceColors)s=f.color,u[i]=s.r,u[i+1]=s.g,u[i+2]=s.b,u[i+3]=s.r,u[i+4]=s.g,u[i+5]=s.b,u[i+6]=s.r,u[i+7]=s.g,u[i+8]=s.b;else if(p===THREE.VertexColors){var tt=f.vertexColors[0],it=f.vertexColors[1],rt=f.vertexColors[2];u[i]=tt.r;u[i+1]=tt.g;u[i+2]=tt.b;u[i+3]=it.r;u[i+4]=it.g;u[i+5]=it.b;u[i+6]=rt.r;u[i+7]=rt.g;u[i+8]=rt.b}if(ut===!0){var ft=v[0][a][0],et=v[0][a][1],ot=v[0][a][2];h[l]=ft.x;h[l+1]=ft.y;h[l+2]=et.x;h[l+3]=et.y;h[l+4]=ot.x;h[l+5]=ot.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){var n=new THREE.Vector3;return function(){var t,r,i,u;if(this.boundingBox===null&&(this.boundingBox=new THREE.Box3),t=this.attributes.position.array,t)for(r=this.boundingBox,r.makeEmpty(),i=0,u=t.length;i<u;i+=3)n.set(t[i],t[i+1],t[i+2]),r.expandByPoint(n);(t===undefined||t.length===0)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0));(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&THREE.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var t=new THREE.Box3,n=new THREE.Vector3;return function(){var r,e,f,i,u;if(this.boundingSphere===null&&(this.boundingSphere=new THREE.Sphere),r=this.attributes.position.array,r){for(t.makeEmpty(),e=this.boundingSphere.center,i=0,u=r.length;i<u;i+=3)n.set(r[i],r[i+1],r[i+2]),t.expandByPoint(n);for(t.center(e),f=0,i=0,u=r.length;i<u;i+=3)n.set(r[i],r[i+1],r[i+2]),f=Math.max(f,e.distanceToSquared(n));this.boundingSphere.radius=Math.sqrt(f);isNaN(this.boundingSphere.radius)&&THREE.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var u=this.attributes,r,i,l,a,o,b,n,f;if(u.position){if(r=u.position.array,u.normal===undefined)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(r.length),3));else for(i=u.normal.array,n=0,f=i.length;n<f;n++)i[n]=0;var i=u.normal.array,s,h,c,v=new THREE.Vector3,e=new THREE.Vector3,y=new THREE.Vector3,t=new THREE.Vector3,p=new THREE.Vector3;if(u.index)for(l=u.index.array,a=this.offsets.length>0?this.offsets:[{start:0,count:l.length,index:0}],o=0,b=a.length;o<b;++o){var k=a[o].start,d=a[o].count,w=a[o].index;for(n=k,f=k+d;n<f;n+=3)s=(w+l[n])*3,h=(w+l[n+1])*3,c=(w+l[n+2])*3,v.fromArray(r,s),e.fromArray(r,h),y.fromArray(r,c),t.subVectors(y,e),p.subVectors(v,e),t.cross(p),i[s]+=t.x,i[s+1]+=t.y,i[s+2]+=t.z,i[h]+=t.x,i[h+1]+=t.y,i[h+2]+=t.z,i[c]+=t.x,i[c+1]+=t.y,i[c+2]+=t.z}else for(n=0,f=r.length;n<f;n+=9)v.fromArray(r,n),e.fromArray(r,n+3),y.fromArray(r,n+6),t.subVectors(y,e),p.subVectors(v,e),t.cross(p),i[n]=t.x,i[n+1]=t.y,i[n+2]=t.z,i[n+3]=t.x,i[n+4]=t.y,i[n+5]=t.z,i[n+6]=t.x,i[n+7]=t.y,i[n+8]=t.z;this.normalizeNormals();u.normal.needsUpdate=!0}},computeTangents:function(){function fi(n,t,i){u.fromArray(w,n*3);k.fromArray(w,t*3);d.fromArray(w,i*3);c.fromArray(ht,n*2);ct.fromArray(ht,t*2);lt.fromArray(ht,i*2);at=k.x-u.x;vt=d.x-u.x;yt=k.y-u.y;pt=d.y-u.y;wt=k.z-u.z;bt=d.z-u.z;l=ct.x-c.x;a=lt.x-c.x;v=ct.y-c.y;y=lt.y-c.y;f=1/(l*y-a*v);g.set((y*at-v*vt)*f,(y*yt-v*pt)*f,(y*wt-v*bt)*f);nt.set((l*vt-a*at)*f,(l*pt-a*yt)*f,(l*bt-a*wt)*f);o[n].add(g);o[t].add(g);o[i].add(g);s[n].add(nt);s[t].add(nt);s[i].add(nt)}function kt(n){ot.fromArray(ui,n*3);ti.copy(ot);st=o[n];p.copy(st);p.sub(ot.multiplyScalar(ot.dot(st))).normalize();ni.crossVectors(ti,st);ri=ni.dot(s[n]);ii=ri<0?-1:1;b[n*4]=p.x;b[n*4+1]=p.y;b[n*4+2]=p.z;b[n*4+3]=ii}var h,n,tt,t,it,rt,ut,ft,i;if(this.attributes.index===undefined||this.attributes.position===undefined||this.attributes.normal===undefined||this.attributes.uv===undefined){THREE.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");return}var r=this.attributes.index.array,w=this.attributes.position.array,ui=this.attributes.normal.array,ht=this.attributes.uv.array,dt=w.length/3;this.attributes.tangent===undefined&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*dt),4));var b=this.attributes.tangent.array,o=[],s=[];for(h=0;h<dt;h++)o[h]=new THREE.Vector3,s[h]=new THREE.Vector3;var u=new THREE.Vector3,k=new THREE.Vector3,d=new THREE.Vector3,c=new THREE.Vector2,ct=new THREE.Vector2,lt=new THREE.Vector2,at,vt,yt,pt,wt,bt,l,a,v,y,f,g=new THREE.Vector3,nt=new THREE.Vector3;for(this.drawcalls.length===0&&this.addDrawCall(0,r.length,0),i=this.drawcalls,t=0,it=i.length;t<it;++t){var et=i[t].start,gt=i[t].count,e=i[t].index;for(n=et,tt=et+gt;n<tt;n+=3)rt=e+r[n],ut=e+r[n+1],ft=e+r[n+2],fi(rt,ut,ft)}var p=new THREE.Vector3,ni=new THREE.Vector3,ot=new THREE.Vector3,ti=new THREE.Vector3,ii,st,ri;for(t=0,it=i.length;t<it;++t){var et=i[t].start,gt=i[t].count,e=i[t].index;for(n=et,tt=et+gt;n<tt;n+=3)rt=e+r[n],ut=e+r[n+1],ft=e+r[n+2],kt(rt),kt(ut),kt(ft)}},computeOffsets:function(n){var h,l,i,d,w,u,r,f;n===undefined&&(n=65535);var a=this.attributes.index.array,v=this.attributes.position.array,g=a.length/3,b=new Uint16Array(a.length),k=0,c=0,o=[{start:0,count:0,index:0}],e=o[0],nt=0,y=0,t=new Int32Array(6),s=new Int32Array(v.length),p=new Int32Array(v.length);for(h=0;h<v.length;h++)s[h]=-1,p[h]=-1;for(l=0;l<g;l++){for(y=0,i=0;i<3;i++)r=a[l*3+i],s[r]==-1?(t[i*2]=r,t[i*2+1]=-1,y++):s[r]<e.index?(t[i*2]=r,t[i*2+1]=-1,nt++):(t[i*2]=r,t[i*2+1]=s[r]);if(d=c+y,d>e.index+n)for(w={start:k,count:0,index:c},o.push(w),e=w,u=0;u<6;u+=2)f=t[u+1],f>-1&&f<e.index&&(t[u+1]=-1);for(u=0;u<6;u+=2)r=t[u],f=t[u+1],f===-1&&(f=c++),s[r]=f,p[f]=r,b[k++]=f-e.index,e.count++}return this.reorderBuffers(b,p,c),this.offsets=o,this.drawcalls=o,o},merge:function(n,t){var u,i,r,f;if(n instanceof THREE.BufferGeometry==!1){THREE.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",n);return}t===undefined&&(t=0);u=this.attributes;for(i in u)if(n.attributes[i]!==undefined){var s=u[i],h=s.array,e=n.attributes[i],o=e.array,c=e.itemSize;for(r=0,f=c*t;r<o.length;r++,f++)h[f]=o[r]}return this},normalizeNormals:function(){for(var t=this.attributes.normal.array,r,u,f,i,n=0,e=t.length;n<e;n+=3)r=t[n],u=t[n+1],f=t[n+2],i=1/Math.sqrt(r*r+u*u+f*f),t[n]*=i,t[n+1]*=i,t[n+2]*=i},reorderBuffers:function(n,t,i){var e={},s,u,h,f;for(var r in this.attributes)r!="index"&&(s=this.attributes[r].array,e[r]=new s.constructor(this.attributes[r].itemSize*i));for(u=0;u<i;u++){h=t[u];for(r in this.attributes)if(r!="index"){var c=this.attributes[r].array,o=this.attributes[r].itemSize,l=e[r];for(f=0;f<o;f++)l[u*o+f]=c[h*o+f]}}this.attributes.index.array=n;for(r in this.attributes)r!="index"&&(this.attributes[r].array=e[r],this.attributes[r].numItems=this.attributes[r].itemSize*i)},toJSON:function(){var n={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},u=this.attributes,f=this.offsets,i=this.boundingSphere,r,t,e;for(r in u)t=u[r],e=Array.prototype.slice.call(t.array),n.data.attributes[r]={itemSize:t.itemSize,type:t.array.constructor.name,array:e};return f.length>0&&(n.data.offsets=JSON.parse(JSON.stringify(f))),i!==null&&(n.data.boundingSphere={center:i.center.toArray(),radius:i.radius}),n},clone:function(){var i=new THREE.BufferGeometry,r,u,n,f,t;for(r in this.attributes)u=this.attributes[r],i.addAttribute(r,u.clone());for(n=0,f=this.offsets.length;n<f;n++)t=this.offsets[n],i.offsets.push({start:t.start,index:t.index,count:t.count});return i},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=!1;this.dynamic=!0;this.verticesNeedUpdate=!1;this.elementsNeedUpdate=!1;this.uvsNeedUpdate=!1;this.normalsNeedUpdate=!1;this.tangentsNeedUpdate=!1;this.colorsNeedUpdate=!1;this.lineDistancesNeedUpdate=!1;this.groupsNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(n){for(var e,i,r,o,f=(new THREE.Matrix3).getNormalMatrix(n),t=0,u=this.vertices.length;t<u;t++)e=this.vertices[t],e.applyMatrix4(n);for(t=0,u=this.faces.length;t<u;t++)for(i=this.faces[t],i.normal.applyMatrix3(f).normalize(),r=0,o=i.vertexNormals.length;r<o;r++)i.vertexNormals[r].applyMatrix3(f).normalize();this.boundingBox!==null&&this.computeBoundingBox();this.boundingSphere!==null&&this.computeBoundingSphere();this.verticesNeedUpdate=!0;this.normalsNeedUpdate=!0},fromBufferGeometry:function(n){for(var a,v,b,f=this,i=n.attributes,e=i.position.array,u=i.index!==undefined?i.index.array:undefined,o=i.normal!==undefined?i.normal.array:undefined,s=i.color!==undefined?i.color.array:undefined,h=i.uv!==undefined?i.uv.array:undefined,c=[],l=[],t=0,r=0;t<e.length;t+=3,r+=2)f.vertices.push(new THREE.Vector3(e[t],e[t+1],e[t+2])),o!==undefined&&c.push(new THREE.Vector3(o[t],o[t+1],o[t+2])),s!==undefined&&f.colors.push(new THREE.Color(s[t],s[t+1],s[t+2])),h!==undefined&&l.push(new THREE.Vector2(h[r],h[r+1]));if(a=function(n,t,i){var r=o!==undefined?[c[n].clone(),c[t].clone(),c[i].clone()]:[],u=s!==undefined?[f.colors[n].clone(),f.colors[t].clone(),f.colors[i].clone()]:[];f.faces.push(new THREE.Face3(n,t,i,r,u));h!==undefined&&f.faceVertexUvs[0].push([l[n].clone(),l[t].clone(),l[i].clone()])},u!==undefined)if(v=n.drawcalls,v.length>0)for(t=0;t<v.length;t++){var y=v[t],w=y.start,k=y.count,p=y.index;for(r=w,b=w+k;r<b;r+=3)a(p+u[r],p+u[r+1],p+u[r+2])}else for(t=0;t<u.length;t+=3)a(u[t],u[t+1],u[t+2]);else for(t=0;t<e.length/3;t+=3)a(t,t+1,t+2);return this.computeFaceNormals(),n.boundingBox!==null&&(this.boundingBox=n.boundingBox.clone()),n.boundingSphere!==null&&(this.boundingSphere=n.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var n=this.boundingBox.center().negate();return this.applyMatrix((new THREE.Matrix4).setPosition(n)),n},computeFaceNormals:function(){for(var n=new THREE.Vector3,r=new THREE.Vector3,i=0,f=this.faces.length;i<f;i++){var t=this.faces[i],e=this.vertices[t.a],u=this.vertices[t.b],o=this.vertices[t.c];n.subVectors(o,u);r.subVectors(e,u);n.cross(r);n.normalize();t.normal.copy(n)}},computeVertexNormals:function(n){var u,o,i,f,t,r,c,s,l,e,h;for(r=new Array(this.vertices.length),u=0,o=this.vertices.length;u<o;u++)r[u]=new THREE.Vector3;if(n)for(e=new THREE.Vector3,h=new THREE.Vector3,i=0,f=this.faces.length;i<f;i++)t=this.faces[i],c=this.vertices[t.a],s=this.vertices[t.b],l=this.vertices[t.c],e.subVectors(l,s),h.subVectors(c,s),e.cross(h),r[t.a].add(e),r[t.b].add(e),r[t.c].add(e);else for(i=0,f=this.faces.length;i<f;i++)t=this.faces[i],r[t.a].add(t.normal),r[t.b].add(t.normal),r[t.c].add(t.normal);for(u=0,o=this.vertices.length;u<o;u++)r[u].normalize();for(i=0,f=this.faces.length;i<f;i++)t=this.faces[i],t.vertexNormals[0]=r[t.a].clone(),t.vertexNormals[1]=r[t.b].clone(),t.vertexNormals[2]=r[t.c].clone()},computeMorphNormals:function(){for(var t,e,n,f,h,c,s,o,u,i=0,r=this.faces.length;i<r;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();for(f=new THREE.Geometry,f.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t])for(this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[],h=this.morphNormals[t].faceNormals,c=this.morphNormals[t].vertexNormals,i=0,r=this.faces.length;i<r;i++)o=new THREE.Vector3,u={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(o),c.push(u);for(s=this.morphNormals[t],f.vertices=this.morphTargets[t].vertices,f.computeFaceNormals(),f.computeVertexNormals(),i=0,r=this.faces.length;i<r;i++)n=this.faces[i],o=s.faceNormals[i],u=s.vertexNormals[i],o.copy(n.normal),u.a.copy(n.vertexNormals[0]),u.b.copy(n.vertexNormals[1]),u.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;i<r;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function pt(n,t,i,f,v,y,k){r=n.vertices[t];w=n.vertices[i];b=n.vertices[f];e=p[v];tt=p[y];it=p[k];rt=w.x-r.x;ut=b.x-r.x;ft=w.y-r.y;et=b.y-r.y;ot=w.z-r.z;st=b.z-r.z;o=tt.x-e.x;s=it.x-e.x;h=tt.y-e.y;c=it.y-e.y;u=1/(o*c-s*h);d.set((c*rt-h*ut)*u,(c*ft-h*et)*u,(c*ot-h*st)*u);g.set((o*ut-s*rt)*u,(o*et-s*ft)*u,(o*st-s*ot)*u);l[t].add(d);l[i].add(d);l[f].add(d);a[t].add(g);a[i].add(g);a[f].add(g)}for(var t,y,i,nt,n,p,r,w,b,e,tt,it,rt,ut,ft,et,ot,st,o,s,h,c,u,k,lt,l=[],a=[],d=new THREE.Vector3,g=new THREE.Vector3,v=new THREE.Vector3,at=new THREE.Vector3,ht=new THREE.Vector3,vt,yt,f=0,ct=this.vertices.length;f<ct;f++)l[f]=new THREE.Vector3,a[f]=new THREE.Vector3;for(t=0,y=this.faces.length;t<y;t++)n=this.faces[t],p=this.faceVertexUvs[0][t],pt(this,n.a,n.b,n.c,0,1,2);for(yt=["a","b","c","d"],t=0,y=this.faces.length;t<y;t++)for(n=this.faces[t],i=0;i<Math.min(n.vertexNormals.length,3);i++)ht.copy(n.vertexNormals[i]),nt=n[yt[i]],k=l[nt],v.copy(k),v.sub(ht.multiplyScalar(ht.dot(k))).normalize(),at.crossVectors(n.vertexNormals[i],k),lt=at.dot(a[nt]),vt=lt<0?-1:1,n.vertexTangents[i]=new THREE.Vector4(v.x,v.y,v.z,vt);this.hasTangents=!0},computeLineDistances:function(){for(var i=0,t=this.vertices,n=0,r=t.length;n<r;n++)n>0&&(i+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=i},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(n,t,i){var r,o,k,a,c,y,u,s;if(n instanceof THREE.Geometry==!1){THREE.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",n);return}var h,l=this.vertices.length,tt=this.vertices,p=n.vertices,it=this.faces,w=n.faces,rt=this.faceVertexUvs[0],b=n.faceVertexUvs[0];for(i===undefined&&(i=0),t!==undefined&&(h=(new THREE.Matrix3).getNormalMatrix(t)),r=0,o=p.length;r<o;r++)k=p[r],a=k.clone(),t!==undefined&&a.applyMatrix4(t),tt.push(a);for(r=0,o=w.length;r<o;r++){var f=w[r],e,v,d,g=f.vertexNormals,nt=f.vertexColors;for(e=new THREE.Face3(f.a+l,f.b+l,f.c+l),e.normal.copy(f.normal),h!==undefined&&e.normal.applyMatrix3(h).normalize(),u=0,s=g.length;u<s;u++)v=g[u].clone(),h!==undefined&&v.applyMatrix3(h).normalize(),e.vertexNormals.push(v);for(e.color.copy(f.color),u=0,s=nt.length;u<s;u++)d=nt[u],e.vertexColors.push(d.clone());e.materialIndex=f.materialIndex+i;it.push(e)}for(r=0,o=b.length;r<o;r++)if(c=b[r],y=[],c!==undefined){for(u=0,s=c.length;u<s;u++)y.push(c[u].clone());rt.push(y)}},mergeMesh:function(n){if(n instanceof THREE.Mesh==!1){THREE.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",n);return}n.matrixAutoUpdate&&n.updateMatrix();this.merge(n.geometry,n.matrix)},mergeVertices:function(){for(var c={},u=[],i=[],f,e,l=Math.pow(10,4),t,a,s,y,h,p,r,v,w,n=0,o=this.vertices.length;n<o;n++)f=this.vertices[n],e=Math.round(f.x*l)+"_"+Math.round(f.y*l)+"_"+Math.round(f.z*l),c[e]===undefined?(c[e]=n,u.push(this.vertices[n]),i[n]=u.length-1):i[n]=i[c[e]];for(h=[],n=0,o=this.faces.length;n<o;n++)for(t=this.faces[n],t.a=i[t.a],t.b=i[t.b],t.c=i[t.c],a=[t.a,t.b,t.c],p=-1,r=0;r<3;r++)if(a[r]==a[(r+1)%3]){p=r;h.push(n);break}for(n=h.length-1;n>=0;n--)for(v=h[n],this.faces.splice(v,1),s=0,y=this.faceVertexUvs.length;s<y;s++)this.faceVertexUvs[s].splice(v,1);return w=this.vertices.length-u.length,this.vertices=u,w},toJSON:function(){function f(n,t,i){return i?n|1<<t:n&~(1<<t)}function b(n){var t=n.x.toString()+n.y.toString()+n.z.toString();return h[t]!==undefined?h[t]:(h[t]=g.length/3,g.push(n.x,n.y,n.z),h[t])}function k(n){var t=n.r.toString()+n.g.toString()+n.b.toString();return l[t]!==undefined?l[t]:(l[t]=c.length,c.push(n.getHex()),l[t])}function nt(n){var t=n.x.toString()+n.y.toString();return v[t]!==undefined?v[t]:(v[t]=a.length/2,a.push(n.x,n.y),v[t])}var i={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type},e,o,d,s,r,y,p,w;if(this.name!==""&&(i.name=this.name),this.parameters!==undefined){e=this.parameters;for(o in e)e[o]!==undefined&&(i[o]=e[o]);return i}for(d=[],r=0;r<this.vertices.length;r++)s=this.vertices[r],d.push(s.x,s.y,s.z);var u=[],g=[],h={},c=[],l={},a=[],v={};for(r=0;r<this.faces.length;r++){var t=this.faces[r],tt=this.faceVertexUvs[0][r]!==undefined,it=t.normal.length()>0,rt=t.vertexNormals.length>0,ut=t.color.r!==1||t.color.g!==1||t.color.b!==1,ft=t.vertexColors.length>0,n=0;n=f(n,0,0);n=f(n,1,!1);n=f(n,2,!1);n=f(n,3,tt);n=f(n,4,it);n=f(n,5,rt);n=f(n,6,ut);n=f(n,7,ft);u.push(n);u.push(t.a,t.b,t.c);tt&&(y=this.faceVertexUvs[0][r],u.push(nt(y[0]),nt(y[1]),nt(y[2])));it&&u.push(b(t.normal));rt&&(p=t.vertexNormals,u.push(b(p[0]),b(p[1]),b(p[2])));ut&&u.push(k(t.color));ft&&(w=t.vertexColors,u.push(k(w[0]),k(w[1]),k(w[2])))}return i.data={},i.data.vertices=d,i.data.normals=g,c.length>0&&(i.data.colors=c),a.length>0&&(i.data.uvs=[a]),i.data.faces=u,i},clone:function(){for(var f,e,r,c,o,s,u,l,a,t=new THREE.Geometry,h=this.vertices,n=0,i=h.length;n<i;n++)t.vertices.push(h[n].clone());for(f=this.faces,n=0,i=f.length;n<i;n++)t.faces.push(f[n].clone());for(n=0,i=this.faceVertexUvs.length;n<i;n++)for(e=this.faceVertexUvs[n],t.faceVertexUvs[n]===undefined&&(t.faceVertexUvs[n]=[]),r=0,c=e.length;r<c;r++){for(o=e[r],s=[],u=0,l=o.length;u<l;u++)a=o[u],s.push(a.clone());t.faceVertexUvs[n].push(s)}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var n=new THREE.Quaternion;return function(t){var i=t||new THREE.Vector3;return this.getWorldQuaternion(n),i.set(0,0,-1).applyQuaternion(n)}}();THREE.Camera.prototype.lookAt=function(){var n=new THREE.Matrix4;return function(t){n.lookAt(this.position,t,this.up);this.quaternion.setFromRotationMatrix(n)}}();THREE.Camera.prototype.clone=function(n){return n===undefined&&(n=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,n),n.matrixWorldInverse.copy(this.matrixWorldInverse),n.projectionMatrix.copy(this.projectionMatrix),n};THREE.CubeCamera=function(n,t,i){var f,e,o,s,h;THREE.Object3D.call(this);this.type="CubeCamera";var r=90,u=1,c=new THREE.PerspectiveCamera(r,u,n,t);c.up.set(0,-1,0);c.lookAt(new THREE.Vector3(1,0,0));this.add(c);f=new THREE.PerspectiveCamera(r,u,n,t);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(-1,0,0));this.add(f);e=new THREE.PerspectiveCamera(r,u,n,t);e.up.set(0,0,1);e.lookAt(new THREE.Vector3(0,1,0));this.add(e);o=new THREE.PerspectiveCamera(r,u,n,t);o.up.set(0,0,-1);o.lookAt(new THREE.Vector3(0,-1,0));this.add(o);s=new THREE.PerspectiveCamera(r,u,n,t);s.up.set(0,-1,0);s.lookAt(new THREE.Vector3(0,0,1));this.add(s);h=new THREE.PerspectiveCamera(r,u,n,t);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(n,t){var i=this.renderTarget,r=i.generateMipmaps;i.generateMipmaps=!1;i.activeCubeFace=0;n.render(t,c,i);i.activeCubeFace=1;n.render(t,f,i);i.activeCubeFace=2;n.render(t,e,i);i.activeCubeFace=3;n.render(t,o,i);i.activeCubeFace=4;n.render(t,s,i);i.generateMipmaps=r;i.activeCubeFace=5;n.render(t,h,i)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;THREE.OrthographicCamera=function(n,t,i,r,u,f){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=n;this.right=t;this.top=i;this.bottom=r;this.near=u!==undefined?u:.1;this.far=f!==undefined?f:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var n=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(i-n,i+n,r+t,r-t,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var n=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,n),n.zoom=this.zoom,n.left=this.left,n.right=this.right,n.top=this.top,n.bottom=this.bottom,n.near=this.near,n.far=this.far,n.projectionMatrix.copy(this.projectionMatrix),n};THREE.PerspectiveCamera=function(n,t,i,r){THREE.Camera.call(this);this.type="PerspectiveCamera";this.zoom=1;this.fov=n!==undefined?n:50;this.aspect=t!==undefined?t:1;this.near=i!==undefined?i:.1;this.far=r!==undefined?r:2e3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(n,t){t===undefined&&(t=24);this.fov=2*THREE.Math.radToDeg(Math.atan(t/(n*2)));this.updateProjectionMatrix()};THREE.AnimationClip=function(n,t,i){var r,u;if(this.name=n,this.tracks=i,this.duration=t!==undefined?t:-1,this.duration<0)for(r=0;r<this.tracks.length;r++)u=this.tracks[r],this.duration=Math.max(u.keys[u.keys.length-1].time);this.trim();this.optimize();this.results=[]};THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,getAt:function(n){var t,i;for(n=Math.max(0,Math.min(n,this.duration)),t=0;t<this.tracks.length;t++)i=this.tracks[t],this.results[t]=i.getAt(n);return this.results},trim:function(){for(var n=0;n<this.tracks.length;n++)this.tracks[n].trim(0,this.duration);return this},optimize:function(){for(var n=0;n<this.tracks.length;n++)this.tracks[n].optimize();return this}};THREE.AnimationClip.CreateFromMorphTargetSequence=function(n,t,i){for(var r,f=t.length,e=[],u=0;u<f;u++)r=[],r.push({time:(u+f-1)%f,value:0}),r.push({time:u,value:1}),r.push({time:(u+1)%f,value:0}),r.sort(THREE.KeyframeTrack.keyComparer),r[0].time===0&&r.push({time:f,value:r[0].value}),e.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+t[u].name+"]",r).scale(1/i));return new THREE.AnimationClip(n,-1,e)};THREE.AnimationClip.findByName=function(n,t){for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null};THREE.AnimationClip.CreateClipsFromMorphTargetSequences=function(n,t){for(var o,u,f,s,i,r={},e=0,h=n.length;e<h;e++)o=n[e],u=o.name.match(/^([\w-]*?)([\d]+)$/),u&&u.length>1&&(i=u[1],f=r[i],f||(r[i]=f=[]),f.push(o));s=[];for(i in r)s.push(THREE.AnimationClip.CreateFromMorphTargetSequence(i,r[i],t));return s};THREE.AnimationClip.parse=function(n){for(var i=[],t=0;t<n.tracks.length;t++)i.push(THREE.KeyframeTrack.parse(n.tracks[t]).scale(1/n.fps));return new THREE.AnimationClip(n.name,n.duration,i)};THREE.AnimationClip.parseAnimation=function(n,t,i){var o,r,s,u,l,a,f,v,h,y,p,w;if(!n)return console.error("  no animation in JSONLoader data"),null;var c=function(n,t,i,r,u){for(var f,e=[],o=0;o<t.length;o++)f=t[o],f[i]!==undefined&&e.push({time:f.time,value:u(f)});return e.length>0?new r(n,e):null},e=[],d=n.name||"default",b=n.length||-1,g=n.fps||30,k=n.hierarchy||[];for(o=0;o<k.length;o++)if(r=k[o].keys,r&&r.length!=0)if(r[0].morphTargets){for(s={},u=0;u<r.length;u++)if(r[u].morphTargets)for(f=0;f<r[u].morphTargets.length;f++)s[r[u].morphTargets[f]]=-1;for(l in s){for(a=[],f=0;f<r[u].morphTargets.length;f++)v=r[u],a.push({time:v.time,value:v.morphTarget===l?1:0});e.push(new THREE.NumberKeyframeTrack(i+".morphTargetInfluence["+l+"]",a))}b=s.length*(g||1)}else h=i+".bones["+t[o].name+"]",y=c(h+".position",r,"pos",THREE.VectorKeyframeTrack,function(n){return(new THREE.Vector3).fromArray(n.pos)}),y&&e.push(y),p=c(h+".quaternion",r,"rot",THREE.QuaternionKeyframeTrack,function(n){return n.rot.slerp?n.rot.clone():(new THREE.Quaternion).fromArray(n.rot)}),p&&e.push(p),w=c(h+".scale",r,"scl",THREE.VectorKeyframeTrack,function(n){return(new THREE.Vector3).fromArray(n.scl)}),w&&e.push(w);return e.length===0?null:new THREE.AnimationClip(d,b,e)};THREE.PerspectiveCamera.prototype.setViewOffset=function(n,t,i,r,u,f){this.fullWidth=n;this.fullHeight=t;this.x=i;this.y=r;this.width=u;this.height=f;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var i=THREE.Math.radToDeg(2*Math.atan(Math.tan(THREE.Math.degToRad(this.fov)*.5)/this.zoom));if(this.fullWidth){var r=this.fullWidth/this.fullHeight,n=Math.tan(THREE.Math.degToRad(i*.5))*this.near,u=-n,t=r*u,o=r*n,f=Math.abs(o-t),e=Math.abs(n-u);this.projectionMatrix.makeFrustum(t+this.x*f/this.fullWidth,t+(this.x+this.width)*f/this.fullWidth,n-(this.y+this.height)*e/this.fullHeight,n-this.y*e/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(i,this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var n=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,n),n.zoom=this.zoom,n.fov=this.fov,n.aspect=this.aspect,n.near=this.near,n.far=this.far,n.projectionMatrix.copy(this.projectionMatrix),n};THREE.Light=function(n){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(n);this.receiveShadow=undefined};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(n){this.shadow.camera.fov=n}},shadowCameraLeft:{set:function(n){this.shadow.camera.left=n}},shadowCameraRight:{set:function(n){this.shadow.camera.right=n}},shadowCameraTop:{set:function(n){this.shadow.camera.top=n}},shadowCameraBottom:{set:function(n){this.shadow.camera.bottom=n}},shadowCameraNear:{set:function(n){this.shadow.camera.near=n}},shadowCameraFar:{set:function(n){this.shadow.camera.far=n}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.")}},shadowBias:{set:function(n){this.shadow.bias=n}},shadowDarkness:{set:function(n){this.shadow.darkness=n}},shadowMapWidth:{set:function(n){this.shadow.mapSize.width=n}},shadowMapHeight:{set:function(n){this.shadow.mapSize.height=n}}});THREE.Light.prototype.copy=function(n){return THREE.Object3D.prototype.copy.call(this,n),this.color.copy(n.color),this};THREE.Light.prototype.toJSON=function(n){var t=THREE.Object3D.prototype.toJSON.call(this,n);return t.object.color=this.color.getHex(),this.groundColor!==undefined&&(t.object.groundColor=this.groundColor.getHex()),this.intensity!==undefined&&(t.object.intensity=this.intensity),this.distance!==undefined&&(t.object.distance=this.distance),this.angle!==undefined&&(t.object.angle=this.angle),this.decay!==undefined&&(t.object.decay=this.decay),this.exponent!==undefined&&(t.object.exponent=this.exponent),t};THREE.LightShadow=function(n){this.camera=n;this.bias=0;this.darkness=1;this.mapSize=new THREE.Vector2(512,512);this.map=null;this.matrix=null};THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(n){this.camera=n.camera.clone();this.bias=n.bias;this.darkness=n.darkness;this.mapSize.copy(n.mapSize)},clone:function(){return(new this.constructor).copy(this)}};THREE.AmbientLight=function(n){THREE.Light.call(this,n);this.type="AmbientLight";this.castShadow=undefined};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(n,t){THREE.Light.call(this,n);this.type="DirectionalLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.intensity=t!==undefined?t:1;this.shadow=new THREE.LightShadow(new THREE.OrthographicCamera(-500,500,500,-500,50,5e3))};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.DirectionalLight.prototype.copy=function(n){return THREE.Light.prototype.copy.call(this,n),this.intensity=n.intensity,this.target=n.target.clone(),this.shadow=n.shadow.clone(),this};THREE.HemisphereLight=function(n,t,i){THREE.Light.call(this,n);this.type="HemisphereLight";this.castShadow=undefined;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(t);this.intensity=i!==undefined?i:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;THREE.HemisphereLight.prototype.copy=function(n){return THREE.Light.prototype.copy.call(this,n),this.groundColor.copy(n.groundColor),this.intensity=n.intensity,this};THREE.PointLight=function(n,t,i,r){THREE.Light.call(this,n);this.type="PointLight";this.intensity=t!==undefined?t:1;this.distance=i!==undefined?i:0;this.decay=r!==undefined?r:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,1,500))};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.PointLight.prototype.copy=function(n){return THREE.Light.prototype.copy.call(this,n),this.intensity=n.intensity,this.distance=n.distance,this.decay=n.decay,this.shadow=n.shadow.clone(),this};THREE.SpotLight=function(n,t,i,r,u,f){THREE.Light.call(this,n);this.type="SpotLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.intensity=t!==undefined?t:1;this.distance=i!==undefined?i:0;this.angle=r!==undefined?r:Math.PI/3;this.exponent=u!==undefined?u:10;this.decay=f!==undefined?f:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(50,1,50,5e3))};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;THREE.SpotLight.prototype.copy=function(n){return THREE.Light.prototype.copy.call(this,n),this.intensity=n.intensity,this.distance=n.distance,this.angle=n.angle,this.exponent=n.exponent,this.decay=n.decay,this.target=n.target.clone(),this.shadow=n.shadow.clone(),this};THREE.Cache={enabled:!1,files:{},add:function(n,t){this.enabled!==!1&&(this.files[n]=t)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};THREE.Loader=function(n){this.showStatus=n;this.statusDomElement=n?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,addStatusElement:function(){var n=document.createElement("div");return n.style.position="absolute",n.style.fontSize="0.8em",n.style.textAlign="left",n.style.background="rgba(0,0,0,0.25)",n.style.color="#fff",n.style.width="120px",n.style.padding="0.5em 0.5em 0.5em 0.5em",n.style.zIndex=1e3,n.innerHTML="Loading ...",n},extractUrlBase:function(n){var t=n.split("/");return t.length===1?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(n,t){for(var r=[],i=0;i<n.length;++i)r[i]=this.createMaterial(n[i],t);return r},needsTangents:function(n){for(var r,t=0,i=n.length;t<i;t++)if(r=n[t],r instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(){var n,t,i;return function(r,u,f){function s(n,i,r,e,o){var h=u+n,a=THREE.Loader.Handlers.get(h),s,l;return a!==null?s=a.load(h):(t.setCrossOrigin(f),s=t.load(h)),i!==undefined&&(s.repeat.fromArray(i),i[0]!==1&&(s.wrapS=THREE.RepeatWrapping),i[1]!==1&&(s.wrapT=THREE.RepeatWrapping)),r!==undefined&&s.offset.fromArray(r),e!==undefined&&(e[0]==="repeat"&&(s.wrapS=THREE.RepeatWrapping),e[0]==="mirror"&&(s.wrapS=THREE.MirroredRepeatWrapping),e[1]==="repeat"&&(s.wrapT=THREE.RepeatWrapping),e[1]==="mirror"&&(s.wrapT=THREE.MirroredRepeatWrapping)),o!==undefined&&(s.anisotropy=o),l=THREE.Math.generateUUID(),c[l]=s,l}var c,e,h,o;n===undefined&&(n=new THREE.Color);t===undefined&&(t=new THREE.TextureLoader);i===undefined&&(i=new THREE.MaterialLoader);c={};e={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(h in r){o=r[h];switch(h){case"DbgColor":e.color=o;break;case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":e.name=o;break;case"blending":e.blending=THREE[o];break;case"colorDiffuse":e.color=n.fromArray(o).getHex();break;case"colorSpecular":e.specular=n.fromArray(o).getHex();break;case"colorEmissive":e.emissive=n.fromArray(o).getHex();break;case"specularCoef":e.shininess=o;break;case"shading":o.toLowerCase()==="basic"&&(e.type="MeshBasicMaterial");o.toLowerCase()==="phong"&&(e.type="MeshPhongMaterial");break;case"mapDiffuse":e.map=s(o,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":e.lightMap=s(o,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":e.aoMap=s(o,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":e.bumpMap=s(o,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":e.bumpScale=o;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":e.normalMap=s(o,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":e.normalScale=[o,o];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":e.specularMap=s(o,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":e.alphaMap=s(o,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":e.side=THREE.BackSide;break;case"doubleSided":e.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader: transparency has been renamed to opacity");e.opacity=o;break;case"opacity":case"transparent":case"depthTest":case"depthWrite":case"transparent":case"visible":case"wireframe":e[h]=o;break;case"vertexColors":o===!0&&(e.vertexColors=THREE.VertexColors);o==="face"&&(e.vertexColors=THREE.FaceColors);break;default:console.error("Loader.createMaterial: Unsupported",h,o)}}return e.type!=="MeshPhongMaterial"&&delete e.specular,e.opacity<1&&(e.transparent=!0),i.setTextures(c),i.parse(e)}}()};THREE.Loader.Handlers={handlers:[],add:function(n,t){this.handlers.push(n,t)},get:function(n){for(var r,u,i=this.handlers,t=0,f=i.length;t<f;t+=2)if(r=i[t],u=i[t+1],r.test(n))return u;return null}};THREE.XHRLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(n,t,i,r){var f=this,e=THREE.Cache.get(n),u;return e!==undefined?(t&&setTimeout(function(){t(e)},0),e):(u=new XMLHttpRequest,u.open("GET",n,!0),u.addEventListener("load",function(i){var r=i.target.response;THREE.Cache.add(n,r);t&&t(r);f.manager.itemEnd(n)},!1),i!==undefined&&u.addEventListener("progress",function(n){i(n)},!1),u.addEventListener("error",function(t){r&&r(t);f.manager.itemError(n)},!1),this.crossOrigin!==undefined&&(u.crossOrigin=this.crossOrigin),this.responseType!==undefined&&(u.responseType=this.responseType),this.withCredentials!==undefined&&(u.withCredentials=this.withCredentials),u.send(null),f.manager.itemStart(n),u)},setResponseType:function(n){this.responseType=n},setCrossOrigin:function(n){this.crossOrigin=n},setWithCredentials:function(n){this.withCredentials=n}};THREE.ImageLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(n,t,i,r){var f=this,e=THREE.Cache.get(n),u;return e!==undefined?(f.manager.itemStart(n),t?setTimeout(function(){t(e);f.manager.itemEnd(n)},0):f.manager.itemEnd(n),e):(u=document.createElement("img"),u.addEventListener("load",function(){THREE.Cache.add(n,this);t&&t(this);f.manager.itemEnd(n)},!1),i!==undefined&&u.addEventListener("progress",function(n){i(n)},!1),u.addEventListener("error",function(t){r&&r(t);f.manager.itemError(n)},!1),this.crossOrigin!==undefined&&(u.crossOrigin=this.crossOrigin),f.manager.itemStart(n),u.src=n,u)},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.JSONLoader=function(n){typeof n=="boolean"&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),n=undefined);this.manager=n!==undefined?n:THREE.DefaultLoadingManager;this.withCredentials=!1};THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){return this._statusDomElement===undefined&&(this._statusDomElement=document.createElement("div")),console.warn("THREE.JSONLoader: .statusDomElement has been removed."),this._statusDomElement},load:function(n,t){var r=this,u=this.texturePath&&typeof this.texturePath=="string"?this.texturePath:THREE.Loader.prototype.extractUrlBase(n),i=new THREE.XHRLoader(this.manager);i.setCrossOrigin(this.crossOrigin);i.setWithCredentials(this.withCredentials);i.load(n,function(i){var o=JSON.parse(i),f=o.metadata,e;if(f!==undefined){if(f.type==="object"){console.error("THREE.JSONLoader: "+n+" should be loaded with THREE.ObjectLoader instead.");return}if(f.type==="scene"){console.error("THREE.JSONLoader: "+n+" should be loaded with THREE.SceneLoader instead.");return}}e=r.parse(o,u);t(e.geometry,e.materials)})},setCrossOrigin:function(n){this.crossOrigin=n},setTexturePath:function(n){this.texturePath=n},parse:function(n,t){function f(t){function p(n,t){return n&1<<t}var r,l,a,u,it,v,e,w,d,y,yt,st,ht,ct,lt,at,vt,g,h,s,c,b,nt,k,tt,rt,ut,f=n.faces,ft=n.vertices,o=n.normals,et=n.colors,ot=0;if(n.uvs!==undefined){for(r=0;r<n.uvs.length;r++)n.uvs[r].length&&ot++;for(r=0;r<ot;r++)i.faceVertexUvs[r]=[]}for(u=0,it=ft.length;u<it;)g=new THREE.Vector3,g.x=ft[u++]*t,g.y=ft[u++]*t,g.z=ft[u++]*t,i.vertices.push(g);for(u=0,it=f.length;u<it;)if(y=f[u++],yt=p(y,0),st=p(y,1),ht=p(y,3),ct=p(y,4),lt=p(y,5),at=p(y,6),vt=p(y,7),yt){if(s=new THREE.Face3,s.a=f[u],s.b=f[u+1],s.c=f[u+3],c=new THREE.Face3,c.a=f[u+1],c.b=f[u+2],c.c=f[u+3],u+=4,st&&(d=f[u++],s.materialIndex=d,c.materialIndex=d),a=i.faces.length,ht)for(r=0;r<ot;r++)for(k=n.uvs[r],i.faceVertexUvs[r][a]=[],i.faceVertexUvs[r][a+1]=[],l=0;l<4;l++)w=f[u++],rt=k[w*2],ut=k[w*2+1],tt=new THREE.Vector2(rt,ut),l!==2&&i.faceVertexUvs[r][a].push(tt),l!==0&&i.faceVertexUvs[r][a+1].push(tt);if(ct&&(e=f[u++]*3,s.normal.set(o[e++],o[e++],o[e]),c.normal.copy(s.normal)),lt)for(r=0;r<4;r++)e=f[u++]*3,nt=new THREE.Vector3(o[e++],o[e++],o[e]),r!==2&&s.vertexNormals.push(nt),r!==0&&c.vertexNormals.push(nt);if(at&&(v=f[u++],b=et[v],s.color.setHex(b),c.color.setHex(b)),vt)for(r=0;r<4;r++)v=f[u++],b=et[v],r!==2&&s.vertexColors.push(new THREE.Color(b)),r!==0&&c.vertexColors.push(new THREE.Color(b));i.faces.push(s);i.faces.push(c)}else{if(h=new THREE.Face3,h.a=f[u++],h.b=f[u++],h.c=f[u++],st&&(d=f[u++],h.materialIndex=d),a=i.faces.length,ht)for(r=0;r<ot;r++)for(k=n.uvs[r],i.faceVertexUvs[r][a]=[],l=0;l<3;l++)w=f[u++],rt=k[w*2],ut=k[w*2+1],tt=new THREE.Vector2(rt,ut),i.faceVertexUvs[r][a].push(tt);if(ct&&(e=f[u++]*3,h.normal.set(o[e++],o[e++],o[e])),lt)for(r=0;r<3;r++)e=f[u++]*3,nt=new THREE.Vector3(o[e++],o[e++],o[e]),h.vertexNormals.push(nt);if(at&&(v=f[u++],h.color.setHex(et[v])),vt)for(r=0;r<3;r++)v=f[u++],h.vertexColors.push(new THREE.Color(et[v]));i.faces.push(h)}}function e(){var r=n.influencesPerVertex!==undefined?n.influencesPerVertex:2,t,u;if(n.skinWeights)for(t=0,u=n.skinWeights.length;t<u;t+=r){var f=n.skinWeights[t],e=r>1?n.skinWeights[t+1]:0,o=r>2?n.skinWeights[t+2]:0,s=r>3?n.skinWeights[t+3]:0;i.skinWeights.push(new THREE.Vector4(f,e,o,s))}if(n.skinIndices)for(t=0,u=n.skinIndices.length;t<u;t+=r){var h=n.skinIndices[t],c=r>1?n.skinIndices[t+1]:0,l=r>2?n.skinIndices[t+2]:0,a=r>3?n.skinIndices[t+3]:0;i.skinIndices.push(new THREE.Vector4(h,c,l,a))}i.bones=n.bones;i.bones&&i.bones.length>0&&(i.skinWeights.length!==i.skinIndices.length||i.skinIndices.length!==i.vertices.length)&&console.warn("When skinning, number of vertices ("+i.vertices.length+"), skinIndices ("+i.skinIndices.length+"), and skinWeights ("+i.skinWeights.length+") should match.")}function o(t){var h,f,u,c,e,s,l,r,o;if(n.morphTargets!==undefined)for(r=0,o=n.morphTargets.length;r<o;r++)for(i.morphTargets[r]={},i.morphTargets[r].name=n.morphTargets[r].name,i.morphTargets[r].vertices=[],h=i.morphTargets[r].vertices,f=n.morphTargets[r].vertices,u=0,c=f.length;u<c;u+=3)e=new THREE.Vector3,e.x=f[u]*t,e.y=f[u+1]*t,e.z=f[u+2]*t,h.push(e);if(n.morphColors!==undefined&&n.morphColors.length>0)for(console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.'),s=i.faces,l=n.morphColors[0].colors,r=0,o=s.length;r<o;r++)s[r].color.fromArray(l,r*3)}function s(){var r=[],t=[],u,f,e;for(n.animation!==undefined&&t.push(n.animation),n.animations!==undefined&&(n.animations.length?t=t.concat(n.animations):t.push(n.animations)),u=0;u<t.length;u++)f=THREE.AnimationClip.parseAnimation(t[u],i.bones),f&&r.push(f);i.morphTargets&&(e=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(i.morphTargets,10),r=r.concat(e));r.length>0&&(i.animations=r)}var i=new THREE.Geometry,r=n.scale!==undefined?1/n.scale:1,u;return f(r),e(),o(r),s(),i.computeFaceNormals(),i.computeBoundingSphere(),n.materials===undefined||n.materials.length===0?{geometry:i}:(u=THREE.Loader.prototype.initMaterials(n.materials,t,this.crossOrigin),{geometry:i,materials:u})}};THREE.LoadingManager=function(n,t,i){var r=this,e=!1,u=0,f=0;this.onStart=undefined;this.onLoad=n;this.onProgress=t;this.onError=i;this.itemStart=function(n){if(f++,e===!1&&r.onStart!==undefined)r.onStart(n,u,f);e=!0};this.itemEnd=function(n){if(u++,r.onProgress!==undefined)r.onProgress(n,u,f);u===f&&(e=!1,r.onLoad!==undefined&&r.onLoad())};this.itemError=function(n){if(r.onError!==undefined)r.onError(n)}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(n,t,i,r){var u=this,f=new THREE.XHRLoader(u.manager);f.setCrossOrigin(this.crossOrigin);f.load(n,function(n){t(u.parse(JSON.parse(n)))},i,r)},setCrossOrigin:function(n){this.crossOrigin=n},parse:function(n){var t=new THREE.BufferGeometry,o=n.data.index,s,h,u,r,f,e,a,c,i,l;o!==undefined&&(r=new self[o.type](o.array),t.setIndex(new THREE.BufferAttribute(r,1)));s=n.data.attributes;for(h in s)u=s[h],r=new self[u.type](u.array),t.addAttribute(h,new THREE.BufferAttribute(r,u.itemSize));if(f=n.data.groups||n.data.drawcalls||n.data.offsets,f!==undefined)for(e=0,a=f.length;e!==a;++e)c=f[e],t.addGroup(c.start,c.count);return i=n.data.boundingSphere,i!==undefined&&(l=new THREE.Vector3,i.center!==undefined&&l.fromArray(i.center),t.boundingSphere=new THREE.Sphere(l,i.radius)),t}};THREE.MaterialLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager;this.textures={}};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(n,t,i,r){var u=this,f=new THREE.XHRLoader(u.manager);f.setCrossOrigin(this.crossOrigin);f.load(n,function(n){t(u.parse(JSON.parse(n)))},i,r)},setCrossOrigin:function(n){this.crossOrigin=n},setTextures:function(n){this.textures=n},getTexture:function(n){var t=this.textures;return t[n]===undefined&&console.warn("THREE.MaterialLoader: Undefined texture",n),t[n]},parse:function(n){var t=new THREE[n.type],i,r;if(t.uuid=n.uuid,n.name!==undefined&&(t.name=n.name),n.color!==undefined&&t.color.setHex(n.color),n.emissive!==undefined&&t.emissive.setHex(n.emissive),n.specular!==undefined&&t.specular.setHex(n.specular),n.shininess!==undefined&&(t.shininess=n.shininess),n.uniforms!==undefined&&(t.uniforms=n.uniforms),n.vertexShader!==undefined&&(t.vertexShader=n.vertexShader),n.fragmentShader!==undefined&&(t.fragmentShader=n.fragmentShader),n.vertexColors!==undefined&&(t.vertexColors=n.vertexColors),n.shading!==undefined&&(t.shading=n.shading),n.blending!==undefined&&(t.blending=n.blending),n.side!==undefined&&(t.side=n.side),n.opacity!==undefined&&(t.opacity=n.opacity),n.transparent!==undefined&&(t.transparent=n.transparent),n.alphaTest!==undefined&&(t.alphaTest=n.alphaTest),n.depthTest!==undefined&&(t.depthTest=n.depthTest),n.depthWrite!==undefined&&(t.depthWrite=n.depthWrite),n.wireframe!==undefined&&(t.wireframe=n.wireframe),n.wireframeLinewidth!==undefined&&(t.wireframeLinewidth=n.wireframeLinewidth),n.size!==undefined&&(t.size=n.size),n.sizeAttenuation!==undefined&&(t.sizeAttenuation=n.sizeAttenuation),n.map!==undefined&&(t.map=this.getTexture(n.map)),n.alphaMap!==undefined&&(t.alphaMap=this.getTexture(n.alphaMap),t.transparent=!0),n.bumpMap!==undefined&&(t.bumpMap=this.getTexture(n.bumpMap)),n.bumpScale!==undefined&&(t.bumpScale=n.bumpScale),n.normalMap!==undefined&&(t.normalMap=this.getTexture(n.normalMap)),n.normalScale&&(t.normalScale=new THREE.Vector2(n.normalScale,n.normalScale)),n.displacementMap!==undefined&&(t.displacementMap=this.getTexture(n.displacementMap)),n.displacementScale!==undefined&&(t.displacementScale=n.displacementScale),n.displacementBias!==undefined&&(t.displacementBias=n.displacementBias),n.specularMap!==undefined&&(t.specularMap=this.getTexture(n.specularMap)),n.envMap!==undefined&&(t.envMap=this.getTexture(n.envMap),t.combine=THREE.MultiplyOperation),n.reflectivity&&(t.reflectivity=n.reflectivity),n.lightMap!==undefined&&(t.lightMap=this.getTexture(n.lightMap)),n.lightMapIntensity!==undefined&&(t.lightMapIntensity=n.lightMapIntensity),n.aoMap!==undefined&&(t.aoMap=this.getTexture(n.aoMap)),n.aoMapIntensity!==undefined&&(t.aoMapIntensity=n.aoMapIntensity),n.materials!==undefined)for(i=0,r=n.materials.length;i<r;i++)t.materials.push(this.parse(n.materials[i]));return t}};THREE.ObjectLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager;this.texturePath=""};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(n,t,i,r){this.texturePath===""&&(this.texturePath=n.substring(0,n.lastIndexOf("/")+1));var u=this,f=new THREE.XHRLoader(u.manager);f.setCrossOrigin(this.crossOrigin);f.load(n,function(n){u.parse(JSON.parse(n),t)},i,r)},setTexturePath:function(n){this.texturePath=n},setCrossOrigin:function(n){this.crossOrigin=n},parse:function(n,t){var r=this.parseGeometries(n.geometries),u=this.parseImages(n.images,function(){t!==undefined&&t(i)}),f=this.parseTextures(n.textures,u),e=this.parseMaterials(n.materials,f),i=this.parseObject(n.object,r,e);return n.animations&&(i.animations=this.parseAnimations(n.animations)),(n.images===undefined||n.images.length===0)&&t!==undefined&&t(i),i},parseGeometries:function(n){var u={},f,e,r,o,i,t;if(n!==undefined)for(f=new THREE.JSONLoader,e=new THREE.BufferGeometryLoader,r=0,o=n.length;r<o;r++){t=n[r];switch(t.type){case"PlaneGeometry":case"PlaneBufferGeometry":i=new THREE[t.type](t.width,t.height,t.widthSegments,t.heightSegments);break;case"BoxGeometry":case"CubeGeometry":i=new THREE.BoxGeometry(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments);break;case"CircleBufferGeometry":i=new THREE.CircleBufferGeometry(t.radius,t.segments,t.thetaStart,t.thetaLength);break;case"CircleGeometry":i=new THREE.CircleGeometry(t.radius,t.segments,t.thetaStart,t.thetaLength);break;case"CylinderGeometry":i=new THREE.CylinderGeometry(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength);break;case"SphereGeometry":i=new THREE.SphereGeometry(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength);break;case"SphereBufferGeometry":i=new THREE.SphereBufferGeometry(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength);break;case"DodecahedronGeometry":i=new THREE.DodecahedronGeometry(t.radius,t.detail);break;case"IcosahedronGeometry":i=new THREE.IcosahedronGeometry(t.radius,t.detail);break;case"OctahedronGeometry":i=new THREE.OctahedronGeometry(t.radius,t.detail);break;case"TetrahedronGeometry":i=new THREE.TetrahedronGeometry(t.radius,t.detail);break;case"RingGeometry":i=new THREE.RingGeometry(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength);break;case"TorusGeometry":i=new THREE.TorusGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc);break;case"TorusKnotGeometry":i=new THREE.TorusKnotGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.p,t.q,t.heightScale);break;case"BufferGeometry":i=e.parse(t);break;case"Geometry":i=f.parse(t.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+t.type+'"');continue}i.uuid=t.uuid;t.name!==undefined&&(i.name=t.name);u[t.uuid]=i}return u},parseMaterials:function(n,t){var f={},r,i,e,u;if(n!==undefined)for(r=new THREE.MaterialLoader,r.setTextures(t),i=0,e=n.length;i<e;i++)u=r.parse(n[i]),f[u.uuid]=u;return f},parseAnimations:function(n){for(var r,i=[],t=0;t<n.length;t++)r=THREE.AnimationClip.parse(n[t]),i.push(r);return i},parseImages:function(n,t){function c(n){return u.manager.itemStart(n),f.load(n,function(){u.manager.itemEnd(n)})}var u=this,e={},o,f,r,s,i,h;if(n!==undefined&&n.length>0)for(o=new THREE.LoadingManager(t),f=new THREE.ImageLoader(o),f.setCrossOrigin(this.crossOrigin),r=0,s=n.length;r<s;r++)i=n[r],h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i.url)?i.url:u.texturePath+i.url,e[i.uuid]=c(h);return e},parseTextures:function(n,t){function u(n){return typeof n=="number"?n:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",n),THREE[n])}var e={},f,o,i,r;if(n!==undefined)for(f=0,o=n.length;f<o;f++)i=n[f],i.image===undefined&&console.warn('THREE.ObjectLoader: No "image" specified for',i.uuid),t[i.image]===undefined&&console.warn("THREE.ObjectLoader: Undefined image",i.image),r=new THREE.Texture(t[i.image]),r.needsUpdate=!0,r.uuid=i.uuid,i.name!==undefined&&(r.name=i.name),i.mapping!==undefined&&(r.mapping=u(i.mapping)),i.offset!==undefined&&(r.offset=new THREE.Vector2(i.offset[0],i.offset[1])),i.repeat!==undefined&&(r.repeat=new THREE.Vector2(i.repeat[0],i.repeat[1])),i.minFilter!==undefined&&(r.minFilter=u(i.minFilter)),i.magFilter!==undefined&&(r.magFilter=u(i.magFilter)),i.anisotropy!==undefined&&(r.anisotropy=i.anisotropy),Array.isArray(i.wrap)&&(r.wrapS=u(i.wrap[0]),r.wrapT=u(i.wrap[1])),e[i.uuid]=r;return e},parseObject:function(){var n=new THREE.Matrix4;return function(t,i,r){function s(n){return i[n]===undefined&&console.warn("THREE.ObjectLoader: Undefined geometry",n),i[n]}function e(n){return n===undefined?undefined:(r[n]===undefined&&console.warn("THREE.ObjectLoader: Undefined material",n),r[n])}var u,h,o,c,f;switch(t.type){case"Scene":u=new THREE.Scene;break;case"PerspectiveCamera":u=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":u=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":u=new THREE.AmbientLight(t.color);break;case"DirectionalLight":u=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":u=new THREE.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":u=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent,t.decay);break;case"HemisphereLight":u=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":u=new THREE.Mesh(s(t.geometry),e(t.material));break;case"LOD":u=new THREE.LOD;break;case"Line":u=new THREE.Line(s(t.geometry),e(t.material),t.mode);break;case"PointCloud":case"Points":u=new THREE.Points(s(t.geometry),e(t.material));break;case"Sprite":u=new THREE.Sprite(e(t.material));break;case"Group":u=new THREE.Group;break;default:u=new THREE.Object3D}if(u.uuid=t.uuid,t.name!==undefined&&(u.name=t.name),t.matrix!==undefined?(n.fromArray(t.matrix),n.decompose(u.position,u.quaternion,u.scale)):(t.position!==undefined&&u.position.fromArray(t.position),t.rotation!==undefined&&u.rotation.fromArray(t.rotation),t.scale!==undefined&&u.scale.fromArray(t.scale)),t.castShadow!==undefined&&(u.castShadow=t.castShadow),t.receiveShadow!==undefined&&(u.receiveShadow=t.receiveShadow),t.visible!==undefined&&(u.visible=t.visible),t.userData!==undefined&&(u.userData=t.userData),t.children!==undefined)for(f in t.children)u.add(this.parseObject(t.children[f],i,r));if(t.type==="LOD")for(h=t.levels,o=0;o<h.length;o++)c=h[o],f=u.getObjectByProperty("uuid",c.object),f!==undefined&&u.addLevel(f,c.distance);return u}}()};THREE.TextureLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(n,t,i,r){var u=new THREE.Texture,f=new THREE.ImageLoader(this.manager);return f.setCrossOrigin(this.crossOrigin),f.load(n,function(n){u.image=n;u.needsUpdate=!0;t!==undefined&&t(u)},i,r),u},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.CubeTextureLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(n,t,i,r){function s(i){o.load(n[i],function(n){u.images[i]=n;e++;e===6&&(u.needsUpdate=!0,t&&t(u))},undefined,r)}var u=new THREE.CubeTexture([]),o=new THREE.ImageLoader,e,f;for(o.setCrossOrigin(this.crossOrigin),e=0,f=0;f<n.length;++f)s(f);return u},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager;this._parser=null};THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(n,t,i,r){var e=this,u=new THREE.DataTexture,f=new THREE.XHRLoader(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setResponseType("arraybuffer"),f.load(n,function(n){var i=e._parser(n);i&&(undefined!==i.image?u.image=i.image:undefined!==i.data&&(u.image.width=i.width,u.image.height=i.height,u.image.data=i.data),u.wrapS=undefined!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,u.wrapT=undefined!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,u.magFilter=undefined!==i.magFilter?i.magFilter:THREE.LinearFilter,u.minFilter=undefined!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,u.anisotropy=undefined!==i.anisotropy?i.anisotropy:1,undefined!==i.format&&(u.format=i.format),undefined!==i.type&&(u.type=i.type),undefined!==i.mipmaps&&(u.mipmaps=i.mipmaps),1===i.mipmapCount&&(u.minFilter=THREE.LinearFilter),u.needsUpdate=!0,t&&t(u,i))},i,r),u},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.CompressedTextureLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager;this._parser=null};THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(n,t,i,r){var h=this,f=[],u=new THREE.CompressedTexture,e,s,c,o,l;if(u.image=f,e=new THREE.XHRLoader(this.manager),e.setCrossOrigin(this.crossOrigin),e.setResponseType("arraybuffer"),Array.isArray(n))for(s=0,c=function(o){e.load(n[o],function(n){var i=h._parser(n,!0);f[o]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps};s+=1;s===6&&(i.mipmapCount===1&&(u.minFilter=THREE.LinearFilter),u.format=i.format,u.needsUpdate=!0,t&&t(u))},i,r)},o=0,l=n.length;o<l;++o)c(o);else e.load(n,function(n){var i=h._parser(n,!0),o,r,e;if(i.isCubemap)for(o=i.mipmaps.length/i.mipmapCount,r=0;r<o;r++)for(f[r]={mipmaps:[]},e=0;e<i.mipmapCount;e++)f[r].mipmaps.push(i.mipmaps[r*i.mipmapCount+e]),f[r].format=i.format,f[r].width=i.width,f[r].height=i.height;else u.image.width=i.width,u.image.height=i.height,u.mipmaps=i.mipmaps;i.mipmapCount===1&&(u.minFilter=THREE.LinearFilter);u.format=i.format;u.needsUpdate=!0;t&&t(u)},i,r);return u},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthTest=!0;this.depthWrite=!0;this.colorWrite=!0;this.polygonOffset=!1;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=0;this.visible=!0;this._needsUpdate=!0};THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(n){n===!0&&this.update();this._needsUpdate=n},setValues:function(n){var t,i,r;if(n!==undefined)for(t in n){if(i=n[t],i===undefined){THREE.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}t in this&&(r=this[t],r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]=t=="overdraw"?Number(i):i)}},toJSON:function(){var n={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};return this.name!==""&&(n.name=this.name),this instanceof THREE.MeshBasicMaterial?(n.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(n.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(n.blending=this.blending),this.side!==THREE.FrontSide&&(n.side=this.side)):this instanceof THREE.MeshLambertMaterial?(n.color=this.color.getHex(),n.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(n.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(n.shading=this.shading),this.blending!==THREE.NormalBlending&&(n.blending=this.blending),this.side!==THREE.FrontSide&&(n.side=this.side)):this instanceof THREE.MeshPhongMaterial?(n.color=this.color.getHex(),n.emissive=this.emissive.getHex(),n.specular=this.specular.getHex(),n.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(n.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(n.shading=this.shading),this.blending!==THREE.NormalBlending&&(n.blending=this.blending),this.side!==THREE.FrontSide&&(n.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.blending!==THREE.NormalBlending&&(n.blending=this.blending),this.side!==THREE.FrontSide&&(n.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(n.blending=this.blending),this.side!==THREE.FrontSide&&(n.side=this.side)):this instanceof THREE.PointCloudMaterial?(n.size=this.size,n.sizeAttenuation=this.sizeAttenuation,n.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(n.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(n.blending=this.blending)):this instanceof THREE.ShaderMaterial?(n.uniforms=this.uniforms,n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(n.color=this.color.getHex()),this.opacity<1&&(n.opacity=this.opacity),this.transparent!==!1&&(n.transparent=this.transparent),this.wireframe!==!1&&(n.wireframe=this.wireframe),n},clone:function(n){return n===undefined&&(n=new THREE.Material),n.name=this.name,n.side=this.side,n.opacity=this.opacity,n.transparent=this.transparent,n.blending=this.blending,n.blendSrc=this.blendSrc,n.blendDst=this.blendDst,n.blendEquation=this.blendEquation,n.blendSrcAlpha=this.blendSrcAlpha,n.blendDstAlpha=this.blendDstAlpha,n.blendEquationAlpha=this.blendEquationAlpha,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.polygonOffset=this.polygonOffset,n.polygonOffsetFactor=this.polygonOffsetFactor,n.polygonOffsetUnits=this.polygonOffsetUnits,n.alphaTest=this.alphaTest,n.overdraw=this.overdraw,n.visible=this.visible,n},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(n){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(n)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;THREE.LineBasicMaterial.prototype.clone=function(){var n=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.linewidth=this.linewidth,n.linecap=this.linecap,n.linejoin=this.linejoin,n.vertexColors=this.vertexColors,n.fog=this.fog,n};THREE.LineDashedMaterial=function(n){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(n)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.clone=function(){var n=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.linewidth=this.linewidth,n.scale=this.scale,n.dashSize=this.dashSize,n.gapSize=this.gapSize,n.vertexColors=this.vertexColors,n.fog=this.fog,n};THREE.MeshBasicMaterial=function(n){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.setValues(n)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;THREE.MeshBasicMaterial.prototype.clone=function(){var n=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.map=this.map,n.lightMap=this.lightMap,n.specularMap=this.specularMap,n.alphaMap=this.alphaMap,n.envMap=this.envMap,n.combine=this.combine,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,n.fog=this.fog,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.wireframeLinecap=this.wireframeLinecap,n.wireframeLinejoin=this.wireframeLinejoin,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n};THREE.MeshLambertMaterial=function(n){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.morphNormals=!1;this.setValues(n)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;THREE.MeshLambertMaterial.prototype.clone=function(){var n=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.emissive.copy(this.emissive),n.wrapAround=this.wrapAround,n.wrapRGB.copy(this.wrapRGB),n.map=this.map,n.lightMap=this.lightMap,n.specularMap=this.specularMap,n.alphaMap=this.alphaMap,n.envMap=this.envMap,n.combine=this.combine,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,n.fog=this.fog,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.wireframeLinecap=this.wireframeLinecap,n.wireframeLinejoin=this.wireframeLinejoin,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n.morphNormals=this.morphNormals,n};THREE.MeshPhongMaterial=function(n){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.morphNormals=!1;this.setValues(n)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshPhongMaterial.prototype.clone=function(){var n=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.emissive.copy(this.emissive),n.specular.copy(this.specular),n.shininess=this.shininess,n.metal=this.metal,n.wrapAround=this.wrapAround,n.wrapRGB.copy(this.wrapRGB),n.map=this.map,n.lightMap=this.lightMap,n.bumpMap=this.bumpMap,n.bumpScale=this.bumpScale,n.normalMap=this.normalMap,n.normalScale.copy(this.normalScale),n.specularMap=this.specularMap,n.alphaMap=this.alphaMap,n.envMap=this.envMap,n.combine=this.combine,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,n.fog=this.fog,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.wireframeLinecap=this.wireframeLinecap,n.wireframeLinejoin=this.wireframeLinejoin,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n.morphNormals=this.morphNormals,n};THREE.MeshDepthMaterial=function(n){THREE.Material.call(this);this.type="MeshDepthMaterial";this.morphTargets=!1;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(n)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshDepthMaterial.prototype.clone=function(){var n=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,n),n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n};THREE.MeshNormalMaterial=function(n){THREE.Material.call(this,n);this.type="MeshNormalMaterial";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(n)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.clone=function(){var n=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,n),n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n};THREE.MeshFaceMaterial=function(n){this.uuid=THREE.Math.generateUUID();this.type="MeshFaceMaterial";this.materials=n instanceof Array?n:[]};THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var t={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},n=0,i=this.materials.length;n<i;n++)t.materials.push(this.materials[n].toJSON());return t},clone:function(){for(var t=new THREE.MeshFaceMaterial,n=0;n<this.materials.length;n++)t.materials.push(this.materials[n].clone());return t}};THREE.PointCloudMaterial=function(n){THREE.Material.call(this);this.type="PointCloudMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(n)};THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial;THREE.PointCloudMaterial.prototype.clone=function(){var n=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.map=this.map,n.size=this.size,n.sizeAttenuation=this.sizeAttenuation,n.vertexColors=this.vertexColors,n.fog=this.fog,n};THREE.ParticleBasicMaterial=function(n){return THREE.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(n)};THREE.ParticleSystemMaterial=function(n){return THREE.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(n)};THREE.ShaderMaterial=function(n){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.attributes=null;this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.fog=!1;this.lights=!1;this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.morphNormals=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;this.setValues(n)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;THREE.ShaderMaterial.prototype.clone=function(){var n=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,n),n.fragmentShader=this.fragmentShader,n.vertexShader=this.vertexShader,n.uniforms=THREE.UniformsUtils.clone(this.uniforms),n.attributes=this.attributes,n.defines=this.defines,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.fog=this.fog,n.lights=this.lights,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n.morphNormals=this.morphNormals,n};THREE.RawShaderMaterial=function(n){THREE.ShaderMaterial.call(this,n);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.RawShaderMaterial.prototype.clone=function(){var n=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,n),n};THREE.SpriteMaterial=function(n){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(n)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.clone=function(){var n=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.map=this.map,n.rotation=this.rotation,n.fog=this.fog,n};THREE.Texture=function(n,t,i,r,u,f,e,o,s){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.sourceFile="";this.image=n!==undefined?n:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=t!==undefined?t:THREE.Texture.DEFAULT_MAPPING;this.wrapS=i!==undefined?i:THREE.ClampToEdgeWrapping;this.wrapT=r!==undefined?r:THREE.ClampToEdgeWrapping;this.magFilter=u!==undefined?u:THREE.LinearFilter;this.minFilter=f!==undefined?f:THREE.LinearMipMapLinearFilter;this.anisotropy=s!==undefined?s:1;this.format=e!==undefined?e:THREE.RGBAFormat;this.type=o!==undefined?o:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=undefined;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(n){n===!0&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.image=n.image,this.mipmaps=n.mipmaps.slice(0),this.mapping=n.mapping,this.wrapS=n.wrapS,this.wrapT=n.wrapT,this.magFilter=n.magFilter,this.minFilter=n.minFilter,this.anisotropy=n.anisotropy,this.format=n.format,this.type=n.type,this.offset.copy(n.offset),this.repeat.copy(n.repeat),this.generateMipmaps=n.generateMipmaps,this.premultiplyAlpha=n.premultiplyAlpha,this.flipY=n.flipY,this.unpackAlignment=n.unpackAlignment,this},toJSON:function(n){function r(n){var t;return n.toDataURL!==undefined?t=n:(t=document.createElement("canvas"),t.width=n.width,t.height=n.height,t.getContext("2d").drawImage(n,0,0,n.width,n.height)),t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}var i,t;return n.textures[this.uuid]!==undefined?n.textures[this.uuid]:(i={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy},this.image!==undefined&&(t=this.image,t.uuid===undefined&&(t.uuid=THREE.Math.generateUUID()),n.images[t.uuid]===undefined&&(n.images[t.uuid]={uuid:t.uuid,url:r(t)}),i.image=t.uuid),n.textures[this.uuid]=i,i)},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(n){if(this.mapping===THREE.UVMapping){if(n.multiply(this.repeat),n.add(this.offset),n.x<0||n.x>1)switch(this.wrapS){case THREE.RepeatWrapping:n.x=n.x-Math.floor(n.x);break;case THREE.ClampToEdgeWrapping:n.x=n.x<0?0:1;break;case THREE.MirroredRepeatWrapping:n.x=Math.abs(Math.floor(n.x)%2)===1?Math.ceil(n.x)-n.x:n.x-Math.floor(n.x)}if(n.y<0||n.y>1)switch(this.wrapT){case THREE.RepeatWrapping:n.y=n.y-Math.floor(n.y);break;case THREE.ClampToEdgeWrapping:n.y=n.y<0?0:1;break;case THREE.MirroredRepeatWrapping:n.y=Math.abs(Math.floor(n.y)%2)===1?Math.ceil(n.y)-n.y:n.y-Math.floor(n.y)}this.flipY&&(n.y=1-n.y)}}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CanvasTexture=function(n,t,i,r,u,f,e,o,s){THREE.Texture.call(this,n,t,i,r,u,f,e,o,s);this.needsUpdate=!0};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;THREE.CubeTexture=function(n,t,i,r,u,f,e,o,s){t=t!==undefined?t:THREE.CubeReflectionMapping;THREE.Texture.call(this,n,t,i,r,u,f,e,o,s);this.images=n;this.flipY=!1};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.prototype.copy=function(n){return THREE.Texture.prototype.copy.call(this,n),this.images=n.images,this};THREE.CompressedTexture=function(n,t,i,r,u,f,e,o,s,h,c){THREE.Texture.call(this,null,f,e,o,s,h,r,u,c);this.image={width:t,height:i};this.mipmaps=n;this.flipY=!1;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.DataTexture=function(n,t,i,r,u,f,e,o,s,h,c){THREE.Texture.call(this,null,f,e,o,s,h,r,u,c);this.image={data:n,width:t,height:i};this.magFilter=s!==undefined?s:THREE.NearestFilter;this.minFilter=h!==undefined?h:THREE.NearestFilter;this.flipY=!1;this.generateMipmaps=!1};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;THREE.VideoTexture=function(n,t,i,r,u,f,e,o,s){function h(){requestAnimationFrame(h);n.readyState===n.HAVE_ENOUGH_DATA&&(c.needsUpdate=!0)}THREE.Texture.call(this,n,t,i,r,u,f,e,o,s);this.generateMipmaps=!1;var c=this;h()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.Points=function(n,t){THREE.Object3D.call(this);this.type="Points";this.geometry=n!==undefined?n:new THREE.Geometry;this.material=t!==undefined?t:new THREE.PointsMaterial({color:Math.random()*16777215})};THREE.Points.prototype=Object.create(THREE.Object3D.prototype);THREE.Points.prototype.constructor=THREE.Points;THREE.Points.prototype.raycast=function(){var t=new THREE.Matrix4,n=new THREE.Ray;return function(i,r){function h(t,u){var o=n.distanceSqToPoint(t),f,e;if(o<k){if(f=n.closestPointToPoint(t),f.applyMatrix4(s.matrixWorld),e=i.ray.origin.distanceTo(f),e<i.near||e>i.far)return;r.push({distance:e,distanceToRay:Math.sqrt(o),point:f.clone(),index:u,face:null,object:s})}}var s=this,f=s.geometry,b=i.params.Points.threshold,l,w,a,v,u,o;if(t.getInverse(this.matrixWorld),n.copy(i.ray).applyMatrix4(t),f.boundingBox===null||n.isIntersectionBox(f.boundingBox)!==!1){var y=b/((this.scale.x+this.scale.y+this.scale.z)/3),k=y*y,e=new THREE.Vector3;if(f instanceof THREE.BufferGeometry){var p=f.index,d=f.attributes,c=d.position.array;if(p!==null)for(l=p.array,u=0,w=l.length;u<w;u++)a=l[u],e.fromArray(c,a*3),h(e,a);else for(u=0,o=c.length/3;u<o;u++)e.fromArray(c,u*3),h(e,u)}else for(v=f.vertices,u=0,o=v.length;u<o;u++)h(v[u],u)}}}();THREE.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.PointCloud=function(n,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new THREE.Points(n,t)};THREE.ParticleSystem=function(n,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new THREE.Points(n,t)};THREE.Line=function(n,t,i){if(i===1)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new THREE.LineSegments(n,t);THREE.Object3D.call(this);this.type="Line";this.geometry=n!==undefined?n:new THREE.Geometry;this.material=t!==undefined?t:new THREE.LineBasicMaterial({color:Math.random()*16777215})};THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;THREE.Line.prototype.raycast=function(){var i=new THREE.Matrix4,n=new THREE.Ray,t=new THREE.Sphere;return function(r,u){var nt=r.linePrecision,b=nt*nt,s=this.geometry,d,g,y,tt,it,h,p,w,rt,f,l,e;if(s.boundingSphere===null&&s.computeBoundingSphere(),t.copy(s.boundingSphere),t.applyMatrix4(this.matrixWorld),r.ray.isIntersectionSphere(t)!==!1){i.getInverse(this.matrixWorld);n.copy(r.ray).applyMatrix4(i);var a=new THREE.Vector3,v=new THREE.Vector3,c=new THREE.Vector3,o=new THREE.Vector3,k=this instanceof THREE.LineSegments?2:1;if(s instanceof THREE.BufferGeometry)if(d=s.index,g=s.attributes,d!==null)for(y=d.array,h=g.position.array,f=0,p=y.length-1;f<p;f+=k)(tt=y[f],it=y[f+1],a.fromArray(h,tt*3),v.fromArray(h,it*3),l=n.distanceSqToSegment(a,v,o,c),l>b)||(o.applyMatrix4(this.matrixWorld),e=r.ray.origin.distanceTo(o),e<r.near||e>r.far)||u.push({distance:e,point:c.clone().applyMatrix4(this.matrixWorld),index:f,face:null,faceIndex:null,object:this});else for(h=g.position.array,f=0,p=h.length/3-1;f<p;f+=k)(a.fromArray(h,3*f),v.fromArray(h,3*f+3),l=n.distanceSqToSegment(a,v,o,c),l>b)||(o.applyMatrix4(this.matrixWorld),e=r.ray.origin.distanceTo(o),e<r.near||e>r.far)||u.push({distance:e,point:c.clone().applyMatrix4(this.matrixWorld),index:f,face:null,faceIndex:null,object:this});else if(s instanceof THREE.Geometry)for(w=s.vertices,rt=w.length,f=0;f<rt-1;f+=k)(l=n.distanceSqToSegment(w[f],w[f+1],o,c),l>b)||(o.applyMatrix4(this.matrixWorld),e=r.ray.origin.distanceTo(o),e<r.near||e>r.far)||u.push({distance:e,point:c.clone().applyMatrix4(this.matrixWorld),index:f,face:null,faceIndex:null,object:this})}}}();THREE.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.LineStrip=0;THREE.LinePieces=1;THREE.LineSegments=function(n,t){THREE.Line.call(this,n,t);this.type="LineSegments"};THREE.LineSegments.prototype=Object.create(THREE.Line.prototype);THREE.LineSegments.prototype.constructor=THREE.LineSegments;THREE.Mesh=function(n,t){THREE.Object3D.call(this);this.type="Mesh";this.geometry=n!==undefined?n:new THREE.Geometry;this.material=t!==undefined?t:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var n=0,t=this.geometry.morphTargets.length;n<t;n++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[n].name]=n}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(n){return this.morphTargetDictionary[n]!==undefined?this.morphTargetDictionary[n]:(console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+n+" does not exist. Returning 0."),0)};THREE.Mesh.prototype.raycast=function(){function a(n,t,i,r,u,f,e){return THREE.Triangle.barycoordFromPoint(n,t,i,r,o),u.multiplyScalar(o.x),f.multiplyScalar(o.y),e.multiplyScalar(o.z),u.add(f).add(e),u.clone()}function v(n,t,i,r,u,f,e){var s,c=n.material,o;return(s=c.side===THREE.BackSide?i.intersectTriangle(f,u,r,!0,e):i.intersectTriangle(r,u,f,c.side!==THREE.DoubleSide,e),s===null)?null:(h.copy(e),h.applyMatrix4(n.matrixWorld),o=t.ray.origin.distanceTo(h),o<t.near||o>t.far)?null:{distance:o,point:h.clone(),object:n}}function y(r,o,h,c,l,y,p,w){n.fromArray(c,y*3);t.fromArray(c,p*3);i.fromArray(c,w*3);var b=v(r,o,h,n,t,i,s);return b&&(l&&(u.fromArray(l,y*2),f.fromArray(l,p*2),e.fromArray(l,w*2),b.uv=a(s,n,t,i,u,f,e)),b.face=new THREE.Face3(y,p,w,THREE.Triangle.normal(n,t,i)),b.faceIndex=y),b}var l=new THREE.Matrix4,r=new THREE.Ray,c=new THREE.Sphere,n=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3,p=new THREE.Vector3,w=new THREE.Vector3,b=new THREE.Vector3,u=new THREE.Vector2,f=new THREE.Vector2,e=new THREE.Vector2,o=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3;return function(o,h){var d=this.geometry,ct=this.material,wt,it,k,ot,g,vt,et,fi,nt,gt,ni,ei,st,oi,ht,yt,pt;if(ct!==undefined&&(d.boundingSphere===null&&d.computeBoundingSphere(),wt=this.matrixWorld,c.copy(d.boundingSphere),c.applyMatrix4(wt),o.ray.isIntersectionSphere(c)!==!1)&&(l.getInverse(wt),r.copy(o.ray).applyMatrix4(l),d.boundingBox===null||r.isIntersectionBox(d.boundingBox)!==!1))if(d instanceof THREE.BufferGeometry){var tt,lt,at,ti=d.index,bt=d.attributes,kt=bt.position.array;if(bt.uv!==undefined&&(it=bt.uv.array),ti!==null)for(ot=ti.array,g=0,vt=ot.length;g<vt;g+=3)tt=ot[g],lt=ot[g+1],at=ot[g+2],k=y(this,o,r,kt,it,tt,lt,at),k&&(k.faceIndex=Math.floor(g/3),h.push(k));else for(g=0,vt=kt.length;g<vt;g+=9)tt=g/3,lt=tt+1,at=tt+2,k=y(this,o,r,kt,it,tt,lt,at),k&&(k.index=tt,h.push(k))}else if(d instanceof THREE.Geometry){var rt,ut,ft,ii=ct instanceof THREE.MeshFaceMaterial,si=ii===!0?ct.materials:null,dt=d.vertices,ri=d.faces,ui=d.faceVertexUvs[0];for(ui.length>0&&(it=ui),et=0,fi=ri.length;et<fi;et++)if(nt=ri[et],gt=ii===!0?si[nt.materialIndex]:ct,gt!==undefined){if(rt=dt[nt.a],ut=dt[nt.b],ft=dt[nt.c],gt.morphTargets===!0){for(ni=d.morphTargets,ei=this.morphTargetInfluences,n.set(0,0,0),t.set(0,0,0),i.set(0,0,0),st=0,oi=ni.length;st<oi;st++)(ht=ei[st],ht!==0)&&(yt=ni[st].vertices,n.addScaledVector(p.subVectors(yt[nt.a],rt),ht),t.addScaledVector(w.subVectors(yt[nt.b],ut),ht),i.addScaledVector(b.subVectors(yt[nt.c],ft),ht));n.add(rt);t.add(ut);i.add(ft);rt=n;ut=t;ft=i}k=v(this,o,r,rt,ut,ft,s);k&&(it&&(pt=it[et],u.copy(pt[0]),f.copy(pt[1]),e.copy(pt[2]),k.uv=a(s,rt,ut,ft,u,f,e)),k.face=nt,k.faceIndex=et,h.push(k))}}}}();THREE.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.Bone=function(n){THREE.Object3D.call(this);this.type="Bone";this.skin=n};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.copy=function(n){return THREE.Object3D.prototype.copy.call(this,n),this.skin=n.skin,this};THREE.Skeleton=function(n,t,i){var r,u,f;if(this.useVertexTexture=i!==undefined?i:!0,this.identityMatrix=new THREE.Matrix4,n=n||[],this.bones=n.slice(0),this.useVertexTexture?(r=Math.sqrt(this.bones.length*4),r=THREE.Math.nextPowerOfTwo(Math.ceil(r)),r=Math.max(r,4),this.boneTextureWidth=r,this.boneTextureHeight=r,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):this.boneMatrices=new Float32Array(16*this.bones.length),t===undefined)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else for(console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],u=0,f=this.bones.length;u<f;u++)this.boneInverses.push(new THREE.Matrix4)};THREE.Skeleton.prototype.calculateInverses=function(){var n,i,t;for(this.boneInverses=[],n=0,i=this.bones.length;n<i;n++)t=new THREE.Matrix4,this.bones[n]&&t.getInverse(this.bones[n].matrixWorld),this.boneInverses.push(t)};THREE.Skeleton.prototype.pose=function(){for(var n,t=0,i=this.bones.length;t<i;t++)n=this.bones[t],n&&n.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,i=this.bones.length;t<i;t++)n=this.bones[t],n&&(n.parent?(n.matrix.getInverse(n.parent.matrixWorld),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))};THREE.Skeleton.prototype.update=function(){var n=new THREE.Matrix4;return function(){for(var r,t=0,i=this.bones.length;t<i;t++)r=this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix,n.multiplyMatrices(r,this.boneInverses[t]),n.flattenToArrayOffset(this.boneMatrices,t*16);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)};THREE.SkinnedMesh=function(n,t,i){var f,e,r,u,o;if(THREE.Mesh.call(this,n,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4,f=[],this.geometry&&this.geometry.bones!==undefined){for(u=0,o=this.geometry.bones.length;u<o;++u)r=this.geometry.bones[u],e=new THREE.Bone(this),f.push(e),e.name=r.name,e.position.fromArray(r.pos),e.quaternion.fromArray(r.rotq),r.scl!==undefined&&e.scale.fromArray(r.scl);for(u=0,o=this.geometry.bones.length;u<o;++u)r=this.geometry.bones[u],r.parent!==-1&&r.parent!==null?f[r.parent].add(f[u]):this.add(f[u])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(f,undefined,i),this.matrixWorld)};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(n,t){this.skeleton=n;t===undefined&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld);this.bindMatrix.copy(t);this.bindMatrixInverse.getInverse(t)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){var n,t,i;if(this.geometry instanceof THREE.Geometry)for(n=0;n<this.geometry.skinIndices.length;n++)t=this.geometry.skinWeights[n],i=1/t.lengthManhattan(),i!==Infinity?t.multiplyScalar(i):t.set(1)};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)};THREE.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)};THREE.LOD=function(){THREE.Object3D.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]},objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}})};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(n,t){var r,i;for(t===undefined&&(t=0),t=Math.abs(t),r=this.levels,i=0;i<r.length;i++)if(t<r[i].distance)break;r.splice(i,0,{distance:t,object:n});this.add(n)};THREE.LOD.prototype.getObjectForDistance=function(n){for(var i=this.levels,t=1,r=i.length;t<r;t++)if(n<i[t].distance)break;return i[t-1].object};THREE.LOD.prototype.raycast=function(){var n=new THREE.Vector3;return function(t,i){n.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(n);this.getObjectForDistance(r).raycast(t,i)}}();THREE.LOD.prototype.update=function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i){var u=this.levels,e,r,f;if(u.length>1){for(n.setFromMatrixPosition(i.matrixWorld),t.setFromMatrixPosition(this.matrixWorld),e=n.distanceTo(t),u[0].object.visible=!0,r=1,f=u.length;r<f;r++)if(e>=u[r].distance)u[r-1].object.visible=!1,u[r].object.visible=!0;else break;for(;r<f;r++)u[r].object.visible=!1}}}();THREE.LOD.prototype.copy=function(n){var i,t,u,r;for(THREE.Object3D.prototype.copy.call(this,n,!1),i=n.levels,t=0,u=i.length;t<u;t++)r=i[t],this.addLevel(r.object.clone(),r.distance);return this};THREE.LOD.prototype.toJSON=function(n){var i=THREE.Object3D.prototype.toJSON.call(this,n),r,t,f,u;for(i.object.levels=[],r=this.levels,t=0,f=r.length;t<f;t++)u=r[t],i.object.levels.push({object:u.object.uuid,distance:u.distance});return i};THREE.Sprite=function(){var t=new Uint16Array([0,1,2,0,2,3]),i=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),n=new THREE.BufferGeometry;return n.addAttribute("setIndex",new THREE.BufferAttribute(t,1)),n.addAttribute("position",new THREE.BufferAttribute(i,3)),n.addAttribute("uv",new THREE.BufferAttribute(r,2)),function(t){THREE.Object3D.call(this);this.type="Sprite";this.geometry=n;this.material=t!==undefined?t:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var n=new THREE.Vector3;return function(t,i){n.setFromMatrixPosition(this.matrixWorld);var r=t.ray.distanceSqToPoint(n),u=this.scale.x*this.scale.y;r>u||i.push({distance:Math.sqrt(r),point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)};THREE.Particle=THREE.Sprite;THREE.LensFlare=function(n,t,i,r,u){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=undefined;n!==undefined&&this.add(n,t,i,r,u)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.add=function(n,t,i,r,u,f){t===undefined&&(t=-1);i===undefined&&(i=0);f===undefined&&(f=1);u===undefined&&(u=new THREE.Color(16777215));r===undefined&&(r=THREE.NormalBlending);i=Math.min(i,Math.max(0,i));this.lensFlares.push({texture:n,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:u,blending:r})};THREE.LensFlare.prototype.updateLensFlares=function(){for(var i=this.lensFlares.length,n,r=-this.positionScreen.x*2,u=-this.positionScreen.y*2,t=0;t<i;t++)n=this.lensFlares[t],n.x=this.positionScreen.x+r*n.distance,n.y=this.positionScreen.y+u*n.distance,n.wantedRotation=n.x*Math.PI*.25,n.rotation+=(n.wantedRotation-n.rotation)*.25};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.fog=null;this.overrideMaterial=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.clone=function(n){return n===undefined&&(n=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,n),this.fog!==null&&(n.fog=this.fog.clone()),this.overrideMaterial!==null&&(n.overrideMaterial=this.overrideMaterial.clone()),n.autoUpdate=this.autoUpdate,n.matrixAutoUpdate=this.matrixAutoUpdate,n};THREE.Fog=function(n,t,i){this.name="";this.color=new THREE.Color(n);this.near=t!==undefined?t:1;this.far=i!==undefined?i:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(n,t){this.name="";this.color=new THREE.Color(n);this.density=t!==undefined?t:.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n}\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\n\tfloat distance = dot( planeNormal, point-pointOnPlane );\n\treturn point - distance * planeNormal;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\n}\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\tif ( decayExponent > 0.0 ) {\n\t  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\n\t}\n\treturn 1.0;\n}\n\nvec3 inputToLinear( in vec3 a ) {\n#ifdef GAMMA_INPUT\n\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n#else\n\treturn a;\n#endif\n}\nvec3 linearToOutput( in vec3 a ) {\n#ifdef GAMMA_OUTPUT\n\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n#else\n\treturn a;\n#endif\n}\n";THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront += ambientLightColor;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack += ambientLightColor;\n\n#endif\n";THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n";THREE.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n";THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.lights_phong_fragment="#ifndef FLAT_SHADED\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#else\n\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\t\tlVector = normalize( lVector );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\ttotalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\ttotalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\ttotalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\n\n\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\ttotalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\ttotalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\ttotalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\ttotalDiffuseLight += hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\ttotalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\n#ifdef METAL\n\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\n\n#else\n\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\n\n#endif\n";THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif";THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif";THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif";THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif";THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\tvColor.xyz = inputToLinear( color.xyz );\n\n#endif";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="\n\toutgoingLight = linearToOutput( outgoingLight );\n";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n";THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n\t\tfogFactor = whiteCompliment( fogFactor );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif";THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n";THREE.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n\tvec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n\tvec3 objectNormal = morphedNormal;\n\n#else\n\n\tvec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n";THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n";THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\toutgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\n\n#endif";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif";THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\n\tshadowColor = inputToLinear( shadowColor );\n\n\toutgoingLight = outgoingLight * shadowColor;\n\n#endif\n";THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#elif defined( USE_MORPHTARGETS )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif";THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif";THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n";THREE.UniformsUtils={merge:function(n){for(var i,r,u={},t=0;t<n.length;t++){i=this.clone(n[t]);for(r in i)u[r]=i[r]}return u},clone:function(n){var r={},i,u,t;for(i in n){r[i]={};for(u in n[i])t=n[i][u],r[i][u]=t instanceof THREE.Color||t instanceof THREE.Vector2||t instanceof THREE.Vector3||t instanceof THREE.Vector4||t instanceof THREE.Matrix3||t instanceof THREE.Matrix4||t instanceof THREE.Texture?t.clone():Array.isArray(t)?t.slice():t}return r}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED","\t\tif ( gl_FrontFacing )","\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;","\t\telse","\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;","\t#else","\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;","\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\t#ifdef USE_SIZEATTENUATION","\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );","\t#else","\t\tgl_PointSize = size;","\t#endif","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tif ( mod( vLineDistance, totalSize ) > dashSize ) {","\t\tdiscard;","\t}","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;","\t#else","\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;","\t#endif","\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );","\tgl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvWorldPosition = transformDirection( position, modelMatrix );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvWorldPosition = transformDirection( position, modelMatrix );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","\tres -= res.xxyz * bit_mask;","\treturn res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","\t#else","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","\t#endif","}"].join("\n")}};THREE.WebGLRenderer=function(n){function wu(n){n.__webglVertexBuffer=t.createBuffer();n.__webglColorBuffer=t.createBuffer();i.info.memory.geometries++}function bu(n){n.__webglVertexBuffer=t.createBuffer();n.__webglColorBuffer=t.createBuffer();n.__webglLineDistanceBuffer=t.createBuffer();i.info.memory.geometries++}function ku(n){var f,e,r,u;if(n.__webglVertexBuffer=t.createBuffer(),n.__webglNormalBuffer=t.createBuffer(),n.__webglTangentBuffer=t.createBuffer(),n.__webglColorBuffer=t.createBuffer(),n.__webglUVBuffer=t.createBuffer(),n.__webglUV2Buffer=t.createBuffer(),n.__webglSkinIndicesBuffer=t.createBuffer(),n.__webglSkinWeightsBuffer=t.createBuffer(),n.__webglFaceBuffer=t.createBuffer(),n.__webglLineBuffer=t.createBuffer(),f=n.numMorphTargets,f)for(n.__webglMorphTargetsBuffers=[],r=0,u=f;r<u;r++)n.__webglMorphTargetsBuffers.push(t.createBuffer());if(e=n.numMorphNormals,e)for(n.__webglMorphNormalsBuffers=[],r=0,u=e;r<u;r++)n.__webglMorphNormalsBuffers.push(t.createBuffer());i.info.memory.geometries++}function er(n){var u=n.geometry,f=n.material,o=u.vertices.length,e,i,r;if(f.attributes){u.__webglCustomAttributesList===undefined&&(u.__webglCustomAttributesList=[]);for(e in f.attributes)i=f.attributes[e],(!i.__webglInitialized||i.createUniqueBuffers)&&(i.__webglInitialized=!0,r=1,i.type==="v2"?r=2:i.type==="v3"?r=3:i.type==="v4"?r=4:i.type==="c"&&(r=3),i.size=r,i.array=new Float32Array(o*r),i.buffer=t.createBuffer(),i.buffer.belongsToAttribute=e,i.needsUpdate=!0),u.__webglCustomAttributesList.push(i)}}function tf(n,t){var i=n.vertices.length;n.__vertexArray=new Float32Array(i*3);n.__colorArray=new Float32Array(i*3);n.__webglParticleCount=i;er(t)}function rf(n,t){var i=n.vertices.length;n.__vertexArray=new Float32Array(i*3);n.__colorArray=new Float32Array(i*3);n.__lineDistanceArray=new Float32Array(i*1);n.__webglLineCount=i;er(t)}function uf(n,i){var k=i.geometry,l=n.faces3,f=l.length*3,a=l.length*1,d=l.length*3,v=ct(i,n),h,y,p,o,c,w,s,r,b,e;if(n.__vertexArray=new Float32Array(f*3),n.__normalArray=new Float32Array(f*3),n.__colorArray=new Float32Array(f*3),n.__uvArray=new Float32Array(f*2),k.faceVertexUvs.length>1&&(n.__uv2Array=new Float32Array(f*2)),k.hasTangents&&(n.__tangentArray=new Float32Array(f*4)),i.geometry.skinWeights.length&&i.geometry.skinIndices.length&&(n.__skinIndexArray=new Float32Array(f*4),n.__skinWeightArray=new Float32Array(f*4)),h=u.get("OES_element_index_uint")!==null&&a>21845?Uint32Array:Uint16Array,n.__typeArray=h,n.__faceArray=new h(a*3),n.__lineArray=new h(d*2),y=n.numMorphTargets,y)for(n.__morphTargetsArrays=[],o=0,c=y;o<c;o++)n.__morphTargetsArrays.push(new Float32Array(f*3));if(p=n.numMorphNormals,p)for(n.__morphNormalsArrays=[],o=0,c=p;o<c;o++)n.__morphNormalsArrays.push(new Float32Array(f*3));if(n.__webglFaceCount=a*3,n.__webglLineCount=d*2,v.attributes){n.__webglCustomAttributesList===undefined&&(n.__webglCustomAttributesList=[]);for(w in v.attributes){s=v.attributes[w];r={};for(b in s)r[b]=s[b];(!r.__webglInitialized||r.createUniqueBuffers)&&(r.__webglInitialized=!0,e=1,r.type==="v2"?e=2:r.type==="v3"?e=3:r.type==="v4"?e=4:r.type==="c"&&(e=3),r.size=e,r.array=new Float32Array(f*e),r.buffer=t.createBuffer(),r.buffer.belongsToAttribute=w,s.needsUpdate=!0,r.__original=s);n.__webglCustomAttributesList.push(r)}}n.__inittedArrays=!0}function ct(n,t){return n.material instanceof THREE.MeshFaceMaterial?n.material.materials[t.materialIndex]:n.material}function ff(n){return n instanceof THREE.MeshPhongMaterial==!1&&n.shading===THREE.FlatShading}function ef(n,i){var s,h,c,u,l,w=n.vertices,d=w.length,b=n.colors,g=b.length,a=n.__vertexArray,v=n.__colorArray,nt=n.verticesNeedUpdate,tt=n.colorsNeedUpdate,p=n.__webglCustomAttributesList,y,k,f,o,e,r;if(nt){for(s=0;s<d;s++)c=w[s],u=s*3,a[u]=c.x,a[u+1]=c.y,a[u+2]=c.z;t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer);t.bufferData(t.ARRAY_BUFFER,a,i)}if(tt){for(h=0;h<g;h++)l=b[h],u=h*3,v[u]=l.r,v[u+1]=l.g,v[u+2]=l.b;t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer);t.bufferData(t.ARRAY_BUFFER,v,i)}if(p)for(y=0,k=p.length;y<k;y++){if(r=p[y],r.needsUpdate&&(r.boundTo===undefined||r.boundTo==="vertices"))if(o=r.value.length,u=0,r.size===1)for(f=0;f<o;f++)r.array[f]=r.value[f];else if(r.size===2)for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,u+=2;else if(r.size===3)if(r.type==="c")for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.r,r.array[u+1]=e.g,r.array[u+2]=e.b,u+=3;else for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,r.array[u+2]=e.z,u+=3;else if(r.size===4)for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,r.array[u+2]=e.z,r.array[u+3]=e.w,u+=4;t.bindBuffer(t.ARRAY_BUFFER,r.buffer);t.bufferData(t.ARRAY_BUFFER,r.array,i);r.needsUpdate=!1}}function of(n,i){var s,h,c,l,u,a,b=n.vertices,k=n.colors,d=n.lineDistances,tt=b.length,it=k.length,rt=d.length,v=n.__vertexArray,y=n.__colorArray,g=n.__lineDistanceArray,ut=n.verticesNeedUpdate,ft=n.colorsNeedUpdate,et=n.lineDistancesNeedUpdate,w=n.__webglCustomAttributesList,p,nt,f,o,e,r;if(ut){for(s=0;s<tt;s++)l=b[s],u=s*3,v[u]=l.x,v[u+1]=l.y,v[u+2]=l.z;t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer);t.bufferData(t.ARRAY_BUFFER,v,i)}if(ft){for(h=0;h<it;h++)a=k[h],u=h*3,y[u]=a.r,y[u+1]=a.g,y[u+2]=a.b;t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer);t.bufferData(t.ARRAY_BUFFER,y,i)}if(et){for(c=0;c<rt;c++)g[c]=d[c];t.bindBuffer(t.ARRAY_BUFFER,n.__webglLineDistanceBuffer);t.bufferData(t.ARRAY_BUFFER,g,i)}if(w)for(p=0,nt=w.length;p<nt;p++)if(r=w[p],r.needsUpdate&&(r.boundTo===undefined||r.boundTo==="vertices")){if(u=0,o=r.value.length,r.size===1)for(f=0;f<o;f++)r.array[f]=r.value[f];else if(r.size===2)for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,u+=2;else if(r.size===3)if(r.type==="c")for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.r,r.array[u+1]=e.g,r.array[u+2]=e.b,u+=3;else for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,r.array[u+2]=e.z,u+=3;else if(r.size===4)for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,r.array[u+2]=e.z,r.array[u+3]=e.w,u+=4;t.bindBuffer(t.ARRAY_BUFFER,r.buffer);t.bufferData(t.ARRAY_BUFFER,r.array,i);r.needsUpdate=!1}}function sf(n,i,r,u,f){var p;if(n.__inittedArrays){var yr=ff(f),s,v,ai,a,ur,vi,kt,yi,pi,fr,er,h,c,l,dt,gt,ni,yt,ti,ii,ri,ui,fi,ei,oi,si,hi,ci,li,d,pr,wi,or,sr,nt,wr,et,ot,bi,ki,st=0,ht=0,di=0,gi=0,nr=0,vt=0,tt=0,pt=0,ft=0,w=0,k=0,o=0,b,ct=n.__vertexArray,hr=n.__uvArray,cr=n.__uv2Array,wt=n.__normalArray,it=n.__tangentArray,lt=n.__colorArray,rt=n.__skinIndexArray,ut=n.__skinWeightArray,br=n.__morphTargetsArrays,kr=n.__morphNormalsArrays,lr=n.__webglCustomAttributesList,e,tr=n.__faceArray,bt=n.__lineArray,g=i.geometry,iu=g.verticesNeedUpdate,ru=g.elementsNeedUpdate,dr=g.uvsNeedUpdate,uu=g.normalsNeedUpdate,fu=g.tangentsNeedUpdate,eu=g.colorsNeedUpdate,ou=g.morphTargetsNeedUpdate,ar=g.vertices,y=n.faces3,at=g.faces,gr=g.faceVertexUvs[0],nu=g.faceVertexUvs[1],vr=g.skinIndices,ir=g.skinWeights,rr=g.morphTargets,tu=g.morphNormals;if(iu){for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=ar[a.a],c=ar[a.b],l=ar[a.c],ct[ht]=h.x,ct[ht+1]=h.y,ct[ht+2]=h.z,ct[ht+3]=c.x,ct[ht+4]=c.y,ct[ht+5]=c.z,ct[ht+6]=l.x,ct[ht+7]=l.y,ct[ht+8]=l.z,ht+=9;t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer);t.bufferData(t.ARRAY_BUFFER,ct,r)}if(ou)for(nt=0,wr=rr.length;nt<wr;nt++){for(k=0,s=0,v=y.length;s<v;s++)bi=y[s],a=at[bi],h=rr[nt].vertices[a.a],c=rr[nt].vertices[a.b],l=rr[nt].vertices[a.c],et=br[nt],et[k]=h.x,et[k+1]=h.y,et[k+2]=h.z,et[k+3]=c.x,et[k+4]=c.y,et[k+5]=c.z,et[k+6]=l.x,et[k+7]=l.y,et[k+8]=l.z,f.morphNormals&&(yr?(yt=tu[nt].faceNormals[bi],ti=yt,ii=yt):(ki=tu[nt].vertexNormals[bi],yt=ki.a,ti=ki.b,ii=ki.c),ot=kr[nt],ot[k]=yt.x,ot[k+1]=yt.y,ot[k+2]=yt.z,ot[k+3]=ti.x,ot[k+4]=ti.y,ot[k+5]=ti.z,ot[k+6]=ii.x,ot[k+7]=ii.y,ot[k+8]=ii.z),k+=9;t.bindBuffer(t.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[nt]);t.bufferData(t.ARRAY_BUFFER,br[nt],r);f.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[nt]),t.bufferData(t.ARRAY_BUFFER,kr[nt],r))}if(ir.length){for(s=0,v=y.length;s<v;s++)a=at[y[s]],ei=ir[a.a],oi=ir[a.b],si=ir[a.c],ut[w]=ei.x,ut[w+1]=ei.y,ut[w+2]=ei.z,ut[w+3]=ei.w,ut[w+4]=oi.x,ut[w+5]=oi.y,ut[w+6]=oi.z,ut[w+7]=oi.w,ut[w+8]=si.x,ut[w+9]=si.y,ut[w+10]=si.z,ut[w+11]=si.w,hi=vr[a.a],ci=vr[a.b],li=vr[a.c],rt[w]=hi.x,rt[w+1]=hi.y,rt[w+2]=hi.z,rt[w+3]=hi.w,rt[w+4]=ci.x,rt[w+5]=ci.y,rt[w+6]=ci.z,rt[w+7]=ci.w,rt[w+8]=li.x,rt[w+9]=li.y,rt[w+10]=li.z,rt[w+11]=li.w,w+=12;w>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),t.bufferData(t.ARRAY_BUFFER,rt,r),t.bindBuffer(t.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),t.bufferData(t.ARRAY_BUFFER,ut,r))}if(eu){for(s=0,v=y.length;s<v;s++)a=at[y[s]],kt=a.vertexColors,yi=a.color,kt.length===3&&f.vertexColors===THREE.VertexColors?(ri=kt[0],ui=kt[1],fi=kt[2]):(ri=yi,ui=yi,fi=yi),lt[ft]=ri.r,lt[ft+1]=ri.g,lt[ft+2]=ri.b,lt[ft+3]=ui.r,lt[ft+4]=ui.g,lt[ft+5]=ui.b,lt[ft+6]=fi.r,lt[ft+7]=fi.g,lt[ft+8]=fi.b,ft+=9;ft>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,lt,r))}if(fu&&g.hasTangents){for(s=0,v=y.length;s<v;s++)a=at[y[s]],pi=a.vertexTangents,dt=pi[0],gt=pi[1],ni=pi[2],it[tt]=dt.x,it[tt+1]=dt.y,it[tt+2]=dt.z,it[tt+3]=dt.w,it[tt+4]=gt.x,it[tt+5]=gt.y,it[tt+6]=gt.z,it[tt+7]=gt.w,it[tt+8]=ni.x,it[tt+9]=ni.y,it[tt+10]=ni.z,it[tt+11]=ni.w,tt+=12;t.bindBuffer(t.ARRAY_BUFFER,n.__webglTangentBuffer);t.bufferData(t.ARRAY_BUFFER,it,r)}if(uu){for(s=0,v=y.length;s<v;s++)if(a=at[y[s]],ur=a.vertexNormals,vi=a.normal,ur.length===3&&yr===!1)for(d=0;d<3;d++)wi=ur[d],wt[vt]=wi.x,wt[vt+1]=wi.y,wt[vt+2]=wi.z,vt+=3;else for(d=0;d<3;d++)wt[vt]=vi.x,wt[vt+1]=vi.y,wt[vt+2]=vi.z,vt+=3;t.bindBuffer(t.ARRAY_BUFFER,n.__webglNormalBuffer);t.bufferData(t.ARRAY_BUFFER,wt,r)}if(dr&&gr){for(s=0,v=y.length;s<v;s++)if(ai=y[s],fr=gr[ai],fr!==undefined)for(d=0;d<3;d++)or=fr[d],hr[di]=or.x,hr[di+1]=or.y,di+=2;di>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglUVBuffer),t.bufferData(t.ARRAY_BUFFER,hr,r))}if(dr&&nu){for(s=0,v=y.length;s<v;s++)if(ai=y[s],er=nu[ai],er!==undefined)for(d=0;d<3;d++)sr=er[d],cr[gi]=sr.x,cr[gi+1]=sr.y,gi+=2;gi>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglUV2Buffer),t.bufferData(t.ARRAY_BUFFER,cr,r))}if(ru){for(s=0,v=y.length;s<v;s++)tr[nr]=st,tr[nr+1]=st+1,tr[nr+2]=st+2,nr+=3,bt[pt]=st,bt[pt+1]=st+1,bt[pt+2]=st,bt[pt+3]=st+2,bt[pt+4]=st+1,bt[pt+5]=st+2,pt+=6,st+=3;t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer);t.bufferData(t.ELEMENT_ARRAY_BUFFER,tr,r);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer);t.bufferData(t.ELEMENT_ARRAY_BUFFER,bt,r)}if(lr)for(d=0,pr=lr.length;d<pr;d++)if(e=lr[d],e.__original.needsUpdate){if(o=0,e.size===1){if(e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],e.array[o]=e.value[a.a],e.array[o+1]=e.value[a.b],e.array[o+2]=e.value[a.c],o+=3;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],e.array[o]=b,e.array[o+1]=b,e.array[o+2]=b,o+=3}else if(e.size===2){if(e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=e.value[a.a],c=e.value[a.b],l=e.value[a.c],e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=c.x,e.array[o+3]=c.y,e.array[o+4]=l.x,e.array[o+5]=l.y,o+=6;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b,c=b,l=b,e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=c.x,e.array[o+3]=c.y,e.array[o+4]=l.x,e.array[o+5]=l.y,o+=6}else if(e.size===3){if(p=e.type==="c"?["r","g","b"]:["x","y","z"],e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=e.value[a.a],c=e.value[a.b],l=e.value[a.c],e.array[o]=h[p[0]],e.array[o+1]=h[p[1]],e.array[o+2]=h[p[2]],e.array[o+3]=c[p[0]],e.array[o+4]=c[p[1]],e.array[o+5]=c[p[2]],e.array[o+6]=l[p[0]],e.array[o+7]=l[p[1]],e.array[o+8]=l[p[2]],o+=9;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b,c=b,l=b,e.array[o]=h[p[0]],e.array[o+1]=h[p[1]],e.array[o+2]=h[p[2]],e.array[o+3]=c[p[0]],e.array[o+4]=c[p[1]],e.array[o+5]=c[p[2]],e.array[o+6]=l[p[0]],e.array[o+7]=l[p[1]],e.array[o+8]=l[p[2]],o+=9;else if(e.boundTo==="faceVertices")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b[0],c=b[1],l=b[2],e.array[o]=h[p[0]],e.array[o+1]=h[p[1]],e.array[o+2]=h[p[2]],e.array[o+3]=c[p[0]],e.array[o+4]=c[p[1]],e.array[o+5]=c[p[2]],e.array[o+6]=l[p[0]],e.array[o+7]=l[p[1]],e.array[o+8]=l[p[2]],o+=9}else if(e.size===4)if(e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=e.value[a.a],c=e.value[a.b],l=e.value[a.c],e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=h.z,e.array[o+3]=h.w,e.array[o+4]=c.x,e.array[o+5]=c.y,e.array[o+6]=c.z,e.array[o+7]=c.w,e.array[o+8]=l.x,e.array[o+9]=l.y,e.array[o+10]=l.z,e.array[o+11]=l.w,o+=12;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b,c=b,l=b,e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=h.z,e.array[o+3]=h.w,e.array[o+4]=c.x,e.array[o+5]=c.y,e.array[o+6]=c.z,e.array[o+7]=c.w,e.array[o+8]=l.x,e.array[o+9]=l.y,e.array[o+10]=l.z,e.array[o+11]=l.w,o+=12;else if(e.boundTo==="faceVertices")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b[0],c=b[1],l=b[2],e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=h.z,e.array[o+3]=h.w,e.array[o+4]=c.x,e.array[o+5]=c.y,e.array[o+6]=c.z,e.array[o+7]=c.w,e.array[o+8]=l.x,e.array[o+9]=l.y,e.array[o+10]=l.z,e.array[o+11]=l.w,o+=12;t.bindBuffer(t.ARRAY_BUFFER,e.buffer);t.bufferData(t.ARRAY_BUFFER,e.array,r)}u&&(delete n.__inittedArrays,delete n.__colorArray,delete n.__normalArray,delete n.__tangentArray,delete n.__uvArray,delete n.__uv2Array,delete n.__faceArray,delete n.__vertexArray,delete n.__lineArray,delete n.__skinIndexArray,delete n.__skinWeightArray)}}function y(n,i,u,f){for(var e,o,s,c,a=u.attributes,v=i.attributes,l=i.attributesKeys,h=0,y=l.length;h<y;h++)e=l[h],o=v[e],o>=0&&(s=a[e],s!==undefined?(c=s.itemSize,t.bindBuffer(t.ARRAY_BUFFER,s.buffer),r.enableAttribute(o),t.vertexAttribPointer(o,c,t.FLOAT,!1,0,f*c*4)):n.defaultAttributeValues!==undefined&&(n.defaultAttributeValues[e].length===2?t.vertexAttrib2fv(o,n.defaultAttributeValues[e]):n.defaultAttributeValues[e].length===3&&t.vertexAttrib3fv(o,n.defaultAttributeValues[e])));r.disableUnusedAttributes()}function hf(n,i,u){var o=n.program.attributes,c,y,p,e,f,w,a;if(u.morphTargetBase!==-1&&o.position>=0?(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[u.morphTargetBase]),r.enableAttribute(o.position),t.vertexAttribPointer(o.position,3,t.FLOAT,!1,0,0)):o.position>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglVertexBuffer),r.enableAttribute(o.position),t.vertexAttribPointer(o.position,3,t.FLOAT,!1,0,0)),u.morphTargetForcedOrder.length)for(var f=0,l=u.morphTargetForcedOrder,h=u.morphTargetInfluences,e;f<n.numSupportedMorphTargets&&f<l.length;)e=o["morphTarget"+f],e>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[l[f]]),r.enableAttribute(e),t.vertexAttribPointer(e,3,t.FLOAT,!1,0,0)),e=o["morphNormal"+f],e>=0&&n.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[l[f]]),r.enableAttribute(e),t.vertexAttribPointer(e,3,t.FLOAT,!1,0,0)),u.__webglMorphTargetInfluences[f]=h[l[f]],f++;else{var s=[],h=u.morphTargetInfluences,v=u.geometry.morphTargets;for(h.length>v.length&&(console.warn("THREE.WebGLRenderer: Influences array is bigger than morphTargets array."),h.length=v.length),c=0,y=h.length;c<y;c++)p=h[c],s.push([p,c]);for(s.length>n.numSupportedMorphTargets?(s.sort(or),s.length=n.numSupportedMorphTargets):s.length>n.numSupportedMorphNormals?s.sort(or):s.length===0&&s.push([0,0]),f=0,w=n.numSupportedMorphTargets;f<w;f++)s[f]?(a=s[f][1],e=o["morphTarget"+f],e>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[a]),r.enableAttribute(e),t.vertexAttribPointer(e,3,t.FLOAT,!1,0,0)),e=o["morphNormal"+f],e>=0&&n.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[a]),r.enableAttribute(e),t.vertexAttribPointer(e,3,t.FLOAT,!1,0,0)),u.__webglMorphTargetInfluences[f]=h[a]):u.__webglMorphTargetInfluences[f]=0}n.program.uniforms.morphTargetInfluences!==null&&t.uniform1fv(n.program.uniforms.morphTargetInfluences,u.__webglMorphTargetInfluences)}function cf(n,t){return n.object.renderOrder!==t.object.renderOrder?n.object.renderOrder-t.object.renderOrder:n.material.id!==t.material.id?n.material.id-t.material.id:n.z!==t.z?n.z-t.z:n.id-t.id}function lf(n,t){return n.object.renderOrder!==t.object.renderOrder?n.object.renderOrder-t.object.renderOrder:n.z!==t.z?t.z-n.z:n.id-t.id}function or(n,t){return t[0]-n[0]}function sr(n){var r,f,t,u;if(n.visible!==!1){if(!(n instanceof THREE.Scene)&&!(n instanceof THREE.Group))if(yf(n),n instanceof THREE.Light)l.push(n);else if(n instanceof THREE.Sprite)pt.push(n);else if(n instanceof THREE.LensFlare)wt.push(n);else if(r=a[n.id],r&&(n.frustumCulled===!1||dt.intersectsObject(n)===!0))for(t=0,u=r.length;t<u;t++)f=r[t],vf(f),f.render=!0,i.sortObjects===!0&&(o.setFromMatrixPosition(n.matrixWorld),o.applyProjection(gt),f.z=o.z);for(t=0,u=n.children.length;t<u;t++)sr(n.children[t])}}function lt(n,t,r,u,f){for(var e,o=0,l=n.length;o<l;o++){var s=n[o],h=s.object,c=s.buffer;if(yr(h,t),f)e=f;else{if(e=s.material,!e)continue;hi(e)}i.setMaterialFaces(e);c instanceof THREE.BufferGeometry?i.renderBufferDirect(t,r,u,e,c,h):i.renderBuffer(t,r,u,e,c,h)}}function fi(n,t,r,u,f,e){for(var h,c,o,s=0,l=n.length;s<l;s++)if(h=n[s],c=h.object,c.visible){if(e)o=e;else{if(o=h[t],!o)continue;hi(o)}i.renderImmediateObject(r,u,f,o,c)}}function af(n){var i=n.object,t=i.material;t.transparent?(n.transparent=t,n.opaque=null):(n.opaque=t,n.transparent=null)}function vf(n){var i=n.object,u=n.buffer,f=i.geometry,t=i.material,r;t instanceof THREE.MeshFaceMaterial?(r=f instanceof THREE.BufferGeometry?0:u.materialIndex,t=t.materials[r],n.material=t,t.transparent?nt.push(n):g.push(n)):t&&(n.material=t,t.transparent?nt.push(n):g.push(n))}function yf(n){var t,u,r,f;if(n.__webglInit===undefined&&(n.__webglInit=!0,n._modelViewMatrix=new THREE.Matrix4,n._normalMatrix=new THREE.Matrix3,n.addEventListener("removed",nr)),t=n.geometry,t===undefined||t.__webglInit===undefined&&(t.__webglInit=!0,t.addEventListener("dispose",tr),t instanceof THREE.BufferGeometry?i.info.memory.geometries++:n instanceof THREE.Mesh?hr(n,t):n instanceof THREE.Line?t.__webglVertexBuffer===undefined&&(bu(t),rf(t,n),t.verticesNeedUpdate=!0,t.colorsNeedUpdate=!0,t.lineDistancesNeedUpdate=!0):n instanceof THREE.PointCloud&&t.__webglVertexBuffer===undefined&&(wu(t),tf(t,n),t.verticesNeedUpdate=!0,t.colorsNeedUpdate=!0)),n.__webglActive===undefined)if(n.__webglActive=!0,n instanceof THREE.Mesh){if(t instanceof THREE.BufferGeometry)at(a,t,n);else if(t instanceof THREE.Geometry)for(u=b[t.id],r=0,f=u.length;r<f;r++)at(a,u[r],n)}else n instanceof THREE.Line||n instanceof THREE.PointCloud?at(a,t,n):(n instanceof THREE.ImmediateRenderObject||n.immediateRenderCallback)&&wf(p,n)}function pf(n,t){for(var a,i,v=u.get("OES_element_index_uint")?4294967296:65535,r,f={},c=n.morphTargets.length,l=n.morphNormals.length,o,e={},h=[],s=0,y=n.faces.length;s<y;s++)a=n.faces[s],i=t?a.materialIndex:0,i in f||(f[i]={hash:i,counter:0}),r=f[i].hash+"_"+f[i].counter,r in e||(o={id:ei++,faces3:[],materialIndex:i,vertices:0,numMorphTargets:c,numMorphNormals:l},e[r]=o,h.push(o)),e[r].vertices+3>v&&(f[i].counter+=1,r=f[i].hash+"_"+f[i].counter,r in e||(o={id:ei++,faces3:[],materialIndex:i,vertices:0,numMorphTargets:c,numMorphNormals:l},e[r]=o,h.push(o))),e[r].faces3.push(s),e[r].vertices+=3;return h}function hr(n,t){var o=n.material,u=!1,f,r,e,i;for((b[t.id]===undefined||t.groupsNeedUpdate===!0)&&(delete a[n.id],b[t.id]=pf(t,o instanceof THREE.MeshFaceMaterial),t.groupsNeedUpdate=!1),f=b[t.id],r=0,e=f.length;r<e;r++)i=f[r],i.__webglVertexBuffer===undefined?(ku(i),uf(i,n),t.verticesNeedUpdate=!0,t.morphTargetsNeedUpdate=!0,t.elementsNeedUpdate=!0,t.uvsNeedUpdate=!0,t.normalsNeedUpdate=!0,t.tangentsNeedUpdate=!0,t.colorsNeedUpdate=!0,u=!0):u=!1,(u||n.__webglActive===undefined)&&at(a,i,n);n.__webglActive=!0}function at(n,t,i){var r=i.id;n[r]=n[r]||[];n[r].push({id:r,buffer:t,object:i,material:null,z:0})}function wf(n,t){n.push({id:null,object:t,opaque:null,transparent:null,z:0})}function cr(n){var i=n.geometry,c,s,l,h,f,v,u,o;if(i instanceof THREE.BufferGeometry)for(c=i.attributes,s=i.attributesKeys,f=0,l=s.length;f<l;f++){var a=s[f],r=c[a],e=a==="index"?t.ELEMENT_ARRAY_BUFFER:t.ARRAY_BUFFER;r.buffer===undefined?(r.buffer=t.createBuffer(),t.bindBuffer(e,r.buffer),t.bufferData(e,r.array,r instanceof THREE.DynamicBufferAttribute?t.DYNAMIC_DRAW:t.STATIC_DRAW),r.needsUpdate=!1):r.needsUpdate===!0&&(t.bindBuffer(e,r.buffer),r.updateRange===undefined||r.updateRange.count===-1?t.bufferSubData(e,0,r.array):r.updateRange.count===0?console.error("THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(e,r.updateRange.offset*r.array.BYTES_PER_ELEMENT,r.array.subarray(r.updateRange.offset,r.updateRange.offset+r.updateRange.count)),r.updateRange.count=0),r.needsUpdate=!1)}else if(n instanceof THREE.Mesh){for(i.groupsNeedUpdate===!0&&hr(n,i),h=b[i.id],f=0,v=h.length;f<v;f++){var y=h[f],u=ct(n,y),o=u.attributes&&oi(u);(i.verticesNeedUpdate||i.morphTargetsNeedUpdate||i.elementsNeedUpdate||i.uvsNeedUpdate||i.normalsNeedUpdate||i.colorsNeedUpdate||i.tangentsNeedUpdate||o)&&sf(y,n,t.DYNAMIC_DRAW,!i.dynamic,u)}i.verticesNeedUpdate=!1;i.morphTargetsNeedUpdate=!1;i.elementsNeedUpdate=!1;i.uvsNeedUpdate=!1;i.normalsNeedUpdate=!1;i.colorsNeedUpdate=!1;i.tangentsNeedUpdate=!1;u.attributes&&si(u)}else n instanceof THREE.Line?(u=ct(n,i),o=u.attributes&&oi(u),(i.verticesNeedUpdate||i.colorsNeedUpdate||i.lineDistancesNeedUpdate||o)&&of(i,t.DYNAMIC_DRAW),i.verticesNeedUpdate=!1,i.colorsNeedUpdate=!1,i.lineDistancesNeedUpdate=!1,u.attributes&&si(u)):n instanceof THREE.PointCloud&&(u=ct(n,i),o=u.attributes&&oi(u),(i.verticesNeedUpdate||i.colorsNeedUpdate||o)&&ef(i,t.DYNAMIC_DRAW,n),i.verticesNeedUpdate=!1,i.colorsNeedUpdate=!1,u.attributes&&si(u))}function oi(n){for(var t in n.attributes)if(n.attributes[t].needsUpdate)return!0;return!1}function si(n){for(var t in n.attributes)n.attributes[t].needsUpdate=!1}function bf(n){n instanceof THREE.Mesh||n instanceof THREE.PointCloud||n instanceof THREE.Line?delete a[n.id]:(n instanceof THREE.ImmediateRenderObject||n.immediateRenderCallback)&&kf(p,n);delete n.__webglInit;delete n._modelViewMatrix;delete n._normalMatrix;delete n.__webglActive}function kf(n,t){for(var i=n.length-1;i>=0;i--)n[i].object===t&&n.splice(i,1)}function df(n,t,r,u){var h,c,s,b,o,a,rt,d,g,e,y,p,nt,tt;n.addEventListener("dispose",rr);h=lr[n.type];h?(c=THREE.ShaderLib[h],n.__webglShader={uniforms:THREE.UniformsUtils.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}):n.__webglShader={uniforms:n.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader};var l=ye(t),it=pe(t),ut=ve(u),w={precision:k,supportsVertexTextures:ii,map:!!n.map,envMap:!!n.envMap,envMapMode:n.envMap&&n.envMap.mapping,lightMap:!!n.lightMap,bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,combine:n.combine,vertexColors:n.vertexColors,fog:r,useFog:n.fog,fogExp:r instanceof THREE.FogExp2,flatShading:n.shading===THREE.FlatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:yt,skinning:n.skinning,maxBones:ut,useVertexTexture:ri&&u&&u.skeleton&&u.skeleton.useVertexTexture,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:i.maxMorphTargets,maxMorphNormals:i.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxShadows:it,shadowMapEnabled:i.shadowMapEnabled&&u.receiveShadow&&it>0,shadowMapType:i.shadowMapType,shadowMapDebug:i.shadowMapDebug,shadowMapCascade:i.shadowMapCascade,alphaTest:n.alphaTest,metal:n.metal,wrapAround:n.wrapAround,doubleSided:n.side===THREE.DoubleSide,flipSided:n.side===THREE.BackSide},f=[];if(h?f.push(h):(f.push(n.fragmentShader),f.push(n.vertexShader)),n.defines!==undefined)for(s in n.defines)f.push(s),f.push(n.defines[s]);for(s in w)f.push(s),f.push(w[s]);for(b=f.join(),a=0,rt=v.length;a<rt;a++)if(d=v[a],d.code===b){o=d;o.usedTimes++;break}if(o===undefined&&(o=new THREE.WebGLProgram(i,b,n,w),v.push(o),i.info.memory.programs=v.length),n.program=o,g=o.attributes,n.morphTargets)for(n.numSupportedMorphTargets=0,p="morphTarget",e=0;e<i.maxMorphTargets;e++)y=p+e,g[y]>=0&&n.numSupportedMorphTargets++;if(n.morphNormals)for(n.numSupportedMorphNormals=0,p="morphNormal",e=0;e<i.maxMorphNormals;e++)y=p+e,g[y]>=0&&n.numSupportedMorphNormals++;n.uniformsList=[];for(nt in n.__webglShader.uniforms)tt=n.program.uniforms[nt],tt&&n.uniformsList.push([n.__webglShader.uniforms[nt],tt])}function hi(n){n.transparent===!0?r.setBlending(n.blending,n.blendEquation,n.blendSrc,n.blendDst,n.blendEquationAlpha,n.blendSrcAlpha,n.blendDstAlpha):r.setBlending(THREE.NoBlending);r.setDepthTest(n.depthTest);r.setDepthWrite(n.depthWrite);r.setColorWrite(n.colorWrite);r.setPolygonOffset(n.polygonOffset,n.polygonOffsetFactor,n.polygonOffsetUnits)}function ci(n,r,u,f,e){var v;kt=0;f.needsUpdate&&(f.program&&fr(f),df(f,r,u,e),f.needsUpdate=!1);f.morphTargets&&(e.__webglMorphTargetInfluences||(e.__webglMorphTargetInfluences=new Float32Array(i.maxMorphTargets)));var y=!1,a=!1,l=!1,c=f.program,s=c.uniforms,h=f.__webglShader.uniforms;return c.id!==bt&&(t.useProgram(c.program),bt=c.id,y=!0,a=!0,l=!0),f.id!==tt&&(tt===-1&&(l=!0),tt=f.id,a=!0),(y||n!==it)&&(t.uniformMatrix4fv(s.projectionMatrix,!1,n.projectionMatrix.elements),yt&&t.uniform1f(s.logDepthBufFC,2/(Math.log(n.far+1)/Math.LN2)),n!==it&&(it=n),(f instanceof THREE.ShaderMaterial||f instanceof THREE.MeshPhongMaterial||f.envMap)&&s.cameraPosition!==null&&(o.setFromMatrixPosition(n.matrixWorld),t.uniform3f(s.cameraPosition,o.x,o.y,o.z)),(f instanceof THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshBasicMaterial||f instanceof THREE.ShaderMaterial||f.skinning)&&s.viewMatrix!==null&&t.uniformMatrix4fv(s.viewMatrix,!1,n.matrixWorldInverse.elements)),f.skinning&&(e.bindMatrix&&s.bindMatrix!==null&&t.uniformMatrix4fv(s.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&s.bindMatrixInverse!==null&&t.uniformMatrix4fv(s.bindMatrixInverse,!1,e.bindMatrixInverse.elements),ri&&e.skeleton&&e.skeleton.useVertexTexture?(s.boneTexture!==null&&(v=li(),t.uniform1i(s.boneTexture,v),i.setTexture(e.skeleton.boneTexture,v)),s.boneTextureWidth!==null&&t.uniform1i(s.boneTextureWidth,e.skeleton.boneTextureWidth),s.boneTextureHeight!==null&&t.uniform1i(s.boneTextureHeight,e.skeleton.boneTextureHeight)):e.skeleton&&e.skeleton.boneMatrices&&s.boneGlobalMatrices!==null&&t.uniformMatrix4fv(s.boneGlobalMatrices,!1,e.skeleton.boneMatrices)),a&&(u&&f.fog&&ie(h,u),(f instanceof THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f.lights)&&(ht&&(l=!0,he(r),ht=!1),l?(fe(h,pi),vr(h,!0)):vr(h,!1)),(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)&&gf(h,f),f instanceof THREE.LineBasicMaterial?ar(h,f):f instanceof THREE.LineDashedMaterial?(ar(h,f),ne(h,f)):f instanceof THREE.PointCloudMaterial?te(h,f):f instanceof THREE.MeshPhongMaterial?re(h,f):f instanceof THREE.MeshLambertMaterial?ue(h,f):f instanceof THREE.MeshDepthMaterial?(h.mNear.value=n.near,h.mFar.value=n.far,h.opacity.value=f.opacity):f instanceof THREE.MeshNormalMaterial&&(h.opacity.value=f.opacity),e.receiveShadow&&!f._shadowPass&&ee(h,r),se(f.uniformsList)),oe(s,e),s.modelMatrix!==null&&t.uniformMatrix4fv(s.modelMatrix,!1,e.matrixWorld.elements),c}function gf(n,t){var i,r,u;n.opacity.value=t.opacity;n.diffuse.value=t.color;n.map.value=t.map;n.lightMap.value=t.lightMap;n.specularMap.value=t.specularMap;n.alphaMap.value=t.alphaMap;t.bumpMap&&(n.bumpMap.value=t.bumpMap,n.bumpScale.value=t.bumpScale);t.normalMap&&(n.normalMap.value=t.normalMap,n.normalScale.value.copy(t.normalScale));t.map?i=t.map:t.specularMap?i=t.specularMap:t.normalMap?i=t.normalMap:t.bumpMap?i=t.bumpMap:t.alphaMap&&(i=t.alphaMap);i!==undefined&&(r=i.offset,u=i.repeat,n.offsetRepeat.value.set(r.x,r.y,u.x,u.y));n.envMap.value=t.envMap;n.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;n.reflectivity.value=t.reflectivity;n.refractionRatio.value=t.refractionRatio}function ar(n,t){n.diffuse.value=t.color;n.opacity.value=t.opacity}function ne(n,t){n.dashSize.value=t.dashSize;n.totalSize.value=t.dashSize+t.gapSize;n.scale.value=t.scale}function te(n,t){if(n.psColor.value=t.color,n.opacity.value=t.opacity,n.size.value=t.size,n.scale.value=s.height/2,n.map.value=t.map,t.map!==null){var i=t.map.offset,r=t.map.repeat;n.offsetRepeat.value.set(i.x,i.y,r.x,r.y)}}function ie(n,t){n.fogColor.value=t.color;t instanceof THREE.Fog?(n.fogNear.value=t.near,n.fogFar.value=t.far):t instanceof THREE.FogExp2&&(n.fogDensity.value=t.density)}function re(n,t){n.shininess.value=t.shininess;n.emissive.value=t.emissive;n.specular.value=t.specular;t.wrapAround&&n.wrapRGB.value.copy(t.wrapRGB)}function ue(n,t){n.emissive.value=t.emissive;t.wrapAround&&n.wrapRGB.value.copy(t.wrapRGB)}function fe(n,t){n.ambientLightColor.value=t.ambient;n.directionalLightColor.value=t.directional.colors;n.directionalLightDirection.value=t.directional.positions;n.pointLightColor.value=t.point.colors;n.pointLightPosition.value=t.point.positions;n.pointLightDistance.value=t.point.distances;n.pointLightDecay.value=t.point.decays;n.spotLightColor.value=t.spot.colors;n.spotLightPosition.value=t.spot.positions;n.spotLightDistance.value=t.spot.distances;n.spotLightDirection.value=t.spot.directions;n.spotLightAngleCos.value=t.spot.anglesCos;n.spotLightExponent.value=t.spot.exponents;n.spotLightDecay.value=t.spot.decays;n.hemisphereLightSkyColor.value=t.hemi.skyColors;n.hemisphereLightGroundColor.value=t.hemi.groundColors;n.hemisphereLightDirection.value=t.hemi.positions}function vr(n,t){n.ambientLightColor.needsUpdate=t;n.directionalLightColor.needsUpdate=t;n.directionalLightDirection.needsUpdate=t;n.pointLightColor.needsUpdate=t;n.pointLightPosition.needsUpdate=t;n.pointLightDistance.needsUpdate=t;n.pointLightDecay.needsUpdate=t;n.spotLightColor.needsUpdate=t;n.spotLightPosition.needsUpdate=t;n.spotLightDistance.needsUpdate=t;n.spotLightDirection.needsUpdate=t;n.spotLightAngleCos.needsUpdate=t;n.spotLightExponent.needsUpdate=t;n.spotLightDecay.needsUpdate=t;n.hemisphereLightSkyColor.needsUpdate=t;n.hemisphereLightGroundColor.needsUpdate=t;n.hemisphereLightDirection.needsUpdate=t}function ee(n,t){var r,u,f,i;if(n.shadowMatrix)for(r=0,u=0,f=t.length;u<f;u++)(i=t[u],i.castShadow)&&(i instanceof THREE.SpotLight||i instanceof THREE.DirectionalLight&&!i.shadowCascade)&&(n.shadowMap.value[r]=i.shadowMap,n.shadowMapSize.value[r]=i.shadowMapSize,n.shadowMatrix.value[r]=i.shadowMatrix,n.shadowDarkness.value[r]=i.shadowDarkness,n.shadowBias.value[r]=i.shadowBias,r++)}function oe(n,i){t.uniformMatrix4fv(n.modelViewMatrix,!1,i._modelViewMatrix.elements);n.normalMatrix&&t.uniformMatrix3fv(n.normalMatrix,!1,i._normalMatrix.elements)}function li(){var n=kt;return n>=ki&&THREE.warn("WebGLRenderer: trying to use "+n+" texture units while this GPU supports only "+ki),kt+=1,n}function se(n){for(var f,u,o,s,c,h,l=0,v=n.length;l<v;l++)if(f=n[l][0],f.needsUpdate!==!1){var a=f.type,r=f.value,e=n[l][1];switch(a){case"1i":t.uniform1i(e,r);break;case"1f":t.uniform1f(e,r);break;case"2f":t.uniform2f(e,r[0],r[1]);break;case"3f":t.uniform3f(e,r[0],r[1],r[2]);break;case"4f":t.uniform4f(e,r[0],r[1],r[2],r[3]);break;case"1iv":t.uniform1iv(e,r);break;case"3iv":t.uniform3iv(e,r);break;case"1fv":t.uniform1fv(e,r);break;case"2fv":t.uniform2fv(e,r);break;case"3fv":t.uniform3fv(e,r);break;case"4fv":t.uniform4fv(e,r);break;case"Matrix3fv":t.uniformMatrix3fv(e,!1,r);break;case"Matrix4fv":t.uniformMatrix4fv(e,!1,r);break;case"i":t.uniform1i(e,r);break;case"f":t.uniform1f(e,r);break;case"v2":t.uniform2f(e,r.x,r.y);break;case"v3":t.uniform3f(e,r.x,r.y,r.z);break;case"v4":t.uniform4f(e,r.x,r.y,r.z,r.w);break;case"c":t.uniform3f(e,r.r,r.g,r.b);break;case"iv1":t.uniform1iv(e,r);break;case"iv":t.uniform3iv(e,r);break;case"fv1":t.uniform1fv(e,r);break;case"fv":t.uniform3fv(e,r);break;case"v2v":for(f._array===undefined&&(f._array=new Float32Array(2*r.length)),u=0,o=r.length;u<o;u++)h=u*2,f._array[h]=r[u].x,f._array[h+1]=r[u].y;t.uniform2fv(e,f._array);break;case"v3v":for(f._array===undefined&&(f._array=new Float32Array(3*r.length)),u=0,o=r.length;u<o;u++)h=u*3,f._array[h]=r[u].x,f._array[h+1]=r[u].y,f._array[h+2]=r[u].z;t.uniform3fv(e,f._array);break;case"v4v":for(f._array===undefined&&(f._array=new Float32Array(4*r.length)),u=0,o=r.length;u<o;u++)h=u*4,f._array[h]=r[u].x,f._array[h+1]=r[u].y,f._array[h+2]=r[u].z,f._array[h+3]=r[u].w;t.uniform4fv(e,f._array);break;case"m3":t.uniformMatrix3fv(e,!1,r.elements);break;case"m3v":for(f._array===undefined&&(f._array=new Float32Array(9*r.length)),u=0,o=r.length;u<o;u++)r[u].flattenToArrayOffset(f._array,u*9);t.uniformMatrix3fv(e,!1,f._array);break;case"m4":t.uniformMatrix4fv(e,!1,r.elements);break;case"m4v":for(f._array===undefined&&(f._array=new Float32Array(16*r.length)),u=0,o=r.length;u<o;u++)r[u].flattenToArrayOffset(f._array,u*16);t.uniformMatrix4fv(e,!1,f._array);break;case"t":if(s=r,c=li(),t.uniform1i(e,c),!s)continue;s instanceof THREE.CubeTexture||s.image instanceof Array&&s.image.length===6?ce(s,c):s instanceof THREE.WebGLRenderTargetCube?le(s,c):i.setTexture(s,c);break;case"tv":for(f._array===undefined&&(f._array=[]),u=0,o=f.value.length;u<o;u++)f._array[u]=li();for(t.uniform1iv(e,f._array),u=0,o=f.value.length;u<o;u++)(s=f.value[u],c=f._array[u],s)&&i.setTexture(s,c);break;default:THREE.warn("THREE.WebGLRenderer: Unknown uniform type: "+a)}}}function yr(n,t){n._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,n.matrixWorld);n._normalMatrix.getNormalMatrix(n._modelViewMatrix)}function rt(n,t,i,r){n[t]=i.r*r;n[t+1]=i.g*r;n[t+2]=i.b*r}function he(n){for(var t,ht=0,ct=0,lt=0,h,at,vt,c,b,r=pi,k=r.directional.colors,d=r.directional.positions,g=r.point.colors,nt=r.point.positions,bt=r.point.distances,kt=r.point.decays,tt=r.spot.colors,it=r.spot.positions,dt=r.spot.distances,ut=r.spot.directions,gt=r.spot.anglesCos,ni=r.spot.exponents,ti=r.spot.decays,ft=r.hemi.skyColors,et=r.hemi.groundColors,ot=r.hemi.positions,w=0,l=0,e=0,v=0,yt=0,pt=0,wt=0,st=0,y=0,p=0,s=0,a=0,i=0,u=n.length;i<u;i++)if(t=n[i],!t.onlyShadow)if(h=t.color,c=t.intensity,b=t.distance,t instanceof THREE.AmbientLight){if(!t.visible)continue;ht+=h.r;ct+=h.g;lt+=h.b}else if(t instanceof THREE.DirectionalLight){if(yt+=1,!t.visible)continue;f.setFromMatrixPosition(t.matrixWorld);o.setFromMatrixPosition(t.target.matrixWorld);f.sub(o);f.normalize();y=w*3;d[y]=f.x;d[y+1]=f.y;d[y+2]=f.z;rt(k,y,h,c);w+=1}else if(t instanceof THREE.PointLight){if(pt+=1,!t.visible)continue;p=l*3;rt(g,p,h,c);o.setFromMatrixPosition(t.matrixWorld);nt[p]=o.x;nt[p+1]=o.y;nt[p+2]=o.z;bt[l]=b;kt[l]=t.distance===0?0:t.decay;l+=1}else if(t instanceof THREE.SpotLight){if(wt+=1,!t.visible)continue;s=e*3;rt(tt,s,h,c);f.setFromMatrixPosition(t.matrixWorld);it[s]=f.x;it[s+1]=f.y;it[s+2]=f.z;dt[e]=b;o.setFromMatrixPosition(t.target.matrixWorld);f.sub(o);f.normalize();ut[s]=f.x;ut[s+1]=f.y;ut[s+2]=f.z;gt[e]=Math.cos(t.angle);ni[e]=t.exponent;ti[e]=t.distance===0?0:t.decay;e+=1}else if(t instanceof THREE.HemisphereLight){if(st+=1,!t.visible)continue;f.setFromMatrixPosition(t.matrixWorld);f.normalize();a=v*3;ot[a]=f.x;ot[a+1]=f.y;ot[a+2]=f.z;at=t.color;vt=t.groundColor;rt(ft,a,at,c);rt(et,a,vt,c);v+=1}for(i=w*3,u=Math.max(k.length,yt*3);i<u;i++)k[i]=0;for(i=l*3,u=Math.max(g.length,pt*3);i<u;i++)g[i]=0;for(i=e*3,u=Math.max(tt.length,wt*3);i<u;i++)tt[i]=0;for(i=v*3,u=Math.max(ft.length,st*3);i<u;i++)ft[i]=0;for(i=v*3,u=Math.max(et.length,st*3);i<u;i++)et[i]=0;r.directional.length=w;r.point.length=l;r.spot.length=e;r.hemi.length=v;r.ambient[0]=ht;r.ambient[1]=ct;r.ambient[2]=lt}function vt(n,r,f){var e;f?(t.texParameteri(n,t.TEXTURE_WRAP_S,c(r.wrapS)),t.texParameteri(n,t.TEXTURE_WRAP_T,c(r.wrapT)),t.texParameteri(n,t.TEXTURE_MAG_FILTER,c(r.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,c(r.minFilter))):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),(r.wrapS!==THREE.ClampToEdgeWrapping||r.wrapT!==THREE.ClampToEdgeWrapping)&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( "+r.sourceFile+" )"),t.texParameteri(n,t.TEXTURE_MAG_FILTER,kr(r.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,kr(r.minFilter)),r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( "+r.sourceFile+" )"));e=u.get("EXT_texture_filter_anisotropic");e&&r.type!==THREE.FloatType&&r.type!==THREE.HalfFloatType&&(r.anisotropy>1||r.__currentAnisotropy)&&(t.texParameterf(n,e.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,i.getMaxAnisotropy())),r.__currentAnisotropy=r.anisotropy)}function pr(n,t){var r,i,u;return n.width>t||n.height>t?(r=t/Math.max(n.width,n.height),i=document.createElement("canvas"),i.width=Math.floor(n.width*r),i.height=Math.floor(n.height*r),u=i.getContext("2d"),u.drawImage(n,0,0,n.width,n.height,0,0,i.width,i.height),THREE.warn("THREE.WebGLRenderer: image is too big ("+n.width+"x"+n.height+"). Resized to "+i.width+"x"+i.height,n),i):n}function ce(n,r){var u,o,a,s,w;if(n.image.length===6)if(n.needsUpdate){n.image.__webglTextureCube||(n.addEventListener("dispose",ui),n.image.__webglTextureCube=t.createTexture(),i.info.memory.textures++);t.activeTexture(t.TEXTURE0+r);t.bindTexture(t.TEXTURE_CUBE_MAP,n.image.__webglTextureCube);t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY);var v=n instanceof THREE.CompressedTexture,h=n.image[0]instanceof THREE.DataTexture,e=[];for(u=0;u<6;u++)e[u]=!i.autoScaleCubemaps||v||h?h?n.image[u].image:n.image[u]:pr(n.image[u],ou);var y=e[0],p=THREE.Math.isPowerOfTwo(y.width)&&THREE.Math.isPowerOfTwo(y.height),f=c(n.format),l=c(n.type);for(vt(t.TEXTURE_CUBE_MAP,n,p),u=0;u<6;u++)if(v)for(a=e[u].mipmaps,s=0,w=a.length;s<w;s++)o=a[s],n.format!==THREE.RGBAFormat&&n.format!==THREE.RGBFormat?di().indexOf(f)>-1?t.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,s,f,o.width,o.height,0,o.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,s,f,o.width,o.height,0,f,l,o.data);else h?t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,f,e[u].width,e[u].height,0,f,l,e[u].data):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,f,f,l,e[u]);n.generateMipmaps&&p&&t.generateMipmap(t.TEXTURE_CUBE_MAP);n.needsUpdate=!1;n.onUpdate&&n.onUpdate()}else t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_CUBE_MAP,n.image.__webglTextureCube)}function le(n,i){t.activeTexture(t.TEXTURE0+i);t.bindTexture(t.TEXTURE_CUBE_MAP,n.__webglTexture)}function wr(n,i,r){t.bindFramebuffer(t.FRAMEBUFFER,n);t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,r,i.__webglTexture,0)}function br(n,i){t.bindRenderbuffer(t.RENDERBUFFER,n);i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,n)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,n)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height)}function ae(n){n instanceof THREE.WebGLRenderTargetCube?(t.bindTexture(t.TEXTURE_CUBE_MAP,n.__webglTexture),t.generateMipmap(t.TEXTURE_CUBE_MAP),t.bindTexture(t.TEXTURE_CUBE_MAP,null)):(t.bindTexture(t.TEXTURE_2D,n.__webglTexture),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null))}function kr(n){return n===THREE.NearestFilter||n===THREE.NearestMipMapNearestFilter||n===THREE.NearestMipMapLinearFilter?t.NEAREST:t.LINEAR}function c(n){var i;if(n===THREE.RepeatWrapping)return t.REPEAT;if(n===THREE.ClampToEdgeWrapping)return t.CLAMP_TO_EDGE;if(n===THREE.MirroredRepeatWrapping)return t.MIRRORED_REPEAT;if(n===THREE.NearestFilter)return t.NEAREST;if(n===THREE.NearestMipMapNearestFilter)return t.NEAREST_MIPMAP_NEAREST;if(n===THREE.NearestMipMapLinearFilter)return t.NEAREST_MIPMAP_LINEAR;if(n===THREE.LinearFilter)return t.LINEAR;if(n===THREE.LinearMipMapNearestFilter)return t.LINEAR_MIPMAP_NEAREST;if(n===THREE.LinearMipMapLinearFilter)return t.LINEAR_MIPMAP_LINEAR;if(n===THREE.UnsignedByteType)return t.UNSIGNED_BYTE;if(n===THREE.UnsignedShort4444Type)return t.UNSIGNED_SHORT_4_4_4_4;if(n===THREE.UnsignedShort5551Type)return t.UNSIGNED_SHORT_5_5_5_1;if(n===THREE.UnsignedShort565Type)return t.UNSIGNED_SHORT_5_6_5;if(n===THREE.ByteType)return t.BYTE;if(n===THREE.ShortType)return t.SHORT;if(n===THREE.UnsignedShortType)return t.UNSIGNED_SHORT;if(n===THREE.IntType)return t.INT;if(n===THREE.UnsignedIntType)return t.UNSIGNED_INT;if(n===THREE.FloatType)return t.FLOAT;if(i=u.get("OES_texture_half_float"),i!==null&&n===THREE.HalfFloatType)return i.HALF_FLOAT_OES;if(n===THREE.AlphaFormat)return t.ALPHA;if(n===THREE.RGBFormat)return t.RGB;if(n===THREE.RGBAFormat)return t.RGBA;if(n===THREE.LuminanceFormat)return t.LUMINANCE;if(n===THREE.LuminanceAlphaFormat)return t.LUMINANCE_ALPHA;if(n===THREE.AddEquation)return t.FUNC_ADD;if(n===THREE.SubtractEquation)return t.FUNC_SUBTRACT;if(n===THREE.ReverseSubtractEquation)return t.FUNC_REVERSE_SUBTRACT;if(n===THREE.ZeroFactor)return t.ZERO;if(n===THREE.OneFactor)return t.ONE;if(n===THREE.SrcColorFactor)return t.SRC_COLOR;if(n===THREE.OneMinusSrcColorFactor)return t.ONE_MINUS_SRC_COLOR;if(n===THREE.SrcAlphaFactor)return t.SRC_ALPHA;if(n===THREE.OneMinusSrcAlphaFactor)return t.ONE_MINUS_SRC_ALPHA;if(n===THREE.DstAlphaFactor)return t.DST_ALPHA;if(n===THREE.OneMinusDstAlphaFactor)return t.ONE_MINUS_DST_ALPHA;if(n===THREE.DstColorFactor)return t.DST_COLOR;if(n===THREE.OneMinusDstColorFactor)return t.ONE_MINUS_DST_COLOR;if(n===THREE.SrcAlphaSaturateFactor)return t.SRC_ALPHA_SATURATE;if(i=u.get("WEBGL_compressed_texture_s3tc"),i!==null){if(n===THREE.RGB_S3TC_DXT1_Format)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===THREE.RGBA_S3TC_DXT1_Format)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===THREE.RGBA_S3TC_DXT3_Format)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===THREE.RGBA_S3TC_DXT5_Format)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i=u.get("WEBGL_compressed_texture_pvrtc"),i!==null){if(n===THREE.RGB_PVRTC_4BPPV1_Format)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===THREE.RGB_PVRTC_2BPPV1_Format)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===THREE.RGBA_PVRTC_4BPPV1_Format)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===THREE.RGBA_PVRTC_2BPPV1_Format)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i=u.get("EXT_blend_minmax"),i!==null){if(n===THREE.MinEquation)return i.MIN_EXT;if(n===THREE.MaxEquation)return i.MAX_EXT}return 0}function ve(n){if(ri&&n&&n.skeleton&&n.skeleton.useVertexTexture)return 1024;var r=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),u=Math.floor((r-20)/4),i=u;return n!==undefined&&n instanceof THREE.SkinnedMesh&&(i=Math.min(n.skeleton.bones.length,i),i<n.skeleton.bones.length&&THREE.warn("WebGLRenderer: too many bones - "+n.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function ye(n){for(var t,r=0,u=0,f=0,e=0,i=0,o=n.length;i<o;i++)(t=n[i],t.onlyShadow||t.visible===!1)||(t instanceof THREE.DirectionalLight&&r++,t instanceof THREE.PointLight&&u++,t instanceof THREE.SpotLight&&f++,t instanceof THREE.HemisphereLight&&e++);return{directional:r,point:u,spot:f,hemi:e}}function pe(n){for(var t,i=0,r=0,u=n.length;r<u;r++)(t=n[r],t.castShadow)&&(t instanceof THREE.SpotLight&&i++,t instanceof THREE.DirectionalLight&&!t.shadowCascade&&i++);return i}var ni,r,u,b,ei,lr;console.log("THREE.WebGLRenderer",THREE.REVISION);n=n||{};var s=n.canvas!==undefined?n.canvas:document.createElement("canvas"),dr=n.context!==undefined?n.context:null,e=1,k=n.precision!==undefined?n.precision:"highp",gr=n.alpha!==undefined?n.alpha:!1,nu=n.depth!==undefined?n.depth:!0,tu=n.stencil!==undefined?n.stencil:!0,iu=n.antialias!==undefined?n.antialias:!1,ai=n.premultipliedAlpha!==undefined?n.premultipliedAlpha:!0,ru=n.preserveDrawingBuffer!==undefined?n.preserveDrawingBuffer:!1,yt=n.logarithmicDepthBuffer!==undefined?n.logarithmicDepthBuffer:!1,h=new THREE.Color(0),d=0,l=[],a={},p=[],g=[],nt=[],pt=[],wt=[];this.domElement=s;this.context=null;this.autoClear=!0;this.autoClearColor=!0;this.autoClearDepth=!0;this.autoClearStencil=!0;this.sortObjects=!0;this.gammaFactor=2;this.gammaInput=!1;this.gammaOutput=!1;this.shadowMapEnabled=!1;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapDebug=!1;this.shadowMapCascade=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var i=this,v=[],bt=null,ut=null,tt=-1,w="",it=null,kt=0,ft=0,et=0,ot=s.width,st=s.height,vi=0,yi=0,dt=new THREE.Frustum,gt=new THREE.Matrix4,o=new THREE.Vector3,f=new THREE.Vector3,ht=!0,pi={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},t;try{if(ni={alpha:gr,depth:nu,stencil:tu,antialias:iu,premultipliedAlpha:ai,preserveDrawingBuffer:ru},t=dr||s.getContext("webgl",ni)||s.getContext("experimental-webgl",ni),t===null)if(s.getContext("webgl")!==null)throw"Error creating WebGL context with your selected attributes.";else throw"Error creating WebGL context.";s.addEventListener("webglcontextlost",function(n){n.preventDefault();bi();wi();a={}},!1)}catch(uu){THREE.error("THREE.WebGLRenderer: "+uu)}r=new THREE.WebGLState(t,c);t.getShaderPrecisionFormat===undefined&&(t.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});u=new THREE.WebGLExtensions(t);u.get("OES_texture_float");u.get("OES_texture_float_linear");u.get("OES_texture_half_float");u.get("OES_texture_half_float_linear");u.get("OES_standard_derivatives");yt&&u.get("EXT_frag_depth");var ti=function(n,i,r,u){ai===!0&&(n*=u,i*=u,r*=u);t.clearColor(n,i,r,u)},wi=function(){t.clearColor(0,0,0,1);t.clearDepth(1);t.clearStencil(0);t.enable(t.DEPTH_TEST);t.depthFunc(t.LEQUAL);t.frontFace(t.CCW);t.cullFace(t.BACK);t.enable(t.CULL_FACE);t.enable(t.BLEND);t.blendEquation(t.FUNC_ADD);t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA);t.viewport(ft,et,ot,st);ti(h.r,h.g,h.b,d)},bi=function(){bt=null;it=null;w="";tt=-1;ht=!0;r.reset()};wi();this.context=t;this.state=r;var ki=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),fu=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),eu=t.getParameter(t.MAX_TEXTURE_SIZE),ou=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),ii=fu>0,ri=ii&&u.get("OES_texture_float"),su=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT),hu=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT),cu=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT),lu=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT),di=function(){var n;return function(){var r,i;if(n!==undefined)return n;if(n=[],u.get("WEBGL_compressed_texture_pvrtc")||u.get("WEBGL_compressed_texture_s3tc"))for(r=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),i=0;i<r.length;i++)n.push(r[i]);return n}}(),au=su.precision>0&&cu.precision>0,gi=hu.precision>0&&lu.precision>0;k!=="highp"||au||(gi?(k="mediump",THREE.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(k="lowp",THREE.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp.")));k!=="mediump"||gi||(k="lowp",THREE.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var vu=new THREE.ShadowMapPlugin(this,l,a,p),yu=new THREE.SpritePlugin(this,pt),pu=new THREE.LensFlarePlugin(this,wt);this.getContext=function(){return t};this.forceContextLoss=function(){u.get("WEBGL_lose_context").loseContext()};this.supportsVertexTextures=function(){return ii};this.supportsFloatTextures=function(){return u.get("OES_texture_float")};this.supportsHalfFloatTextures=function(){return u.get("OES_texture_half_float")};this.supportsStandardDerivatives=function(){return u.get("OES_standard_derivatives")};this.supportsCompressedTextureS3TC=function(){return u.get("WEBGL_compressed_texture_s3tc")};this.supportsCompressedTexturePVRTC=function(){return u.get("WEBGL_compressed_texture_pvrtc")};this.supportsBlendMinMax=function(){return u.get("EXT_blend_minmax")};this.getMaxAnisotropy=function(){var n;return function(){if(n!==undefined)return n;var i=u.get("EXT_texture_filter_anisotropic");return n=i!==null?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return k};this.getPixelRatio=function(){return e};this.setPixelRatio=function(n){e=n};this.setSize=function(n,t,i){s.width=n*e;s.height=t*e;i!==!1&&(s.style.width=n+"px",s.style.height=t+"px");this.setViewport(0,0,n,t)};this.setViewport=function(n,i,r,u){ft=n*e;et=i*e;ot=r*e;st=u*e;t.viewport(ft,et,ot,st)};this.setScissor=function(n,i,r,u){t.scissor(n*e,i*e,r*e,u*e)};this.enableScissorTest=function(n){n?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)};this.getClearColor=function(){return h};this.setClearColor=function(n,t){h.set(n);d=t!==undefined?t:1;ti(h.r,h.g,h.b,d)};this.getClearAlpha=function(){return d};this.setClearAlpha=function(n){d=n;ti(h.r,h.g,h.b,d)};this.clear=function(n,i,r){var u=0;(n===undefined||n)&&(u|=t.COLOR_BUFFER_BIT);(i===undefined||i)&&(u|=t.DEPTH_BUFFER_BIT);(r===undefined||r)&&(u|=t.STENCIL_BUFFER_BIT);t.clear(u)};this.clearColor=function(){t.clear(t.COLOR_BUFFER_BIT)};this.clearDepth=function(){t.clear(t.DEPTH_BUFFER_BIT)};this.clearStencil=function(){t.clear(t.STENCIL_BUFFER_BIT)};this.clearTarget=function(n,t,i,r){this.setRenderTarget(n);this.clear(t,i,r)};this.resetGLState=bi;var nr=function(n){var t=n.target;t.traverse(function(n){n.removeEventListener("remove",nr);bf(n)})},tr=function(n){var t=n.target;t.removeEventListener("dispose",tr);du(t)},ui=function(n){var t=n.target;t.removeEventListener("dispose",ui);gu(t);i.info.memory.textures--},ir=function(n){var t=n.target;t.removeEventListener("dispose",ir);nf(t);i.info.memory.textures--},rr=function(n){var t=n.target;t.removeEventListener("dispose",rr);fr(t)},ur=function(n){for(var r,f=["__webglVertexBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglColorBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","__webglLineDistanceBuffer"],u=0,e=f.length;u<e;u++)r=f[u],n[r]!==undefined&&(t.deleteBuffer(n[r]),delete n[r]);if(n.__webglCustomAttributesList!==undefined){for(r in n.__webglCustomAttributesList)t.deleteBuffer(n.__webglCustomAttributesList[r].buffer);delete n.__webglCustomAttributesList}i.info.memory.geometries--},du=function(n){var h,f,e,o,c,r,u,s;if(delete n.__webglInit,n instanceof THREE.BufferGeometry){for(h in n.attributes)f=n.attributes[h],f.buffer!==undefined&&(t.deleteBuffer(f.buffer),delete f.buffer);i.info.memory.geometries--}else if(e=b[n.id],e!==undefined){for(o=0,c=e.length;o<c;o++){if(r=e[o],r.numMorphTargets!==undefined){for(u=0,s=r.numMorphTargets;u<s;u++)t.deleteBuffer(r.__webglMorphTargetsBuffers[u]);delete r.__webglMorphTargetsBuffers}if(r.numMorphNormals!==undefined){for(u=0,s=r.numMorphNormals;u<s;u++)t.deleteBuffer(r.__webglMorphNormalsBuffers[u]);delete r.__webglMorphNormalsBuffers}ur(r)}delete b[n.id]}else ur(n);w=""},gu=function(n){if(n.image&&n.image.__webglTextureCube)t.deleteTexture(n.image.__webglTextureCube),delete n.image.__webglTextureCube;else{if(n.__webglInit===undefined)return;t.deleteTexture(n.__webglTexture);delete n.__webglTexture;delete n.__webglInit}},nf=function(n){if(n&&n.__webglTexture!==undefined){if(t.deleteTexture(n.__webglTexture),delete n.__webglTexture,n instanceof THREE.WebGLRenderTargetCube)for(var i=0;i<6;i++)t.deleteFramebuffer(n.__webglFramebuffer[i]),t.deleteRenderbuffer(n.__webglRenderbuffer[i]);else t.deleteFramebuffer(n.__webglFramebuffer),t.deleteRenderbuffer(n.__webglRenderbuffer);delete n.__webglFramebuffer;delete n.__webglRenderbuffer}},fr=function(n){var f=n.program.program,r,e,u,o,s;if(f!==undefined){for(n.program=undefined,o=!1,r=0,e=v.length;r<e;r++)if(u=v[r],u.program===f){u.usedTimes--;u.usedTimes===0&&(o=!0);break}if(o===!0){for(s=[],r=0,e=v.length;r<e;r++)u=v[r],u.program!==f&&s.push(u);v=s;t.deleteProgram(f);i.info.memory.programs--}}};this.renderBufferImmediate=function(n,i,u){if(r.initAttributes(),n.hasPositions&&!n.__webglVertexBuffer&&(n.__webglVertexBuffer=t.createBuffer()),n.hasNormals&&!n.__webglNormalBuffer&&(n.__webglNormalBuffer=t.createBuffer()),n.hasUvs&&!n.__webglUvBuffer&&(n.__webglUvBuffer=t.createBuffer()),n.hasColors&&!n.__webglColorBuffer&&(n.__webglColorBuffer=t.createBuffer()),n.hasPositions&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer),t.bufferData(t.ARRAY_BUFFER,n.positionArray,t.DYNAMIC_DRAW),r.enableAttribute(i.attributes.position),t.vertexAttribPointer(i.attributes.position,3,t.FLOAT,!1,0,0)),n.hasNormals){if(t.bindBuffer(t.ARRAY_BUFFER,n.__webglNormalBuffer),u instanceof THREE.MeshPhongMaterial==!1&&u.shading===THREE.FlatShading)for(var o,s,h,c,l,a,v,y,p,w,b,k,e,d=n.count*3,f=0;f<d;f+=9)e=n.normalArray,c=e[f],v=e[f+1],w=e[f+2],l=e[f+3],y=e[f+4],b=e[f+5],a=e[f+6],p=e[f+7],k=e[f+8],o=(c+l+a)/3,s=(v+y+p)/3,h=(w+b+k)/3,e[f]=o,e[f+1]=s,e[f+2]=h,e[f+3]=o,e[f+4]=s,e[f+5]=h,e[f+6]=o,e[f+7]=s,e[f+8]=h;t.bufferData(t.ARRAY_BUFFER,n.normalArray,t.DYNAMIC_DRAW);r.enableAttribute(i.attributes.normal);t.vertexAttribPointer(i.attributes.normal,3,t.FLOAT,!1,0,0)}n.hasUvs&&u.map&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglUvBuffer),t.bufferData(t.ARRAY_BUFFER,n.uvArray,t.DYNAMIC_DRAW),r.enableAttribute(i.attributes.uv),t.vertexAttribPointer(i.attributes.uv,2,t.FLOAT,!1,0,0));n.hasColors&&u.vertexColors!==THREE.NoColors&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,n.colorArray,t.DYNAMIC_DRAW),r.enableAttribute(i.attributes.color),t.vertexAttribPointer(i.attributes.color,3,t.FLOAT,!1,0,0));r.disableUnusedAttributes();t.drawArrays(t.TRIANGLES,0,n.count);n.count=0};this.renderBufferDirect=function(n,f,o,s,h,c){var b,v,d,tt,it,k,l,a,nt;if(s.visible!==!1){cr(c);var g=ci(n,f,o,s,c),p=!1,ut=s.wireframe?1:0,rt="direct_"+h.id+"_"+g.id+"_"+ut;if(rt!==w&&(w=rt,p=!0),p&&r.initAttributes(),c instanceof THREE.Mesh)if(b=s.wireframe===!0?t.LINES:t.TRIANGLES,v=h.attributes.index,v)if(v.array instanceof Uint32Array&&u.get("OES_element_index_uint")?(d=t.UNSIGNED_INT,tt=4):(d=t.UNSIGNED_SHORT,tt=2),l=h.offsets,l.length===0)p&&(y(s,g,h,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,v.buffer)),t.drawElements(b,v.array.length,d,0),i.info.render.calls++,i.info.render.vertices+=v.array.length,i.info.render.faces+=v.array.length/3;else for(p=!0,a=0,nt=l.length;a<nt;a++)it=l[a].index,p&&(y(s,g,h,it),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,v.buffer)),t.drawElements(b,l[a].count,d,l[a].start*tt),i.info.render.calls++,i.info.render.vertices+=l[a].count,i.info.render.faces+=l[a].count/3;else p&&y(s,g,h,0),k=h.attributes.position,t.drawArrays(b,0,k.array.length/k.itemSize),i.info.render.calls++,i.info.render.vertices+=k.array.length/k.itemSize,i.info.render.faces+=k.array.length/(3*k.itemSize);else if(c instanceof THREE.PointCloud)if(b=t.POINTS,v=h.attributes.index,v)if(v.array instanceof Uint32Array&&u.get("OES_element_index_uint")?(d=t.UNSIGNED_INT,tt=4):(d=t.UNSIGNED_SHORT,tt=2),l=h.offsets,l.length===0)p&&(y(s,g,h,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,v.buffer)),t.drawElements(b,v.array.length,d,0),i.info.render.calls++,i.info.render.points+=v.array.length;else for(l.length>1&&(p=!0),a=0,nt=l.length;a<nt;a++)it=l[a].index,p&&(y(s,g,h,it),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,v.buffer)),t.drawElements(b,l[a].count,d,l[a].start*tt),i.info.render.calls++,i.info.render.points+=l[a].count;else if(p&&y(s,g,h,0),k=h.attributes.position,l=h.offsets,l.length===0)t.drawArrays(b,0,k.array.length/3),i.info.render.calls++,i.info.render.points+=k.array.length/3;else for(a=0,nt=l.length;a<nt;a++)t.drawArrays(b,l[a].index,l[a].count),i.info.render.calls++,i.info.render.points+=l[a].count;else if(c instanceof THREE.Line)if(b=c.mode===THREE.LineStrip?t.LINE_STRIP:t.LINES,r.setLineWidth(s.linewidth*e),v=h.attributes.index,v)if(v.array instanceof Uint32Array?(d=t.UNSIGNED_INT,tt=4):(d=t.UNSIGNED_SHORT,tt=2),l=h.offsets,l.length===0)p&&(y(s,g,h,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,v.buffer)),t.drawElements(b,v.array.length,d,0),i.info.render.calls++,i.info.render.vertices+=v.array.length;else for(l.length>1&&(p=!0),a=0,nt=l.length;a<nt;a++)it=l[a].index,p&&(y(s,g,h,it),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,v.buffer)),t.drawElements(b,l[a].count,d,l[a].start*tt),i.info.render.calls++,i.info.render.vertices+=l[a].count;else if(p&&y(s,g,h,0),k=h.attributes.position,l=h.offsets,l.length===0)t.drawArrays(b,0,k.array.length/3),i.info.render.calls++,i.info.render.vertices+=k.array.length/3;else for(a=0,nt=l.length;a<nt;a++)t.drawArrays(b,l[a].index,l[a].count),i.info.render.calls++,i.info.render.vertices+=l[a].count}};this.renderBuffer=function(n,u,f,o,s,h){var v,k,a,y,d;if(o.visible!==!1){cr(h);var p=ci(n,u,f,o,h),c=p.attributes,l=!1,g=o.wireframe?1:0,b=s.id+"_"+p.id+"_"+g;if(b!==w&&(w=b,l=!0),l&&r.initAttributes(),!o.morphTargets&&c.position>=0?l&&(t.bindBuffer(t.ARRAY_BUFFER,s.__webglVertexBuffer),r.enableAttribute(c.position),t.vertexAttribPointer(c.position,3,t.FLOAT,!1,0,0)):h.morphTargetBase&&hf(o,s,h),l){if(s.__webglCustomAttributesList)for(v=0,k=s.__webglCustomAttributesList.length;v<k;v++)a=s.__webglCustomAttributesList[v],c[a.buffer.belongsToAttribute]>=0&&(t.bindBuffer(t.ARRAY_BUFFER,a.buffer),r.enableAttribute(c[a.buffer.belongsToAttribute]),t.vertexAttribPointer(c[a.buffer.belongsToAttribute],a.size,t.FLOAT,!1,0,0));c.color>=0&&(h.geometry.colors.length>0||h.geometry.faces.length>0?(t.bindBuffer(t.ARRAY_BUFFER,s.__webglColorBuffer),r.enableAttribute(c.color),t.vertexAttribPointer(c.color,3,t.FLOAT,!1,0,0)):o.defaultAttributeValues!==undefined&&t.vertexAttrib3fv(c.color,o.defaultAttributeValues.color));c.normal>=0&&(t.bindBuffer(t.ARRAY_BUFFER,s.__webglNormalBuffer),r.enableAttribute(c.normal),t.vertexAttribPointer(c.normal,3,t.FLOAT,!1,0,0));c.tangent>=0&&(t.bindBuffer(t.ARRAY_BUFFER,s.__webglTangentBuffer),r.enableAttribute(c.tangent),t.vertexAttribPointer(c.tangent,4,t.FLOAT,!1,0,0));c.uv>=0&&(h.geometry.faceVertexUvs[0]?(t.bindBuffer(t.ARRAY_BUFFER,s.__webglUVBuffer),r.enableAttribute(c.uv),t.vertexAttribPointer(c.uv,2,t.FLOAT,!1,0,0)):o.defaultAttributeValues!==undefined&&t.vertexAttrib2fv(c.uv,o.defaultAttributeValues.uv));c.uv2>=0&&(h.geometry.faceVertexUvs[1]?(t.bindBuffer(t.ARRAY_BUFFER,s.__webglUV2Buffer),r.enableAttribute(c.uv2),t.vertexAttribPointer(c.uv2,2,t.FLOAT,!1,0,0)):o.defaultAttributeValues!==undefined&&t.vertexAttrib2fv(c.uv2,o.defaultAttributeValues.uv2));o.skinning&&c.skinIndex>=0&&c.skinWeight>=0&&(t.bindBuffer(t.ARRAY_BUFFER,s.__webglSkinIndicesBuffer),r.enableAttribute(c.skinIndex),t.vertexAttribPointer(c.skinIndex,4,t.FLOAT,!1,0,0),t.bindBuffer(t.ARRAY_BUFFER,s.__webglSkinWeightsBuffer),r.enableAttribute(c.skinWeight),t.vertexAttribPointer(c.skinWeight,4,t.FLOAT,!1,0,0));c.lineDistance>=0&&(t.bindBuffer(t.ARRAY_BUFFER,s.__webglLineDistanceBuffer),r.enableAttribute(c.lineDistance),t.vertexAttribPointer(c.lineDistance,1,t.FLOAT,!1,0,0))}r.disableUnusedAttributes();h instanceof THREE.Mesh?(y=s.__typeArray===Uint32Array?t.UNSIGNED_INT:t.UNSIGNED_SHORT,o.wireframe?(r.setLineWidth(o.wireframeLinewidth*e),l&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.__webglLineBuffer),t.drawElements(t.LINES,s.__webglLineCount,y,0)):(l&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s.__webglFaceBuffer),t.drawElements(t.TRIANGLES,s.__webglFaceCount,y,0)),i.info.render.calls++,i.info.render.vertices+=s.__webglFaceCount,i.info.render.faces+=s.__webglFaceCount/3):h instanceof THREE.Line?(d=h.mode===THREE.LineStrip?t.LINE_STRIP:t.LINES,r.setLineWidth(o.linewidth*e),t.drawArrays(d,0,s.__webglLineCount),i.info.render.calls++):h instanceof THREE.PointCloud&&(t.drawArrays(t.POINTS,0,s.__webglParticleCount),i.info.render.calls++,i.info.render.points+=s.__webglParticleCount)}};this.render=function(n,t,u,f){var e,s,a,h,c,o;if(t instanceof THREE.Camera==!1){THREE.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}for(e=n.fog,w="",tt=-1,it=null,ht=!0,n.autoUpdate===!0&&n.updateMatrixWorld(),t.parent===undefined&&t.updateMatrixWorld(),n.traverse(function(n){n instanceof THREE.SkinnedMesh&&n.skeleton.update()}),t.matrixWorldInverse.getInverse(t.matrixWorld),gt.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),dt.setFromMatrix(gt),l.length=0,g.length=0,nt.length=0,pt.length=0,wt.length=0,sr(n),i.sortObjects===!0&&(g.sort(cf),nt.sort(lf)),vu.render(n,t),i.info.render.calls=0,i.info.render.vertices=0,i.info.render.faces=0,i.info.render.points=0,this.setRenderTarget(u),(this.autoClear||f)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),s=0,a=p.length;s<a;s++)h=p[s],c=h.object,c.visible&&(yr(c,t),af(h));n.overrideMaterial?(o=n.overrideMaterial,hi(o),lt(g,t,l,e,o),lt(nt,t,l,e,o),fi(p,"",t,l,e,o)):(r.setBlending(THREE.NoBlending),lt(g,t,l,e,null),fi(p,"opaque",t,l,e,null),lt(nt,t,l,e,null),fi(p,"transparent",t,l,e,null));yu.render(n,t);pu.render(n,t,vi,yi);u&&u.generateMipmaps&&u.minFilter!==THREE.NearestFilter&&u.minFilter!==THREE.LinearFilter&&ae(u);r.setDepthTest(!0);r.setDepthWrite(!0);r.setColorWrite(!0)};this.renderImmediateObject=function(n,r,u,f,e){var o=ci(n,r,u,f,e);w="";i.setMaterialFaces(f);e.immediateRenderCallback?e.immediateRenderCallback(o,t,dt):e.render(function(n){i.renderBufferImmediate(n,o,f)})};b={};ei=0;lr={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(n,i){n===THREE.CullFaceNone?t.disable(t.CULL_FACE):(i===THREE.FrontFaceDirectionCW?t.frontFace(t.CW):t.frontFace(t.CCW),n===THREE.CullFaceBack?t.cullFace(t.BACK):n===THREE.CullFaceFront?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK),t.enable(t.CULL_FACE))};this.setMaterialFaces=function(n){r.setDoubleSided(n.side===THREE.DoubleSide);r.setFlipSided(n.side===THREE.BackSide)};this.uploadTexture=function(n){var u,e,r,o;n.__webglInit===undefined&&(n.__webglInit=!0,n.addEventListener("dispose",ui),n.__webglTexture=t.createTexture(),i.info.memory.textures++);t.bindTexture(t.TEXTURE_2D,n.__webglTexture);t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY);t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha);t.pixelStorei(t.UNPACK_ALIGNMENT,n.unpackAlignment);n.image=pr(n.image,eu);var s=n.image,l=THREE.Math.isPowerOfTwo(s.width)&&THREE.Math.isPowerOfTwo(s.height),f=c(n.format),h=c(n.type);if(vt(t.TEXTURE_2D,n,l),e=n.mipmaps,n instanceof THREE.DataTexture)if(e.length>0&&l){for(r=0,o=e.length;r<o;r++)u=e[r],t.texImage2D(t.TEXTURE_2D,r,f,u.width,u.height,0,f,h,u.data);n.generateMipmaps=!1}else t.texImage2D(t.TEXTURE_2D,0,f,s.width,s.height,0,f,h,s.data);else if(n instanceof THREE.CompressedTexture)for(r=0,o=e.length;r<o;r++)u=e[r],n.format!==THREE.RGBAFormat&&n.format!==THREE.RGBFormat?di().indexOf(f)>-1?t.compressedTexImage2D(t.TEXTURE_2D,r,f,u.width,u.height,0,u.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(t.TEXTURE_2D,r,f,u.width,u.height,0,f,h,u.data);else if(e.length>0&&l){for(r=0,o=e.length;r<o;r++)u=e[r],t.texImage2D(t.TEXTURE_2D,r,f,f,h,u);n.generateMipmaps=!1}else t.texImage2D(t.TEXTURE_2D,0,f,f,h,n.image);n.generateMipmaps&&l&&t.generateMipmap(t.TEXTURE_2D);n.needsUpdate=!1;n.onUpdate&&n.onUpdate()};this.setTexture=function(n,r){t.activeTexture(t.TEXTURE0+r);n.needsUpdate?i.uploadTexture(n):t.bindTexture(t.TEXTURE_2D,n.__webglTexture)};this.setRenderTarget=function(n){var h=n instanceof THREE.WebGLRenderTargetCube,r,u,o,s,l,a;if(n&&n.__webglFramebuffer===undefined){n.depthBuffer===undefined&&(n.depthBuffer=!0);n.stencilBuffer===undefined&&(n.stencilBuffer=!0);n.addEventListener("dispose",ir);n.__webglTexture=t.createTexture();i.info.memory.textures++;var f=THREE.Math.isPowerOfTwo(n.width)&&THREE.Math.isPowerOfTwo(n.height),e=c(n.format),v=c(n.type);if(h){for(n.__webglFramebuffer=[],n.__webglRenderbuffer=[],t.bindTexture(t.TEXTURE_CUBE_MAP,n.__webglTexture),vt(t.TEXTURE_CUBE_MAP,n,f),r=0;r<6;r++)n.__webglFramebuffer[r]=t.createFramebuffer(),n.__webglRenderbuffer[r]=t.createRenderbuffer(),t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,e,n.width,n.height,0,e,v,null),wr(n.__webglFramebuffer[r],n,t.TEXTURE_CUBE_MAP_POSITIVE_X+r),br(n.__webglRenderbuffer[r],n);f&&t.generateMipmap(t.TEXTURE_CUBE_MAP)}else n.__webglFramebuffer=t.createFramebuffer(),n.__webglRenderbuffer=n.shareDepthFrom?n.shareDepthFrom.__webglRenderbuffer:t.createRenderbuffer(),t.bindTexture(t.TEXTURE_2D,n.__webglTexture),vt(t.TEXTURE_2D,n,f),t.texImage2D(t.TEXTURE_2D,0,e,n.width,n.height,0,e,v,null),wr(n.__webglFramebuffer,n,t.TEXTURE_2D),n.shareDepthFrom?n.depthBuffer&&!n.stencilBuffer?t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,n.__webglRenderbuffer):n.depthBuffer&&n.stencilBuffer&&t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,n.__webglRenderbuffer):br(n.__webglRenderbuffer,n),f&&t.generateMipmap(t.TEXTURE_2D);h?t.bindTexture(t.TEXTURE_CUBE_MAP,null):t.bindTexture(t.TEXTURE_2D,null);t.bindRenderbuffer(t.RENDERBUFFER,null);t.bindFramebuffer(t.FRAMEBUFFER,null)}n?(u=h?n.__webglFramebuffer[n.activeCubeFace]:n.__webglFramebuffer,o=n.width,s=n.height,l=0,a=0):(u=null,o=ot,s=st,l=ft,a=et);u!==ut&&(t.bindFramebuffer(t.FRAMEBUFFER,u),t.viewport(l,a,o,s),ut=u);vi=o;yi=s};this.readRenderTargetPixels=function(n,i,r,u,f,e){if(!(n instanceof THREE.WebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}if(n.__webglFramebuffer){if(n.format!==THREE.RGBAFormat){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.");return}var o=!1;n.__webglFramebuffer!==ut&&(t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer),o=!0);t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE?t.readPixels(i,r,u,f,t.RGBA,t.UNSIGNED_BYTE,e):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");o&&t.bindFramebuffer(t.FRAMEBUFFER,ut)}};this.initMaterial=function(){THREE.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};this.addPrePlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};this.addPostPlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};this.updateShadowMap=function(){THREE.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}};THREE.WebGLRenderTarget=function(n,t,i){this.width=n;this.height=t;i=i||{};this.wrapS=i.wrapS!==undefined?i.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=i.wrapT!==undefined?i.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=i.magFilter!==undefined?i.magFilter:THREE.LinearFilter;this.minFilter=i.minFilter!==undefined?i.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=i.anisotropy!==undefined?i.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=i.format!==undefined?i.format:THREE.RGBAFormat;this.type=i.type!==undefined?i.type:THREE.UnsignedByteType;this.depthBuffer=i.depthBuffer!==undefined?i.depthBuffer:!0;this.stencilBuffer=i.stencilBuffer!==undefined?i.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=i.shareDepthFrom!==undefined?i.shareDepthFrom:null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(n,t){this.width=n;this.height=t},clone:function(){var n=new THREE.WebGLRenderTarget(this.width,this.height);return n.wrapS=this.wrapS,n.wrapT=this.wrapT,n.magFilter=this.magFilter,n.minFilter=this.minFilter,n.anisotropy=this.anisotropy,n.offset.copy(this.offset),n.repeat.copy(this.repeat),n.format=this.format,n.type=this.type,n.depthBuffer=this.depthBuffer,n.stencilBuffer=this.stencilBuffer,n.generateMipmaps=this.generateMipmaps,n.shareDepthFrom=this.shareDepthFrom,n},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(n,t,i){THREE.WebGLRenderTarget.call(this,n,t,i);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.WebGLExtensions=function(n){var t={};this.get=function(i){if(t[i]!==undefined)return t[i];var r;switch(i){case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return r===null&&THREE.warn("THREE.WebGLRenderer: "+i+" extension not supported."),t[i]=r,r}};THREE.WebGLProgram=function(){var n=0,t=function(n){var t,i,r=[];for(var u in n)(t=n[u],t!==!1)&&(i="#define "+u+" "+t,r.push(i));return r.join("\n")},i=function(n,t,i){for(var u,f={},r=0,e=i.length;r<e;r++)u=i[r],f[u]=n.getUniformLocation(t,u);return f},r=function(n,t,i){for(var u,f={},r=0,e=i.length;r<e;r++)u=i[r],f[u]=n.getAttribLocation(t,u);return f};return function(u,f,e,o){var a=u,s=a.context,et=e.defines,ot=e.__webglShader.uniforms,st=e.attributes,ht=e.__webglShader.vertexShader,ct=e.__webglShader.fragmentShader,y=e.index0AttributeName,v,b,k,d,h,ut,l,ft;y===undefined&&o.morphTargets===!0&&(y="position");v="SHADOWMAP_TYPE_BASIC";o.shadowMapType===THREE.PCFShadowMap?v="SHADOWMAP_TYPE_PCF":o.shadowMapType===THREE.PCFSoftShadowMap&&(v="SHADOWMAP_TYPE_PCF_SOFT");var p="ENVMAP_TYPE_CUBE",g="ENVMAP_MODE_REFLECTION",w="ENVMAP_BLENDING_MULTIPLY";if(o.envMap){switch(e.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:p="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:p="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:p="ENVMAP_TYPE_SPHERE"}switch(e.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:g="ENVMAP_MODE_REFRACTION"}switch(e.combine){case THREE.MultiplyOperation:w="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:w="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:w="ENVMAP_BLENDING_ADD"}}var it=u.gammaFactor>0?u.gammaFactor:1,rt=t(et),c=s.createProgram(),nt,tt;e instanceof THREE.RawShaderMaterial?(nt="",tt=""):(nt=["precision "+o.precision+" float;","precision "+o.precision+" int;",rt,o.supportsVertexTextures?"#define VERTEX_TEXTURES":"",a.gammaInput?"#define GAMMA_INPUT":"",a.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+it,"#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,"#define MAX_BONES "+o.maxBones,o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+g:"",o.lightMap?"#define USE_LIGHTMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexColors?"#define USE_COLOR":"",o.flatShading?"#define FLAT_SHADED":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals?"#define USE_MORPHNORMALS":"",o.wrapAround?"#define WRAP_AROUND":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif",""].join("\n"),tt=["precision "+o.precision+" float;","precision "+o.precision+" int;",o.bumpMap||o.normalMap||o.flatShading?"#extension GL_OES_standard_derivatives : enable":"",rt,"#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,o.alphaTest?"#define ALPHATEST "+o.alphaTest:"",a.gammaInput?"#define GAMMA_INPUT":"",a.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+it,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+p:"",o.envMap?"#define "+g:"",o.envMap?"#define "+w:"",o.lightMap?"#define USE_LIGHTMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexColors?"#define USE_COLOR":"",o.flatShading?"#define FLAT_SHADED":"",o.metal?"#define METAL":"",o.wrapAround?"#define WRAP_AROUND":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));b=new THREE.WebGLShader(s,s.VERTEX_SHADER,nt+ht);k=new THREE.WebGLShader(s,s.FRAGMENT_SHADER,tt+ct);s.attachShader(c,b);s.attachShader(c,k);y!==undefined&&s.bindAttribLocation(c,0,y);s.linkProgram(c);d=s.getProgramInfoLog(c);s.getProgramParameter(c,s.LINK_STATUS)===!1&&THREE.error("THREE.WebGLProgram: shader error: "+s.getError(),"gl.VALIDATE_STATUS",s.getProgramParameter(c,s.VALIDATE_STATUS),"gl.getPRogramInfoLog",d);d!==""&&THREE.warn("THREE.WebGLProgram: gl.getProgramInfoLog()"+d);s.deleteShader(b);s.deleteShader(k);h=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];o.useVertexTexture?(h.push("boneTexture"),h.push("boneTextureWidth"),h.push("boneTextureHeight")):h.push("boneGlobalMatrices");o.logarithmicDepthBuffer&&h.push("logDepthBufFC");for(ut in ot)h.push(ut);for(this.uniforms=i(s,c,h),h=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],l=0;l<o.maxMorphTargets;l++)h.push("morphTarget"+l);for(l=0;l<o.maxMorphNormals;l++)h.push("morphNormal"+l);for(ft in st)h.push(ft);return this.attributes=r(s,c,h),this.attributesKeys=Object.keys(this.attributes),this.id=n++,this.code=f,this.usedTimes=1,this.program=c,this.vertexShader=b,this.fragmentShader=k,this}}();THREE.WebGLShader=function(){var n=function(n){for(var i=n.split("\n"),t=0;t<i.length;t++)i[t]=t+1+": "+i[t];return i.join("\n")};return function(t,i,r){var u=t.createShader(i);return t.shaderSource(u,r),t.compileShader(u),t.getShaderParameter(u,t.COMPILE_STATUS)===!1&&THREE.error("THREE.WebGLShader: Shader couldn't compile."),t.getShaderInfoLog(u)!==""&&THREE.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(u),n(r)),u}}();THREE.WebGLState=function(n,t){var r=new Uint8Array(16),i=new Uint8Array(16),u=null,f=null,e=null,o=null,s=null,h=null,c=null,l=null,a=null,v=null,y=null,p=null,w=null,b=null,k=null,d=null;this.initAttributes=function(){for(var n=0,t=r.length;n<t;n++)r[n]=0};this.enableAttribute=function(t){r[t]=1;i[t]===0&&(n.enableVertexAttribArray(t),i[t]=1)};this.disableUnusedAttributes=function(){for(var t=0,u=i.length;t<u;t++)i[t]!==r[t]&&(n.disableVertexAttribArray(t),i[t]=0)};this.setBlending=function(i,r,l,a,v,y,p){i!==u&&(i===THREE.NoBlending?n.disable(n.BLEND):i===THREE.AdditiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,n.ONE)):i===THREE.SubtractiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR)):i===THREE.MultiplyBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.SRC_COLOR)):i===THREE.CustomBlending?n.enable(n.BLEND):(n.enable(n.BLEND),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA)),u=i);i===THREE.CustomBlending?(v=v||r,y=y||l,p=p||a,(r!==f||v!==s)&&(n.blendEquationSeparate(t(r),t(v)),f=r,s=v),(l!==e||a!==o||y!==h||p!==c)&&(n.blendFuncSeparate(t(l),t(a),t(y),t(p)),e=l,o=a,h=y,c=p)):(f=null,e=null,o=null,s=null,h=null,c=null)};this.setDepthTest=function(t){l!==t&&(t?n.enable(n.DEPTH_TEST):n.disable(n.DEPTH_TEST),l=t)};this.setDepthWrite=function(t){a!==t&&(n.depthMask(t),a=t)};this.setColorWrite=function(t){v!==t&&(n.colorMask(t,t,t,t),v=t)};this.setDoubleSided=function(t){y!==t&&(t?n.disable(n.CULL_FACE):n.enable(n.CULL_FACE),y=t)};this.setFlipSided=function(t){p!==t&&(t?n.frontFace(n.CW):n.frontFace(n.CCW),p=t)};this.setLineWidth=function(t){t!==w&&(n.lineWidth(t),w=t)};this.setPolygonOffset=function(t,i,r){b!==t&&(t?n.enable(n.POLYGON_OFFSET_FILL):n.disable(n.POLYGON_OFFSET_FILL),b=t);t&&(k!==i||d!==r)&&(n.polygonOffset(i,r),k=i,d=r)};this.reset=function(){for(var n=0;n<i.length;n++)i[n]=0;u=null;l=null;a=null;v=null;y=null;p=null}};THREE.LensFlarePlugin=function(n,t){function a(t){var r=i.createProgram(),u=i.createShader(i.FRAGMENT_SHADER),f=i.createShader(i.VERTEX_SHADER),e="precision "+n.getPrecision()+" float;\n";return i.shaderSource(u,e+t.fragmentShader),i.shaderSource(f,e+t.vertexShader),i.compileShader(u),i.compileShader(f),i.attachShader(r,u),i.attachShader(r,f),i.linkProgram(r),r}var i=n.context,o,s,r,f,u,h,e,c,l=function(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),l=new Uint16Array([0,1,2,0,2,3]),n;o=i.createBuffer();s=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,o);i.bufferData(i.ARRAY_BUFFER,t,i.STATIC_DRAW);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,s);i.bufferData(i.ELEMENT_ARRAY_BUFFER,l,i.STATIC_DRAW);e=i.createTexture();c=i.createTexture();i.bindTexture(i.TEXTURE_2D,e);i.texImage2D(i.TEXTURE_2D,0,i.RGB,16,16,0,i.RGB,i.UNSIGNED_BYTE,null);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST);i.bindTexture(i.TEXTURE_2D,c);i.texImage2D(i.TEXTURE_2D,0,i.RGBA,16,16,0,i.RGBA,i.UNSIGNED_BYTE,null);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST);h=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;n=h?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"};r=a(n);f={vertex:i.getAttribLocation(r,"position"),uv:i.getAttribLocation(r,"uv")};u={renderType:i.getUniformLocation(r,"renderType"),map:i.getUniformLocation(r,"map"),occlusionMap:i.getUniformLocation(r,"occlusionMap"),opacity:i.getUniformLocation(r,"opacity"),color:i.getUniformLocation(r,"color"),scale:i.getUniformLocation(r,"scale"),rotation:i.getUniformLocation(r,"rotation"),screenPosition:i.getUniformLocation(r,"screenPosition")}};this.render=function(a,v,y,p){var it,ot,k,rt,st,w;if(t.length!==0){var tt=new THREE.Vector3,ut=p/y,ft=y*.5,et=p*.5,g=16/p,nt=new THREE.Vector2(g*ut,g),b=new THREE.Vector3(1,1,0),d=new THREE.Vector2(1,1);for(r===undefined&&l(),i.useProgram(r),i.enableVertexAttribArray(f.vertex),i.enableVertexAttribArray(f.uv),i.uniform1i(u.occlusionMap,0),i.uniform1i(u.map,1),i.bindBuffer(i.ARRAY_BUFFER,o),i.vertexAttribPointer(f.vertex,2,i.FLOAT,!1,16,0),i.vertexAttribPointer(f.uv,2,i.FLOAT,!1,16,8),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,s),i.disable(i.CULL_FACE),i.depthMask(!1),it=0,ot=t.length;it<ot;it++)if(g=16/p,nt.set(g*ut,g),k=t[it],tt.set(k.matrixWorld.elements[12],k.matrixWorld.elements[13],k.matrixWorld.elements[14]),tt.applyMatrix4(v.matrixWorldInverse),tt.applyProjection(v.projectionMatrix),b.copy(tt),d.x=b.x*ft+ft,d.y=b.y*et+et,h||d.x>0&&d.x<y&&d.y>0&&d.y<p)for(i.activeTexture(i.TEXTURE1),i.bindTexture(i.TEXTURE_2D,e),i.copyTexImage2D(i.TEXTURE_2D,0,i.RGB,d.x-8,d.y-8,16,16,0),i.uniform1i(u.renderType,0),i.uniform2f(u.scale,nt.x,nt.y),i.uniform3f(u.screenPosition,b.x,b.y,b.z),i.disable(i.BLEND),i.enable(i.DEPTH_TEST),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0),i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,c),i.copyTexImage2D(i.TEXTURE_2D,0,i.RGBA,d.x-8,d.y-8,16,16,0),i.uniform1i(u.renderType,1),i.disable(i.DEPTH_TEST),i.activeTexture(i.TEXTURE1),i.bindTexture(i.TEXTURE_2D,e),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0),k.positionScreen.copy(b),k.customUpdateCallback?k.customUpdateCallback(k):k.updateLensFlares(),i.uniform1i(u.renderType,2),i.enable(i.BLEND),rt=0,st=k.lensFlares.length;rt<st;rt++)w=k.lensFlares[rt],w.opacity>.001&&w.scale>.001&&(b.x=w.x,b.y=w.y,b.z=w.z,g=w.size*w.scale/p,nt.x=g*ut,nt.y=g,i.uniform3f(u.screenPosition,b.x,b.y,b.z),i.uniform2f(u.scale,nt.x,nt.y),i.uniform1f(u.rotation,w.rotation),i.uniform1f(u.opacity,w.opacity),i.uniform3f(u.color,w.color.r,w.color.g,w.color.b),n.state.setBlending(w.blending,w.blendEquation,w.blendSrc,w.blendDst),n.setTexture(w.texture,1),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0));i.enable(i.CULL_FACE);i.enable(i.DEPTH_TEST);i.depthMask(!0);n.resetGLState()}}};THREE.ShadowMapPlugin=function(n,t,i,r){function b(n,t,r){var f,o,u,e;if(t.visible){if(f=i[t.id],f&&t.castShadow&&(t.frustumCulled===!1||y.intersectsObject(t)===!0))for(u=0,e=f.length;u<e;u++)o=f[u],t._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,t.matrixWorld),h.push(o);for(u=0,e=t.children.length;u<e;u++)b(n,t.children[u],r)}}function k(n,t){var i=new THREE.DirectionalLight,o,r,u,f,e;for(i.isVirtual=!0,i.onlyShadow=!0,i.castShadow=!0,i.shadowCameraNear=n.shadowCameraNear,i.shadowCameraFar=n.shadowCameraFar,i.shadowCameraLeft=n.shadowCameraLeft,i.shadowCameraRight=n.shadowCameraRight,i.shadowCameraBottom=n.shadowCameraBottom,i.shadowCameraTop=n.shadowCameraTop,i.shadowCameraVisible=n.shadowCameraVisible,i.shadowDarkness=n.shadowDarkness,i.shadowBias=n.shadowCascadeBias[t],i.shadowMapWidth=n.shadowCascadeWidth[t],i.shadowMapHeight=n.shadowCascadeHeight[t],i.pointsWorld=[],i.pointsFrustum=[],o=i.pointsWorld,r=i.pointsFrustum,u=0;u<8;u++)o[u]=new THREE.Vector3,r[u]=new THREE.Vector3;return f=n.shadowCascadeNearZ[t],e=n.shadowCascadeFarZ[t],r[0].set(-1,-1,f),r[1].set(1,-1,f),r[2].set(-1,1,f),r[3].set(1,1,f),r[4].set(-1,-1,e),r[5].set(1,-1,e),r[6].set(-1,1,e),r[7].set(1,1,e),i}function d(n,t){var i=n.shadowCascadeArray[t];i.position.copy(n.position);i.target.position.copy(n.target.position);i.lookAt(i.target);i.shadowCameraVisible=n.shadowCameraVisible;i.shadowDarkness=n.shadowDarkness;i.shadowBias=n.shadowCascadeBias[t];var u=n.shadowCascadeNearZ[t],f=n.shadowCascadeFarZ[t],r=i.pointsFrustum;r[0].z=u;r[1].z=u;r[2].z=u;r[3].z=u;r[4].z=f;r[5].z=f;r[6].z=f;r[7].z=f}function g(n,t){var r=t.shadowCamera,o=t.pointsFrustum,s=t.pointsWorld,u,i;for(f.set(Infinity,Infinity,Infinity),e.set(- Infinity,- Infinity,- Infinity),u=0;u<8;u++)i=s[u],i.copy(o[u]),i.unproject(n),i.applyMatrix4(r.matrixWorldInverse),i.x<f.x&&(f.x=i.x),i.x>e.x&&(e.x=i.x),i.y<f.y&&(f.y=i.y),i.y>e.y&&(e.y=i.y),i.z<f.z&&(f.z=i.z),i.z>e.z&&(e.z=i.z);r.left=f.x;r.right=e.x;r.top=e.y;r.bottom=f.y;r.updateProjectionMatrix()}function nt(n){return n.material instanceof THREE.MeshFaceMaterial?n.material.materials[0]:n.material}var u=n.context,s,l,a,v,y=new THREE.Frustum,p=new THREE.Matrix4,f=new THREE.Vector3,e=new THREE.Vector3,w=new THREE.Vector3,h=[],o=THREE.ShaderLib.depthRGBA,c=THREE.UniformsUtils.clone(o.uniforms);s=new THREE.ShaderMaterial({uniforms:c,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader});l=new THREE.ShaderMaterial({uniforms:c,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,morphTargets:!0});a=new THREE.ShaderMaterial({uniforms:c,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,skinning:!0});v=new THREE.ShaderMaterial({uniforms:c,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,morphTargets:!0,skinning:!0});s._shadowPass=!0;l._shadowPass=!0;a._shadowPass=!0;v._shadowPass=!0;this.render=function(i,f){var ut,et,vt,gt,yt,kt,ni,pt,ti;if(n.shadowMapEnabled!==!1){var tt,ot,it,st,rt,dt,ht,o,ct,wt,ft,c,e,lt=[],at=0,bt=null;for(u.clearColor(1,1,1,1),u.disable(u.BLEND),u.enable(u.CULL_FACE),u.frontFace(u.CCW),n.shadowMapCullFace===THREE.CullFaceFront?u.cullFace(u.FRONT):u.cullFace(u.BACK),n.state.setDepthTest(!0),tt=0,ot=t.length;tt<ot;tt++)if(e=t[tt],e.castShadow)if(e instanceof THREE.DirectionalLight&&e.shadowCascade)for(rt=0;rt<e.shadowCascadeCount;rt++)e.shadowCascadeArray[rt]?ut=e.shadowCascadeArray[rt]:(ut=k(e,rt),ut.originalCamera=f,et=new THREE.Gyroscope,et.position.copy(e.shadowCascadeOffset),et.add(ut),et.add(ut.target),f.add(et),e.shadowCascadeArray[rt]=ut),d(e,rt),lt[at]=ut,at++;else lt[at]=e,at++;for(tt=0,ot=lt.length;tt<ot;tt++){if(e=lt[tt],e.shadowMap||(vt=THREE.LinearFilter,n.shadowMapType===THREE.PCFSoftShadowMap&&(vt=THREE.NearestFilter),gt={minFilter:vt,magFilter:vt,format:THREE.RGBAFormat},e.shadowMap=new THREE.WebGLRenderTarget(e.shadowMapWidth,e.shadowMapHeight,gt),e.shadowMapSize=new THREE.Vector2(e.shadowMapWidth,e.shadowMapHeight),e.shadowMatrix=new THREE.Matrix4),!e.shadowCamera){if(e instanceof THREE.SpotLight)e.shadowCamera=new THREE.PerspectiveCamera(e.shadowCameraFov,e.shadowMapWidth/e.shadowMapHeight,e.shadowCameraNear,e.shadowCameraFar);else if(e instanceof THREE.DirectionalLight)e.shadowCamera=new THREE.OrthographicCamera(e.shadowCameraLeft,e.shadowCameraRight,e.shadowCameraTop,e.shadowCameraBottom,e.shadowCameraNear,e.shadowCameraFar);else{THREE.error("THREE.ShadowMapPlugin: Unsupported light type for shadow",e);continue}i.add(e.shadowCamera);i.autoUpdate===!0&&i.updateMatrixWorld()}for(e.shadowCameraVisible&&!e.cameraHelper&&(e.cameraHelper=new THREE.CameraHelper(e.shadowCamera),i.add(e.cameraHelper)),e.isVirtual&&ut.originalCamera==f&&g(f,e),dt=e.shadowMap,ht=e.shadowMatrix,o=e.shadowCamera,o.position.setFromMatrixPosition(e.matrixWorld),w.setFromMatrixPosition(e.target.matrixWorld),o.lookAt(w),o.updateMatrixWorld(),o.matrixWorldInverse.getInverse(o.matrixWorld),e.cameraHelper&&(e.cameraHelper.visible=e.shadowCameraVisible),e.shadowCameraVisible&&e.cameraHelper.update(),ht.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),ht.multiply(o.projectionMatrix),ht.multiply(o.matrixWorldInverse),p.multiplyMatrices(o.projectionMatrix,o.matrixWorldInverse),y.setFromMatrix(p),n.setRenderTarget(dt),n.clear(),h.length=0,b(i,i,o),it=0,st=h.length;it<st;it++)ft=h[it],c=ft.object,ct=ft.buffer,yt=nt(c),kt=c.geometry.morphTargets!==undefined&&c.geometry.morphTargets.length>0&&yt.morphTargets,ni=c instanceof THREE.SkinnedMesh&&yt.skinning,wt=c.customDepthMaterial?c.customDepthMaterial:ni?kt?v:a:kt?l:s,n.setMaterialFaces(yt),ct instanceof THREE.BufferGeometry?n.renderBufferDirect(o,t,bt,wt,ct,c):n.renderBuffer(o,t,bt,wt,ct,c);for(it=0,st=r.length;it<st;it++)ft=r[it],c=ft.object,c.visible&&c.castShadow&&(c._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,c.matrixWorld),n.renderImmediateObject(o,t,bt,s,c))}pt=n.getClearColor();ti=n.getClearAlpha();u.clearColor(pt.r,pt.g,pt.b,ti);u.enable(u.BLEND);n.shadowMapCullFace===THREE.CullFaceFront&&u.cullFace(u.BACK);n.resetGLState()}}};THREE.SpritePlugin=function(n,t){function v(){var t=i.createProgram(),r=i.createShader(i.VERTEX_SHADER),u=i.createShader(i.FRAGMENT_SHADER);return i.shaderSource(r,["precision "+n.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),i.shaderSource(u,["precision "+n.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),i.compileShader(r),i.compileShader(u),i.attachShader(t,r),i.attachShader(t,u),i.linkProgram(t),t}function y(n,t){return n.z!==t.z?t.z-n.z:t.id-n.id}var i=n.context,e,o,u,f,r,s,c=new THREE.Vector3,l=new THREE.Quaternion,h=new THREE.Vector3,a=function(){var h=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),c=new Uint16Array([0,1,2,0,2,3]),n,t;e=i.createBuffer();o=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,e);i.bufferData(i.ARRAY_BUFFER,h,i.STATIC_DRAW);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,o);i.bufferData(i.ELEMENT_ARRAY_BUFFER,c,i.STATIC_DRAW);u=v();f={position:i.getAttribLocation(u,"position"),uv:i.getAttribLocation(u,"uv")};r={uvOffset:i.getUniformLocation(u,"uvOffset"),uvScale:i.getUniformLocation(u,"uvScale"),rotation:i.getUniformLocation(u,"rotation"),scale:i.getUniformLocation(u,"scale"),color:i.getUniformLocation(u,"color"),map:i.getUniformLocation(u,"map"),opacity:i.getUniformLocation(u,"opacity"),modelViewMatrix:i.getUniformLocation(u,"modelViewMatrix"),projectionMatrix:i.getUniformLocation(u,"projectionMatrix"),fogType:i.getUniformLocation(u,"fogType"),fogDensity:i.getUniformLocation(u,"fogDensity"),fogNear:i.getUniformLocation(u,"fogNear"),fogFar:i.getUniformLocation(u,"fogFar"),fogColor:i.getUniformLocation(u,"fogColor"),alphaTest:i.getUniformLocation(u,"alphaTest")};n=document.createElement("canvas");n.width=8;n.height=8;t=n.getContext("2d");t.fillStyle="white";t.fillRect(0,0,8,8);s=new THREE.Texture(n);s.needsUpdate=!0};this.render=function(v,p){var rt,d,it,k,w,nt;if(t.length!==0){u===undefined&&a();i.useProgram(u);i.enableVertexAttribArray(f.position);i.enableVertexAttribArray(f.uv);i.disable(i.CULL_FACE);i.enable(i.BLEND);i.bindBuffer(i.ARRAY_BUFFER,e);i.vertexAttribPointer(f.position,2,i.FLOAT,!1,16,0);i.vertexAttribPointer(f.uv,2,i.FLOAT,!1,16,8);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,o);i.uniformMatrix4fv(r.projectionMatrix,!1,p.projectionMatrix.elements);i.activeTexture(i.TEXTURE0);i.uniform1i(r.map,0);var g=0,tt=0,b=v.fog;for(b?(i.uniform3f(r.fogColor,b.color.r,b.color.g,b.color.b),b instanceof THREE.Fog?(i.uniform1f(r.fogNear,b.near),i.uniform1f(r.fogFar,b.far),i.uniform1i(r.fogType,1),g=1,tt=1):b instanceof THREE.FogExp2&&(i.uniform1f(r.fogDensity,b.density),i.uniform1i(r.fogType,2),g=2,tt=2)):(i.uniform1i(r.fogType,0),g=0,tt=0),d=0,it=t.length;d<it;d++)k=t[d],k._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,k.matrixWorld),k.z=-k._modelViewMatrix.elements[14];for(t.sort(y),rt=[],d=0,it=t.length;d<it;d++)k=t[d],w=k.material,i.uniform1f(r.alphaTest,w.alphaTest),i.uniformMatrix4fv(r.modelViewMatrix,!1,k._modelViewMatrix.elements),k.matrixWorld.decompose(c,l,h),rt[0]=h.x,rt[1]=h.y,nt=0,v.fog&&w.fog&&(nt=tt),g!==nt&&(i.uniform1i(r.fogType,nt),g=nt),w.map!==null?(i.uniform2f(r.uvOffset,w.map.offset.x,w.map.offset.y),i.uniform2f(r.uvScale,w.map.repeat.x,w.map.repeat.y)):(i.uniform2f(r.uvOffset,0,0),i.uniform2f(r.uvScale,1,1)),i.uniform1f(r.opacity,w.opacity),i.uniform3f(r.color,w.color.r,w.color.g,w.color.b),i.uniform1f(r.rotation,w.rotation),i.uniform2fv(r.scale,rt),n.state.setBlending(w.blending,w.blendEquation,w.blendSrc,w.blendDst),n.state.setDepthTest(w.depthTest),n.state.setDepthWrite(w.depthWrite),w.map&&w.map.image&&w.map.image.width?n.setTexture(w.map,0):n.setTexture(s,0),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0);i.enable(i.CULL_FACE);n.resetGLState()}}};THREE.GeometryUtils={merge:function(n,t,i){THREE.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry);n.merge(t,r,i)},center:function(n){return THREE.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),n.center()}};THREE.ImageUtils={crossOrigin:undefined,loadTexture:function(n,t,i,r){var f=new THREE.ImageLoader,u;return f.crossOrigin=this.crossOrigin,u=new THREE.Texture(undefined,t),f.load(n,function(n){u.image=n;u.needsUpdate=!0;i&&i(u)},undefined,function(n){r&&r(n)}),u.sourceFile=n,u},loadTextureCube:function(n,t,i,r){var o=new THREE.ImageLoader,u,e,s,f,h;for(o.crossOrigin=this.crossOrigin,u=new THREE.CubeTexture([],t),u.flipY=!1,e=0,s=function(t){o.load(n[t],function(n){u.images[t]=n;e+=1;e===6&&(u.needsUpdate=!0,i&&i(u))},undefined,r)},f=0,h=n.length;f<h;++f)s(f);return u},loadCompressedTexture:function(){THREE.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){THREE.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(n,t){var ut=function(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]},tt=function(n,t){return[n[0]-t[0],n[1]-t[1],n[2]-t[2]]},ft=function(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);return[n[0]/t,n[1]/t,n[2]/t]},l,r,u,h,nt,p,w,o,e,a;t=t|1;var i=n.width,c=n.height,v=document.createElement("canvas");v.width=i;v.height=c;l=v.getContext("2d");l.drawImage(n,0,0);var s=l.getImageData(0,0,i,c).data,it=l.createImageData(i,c),y=it.data;for(r=0;r<i;r++)for(u=0;u<c;u++){var b=u-1<0?0:u-1,k=u+1>c-1?c-1:u+1,d=r-1<0?0:r-1,g=r+1>i-1?i-1:r+1,f=[],rt=[0,0,s[(u*i+r)*4]/255*t];for(f.push([-1,0,s[(u*i+d)*4]/255*t]),f.push([-1,-1,s[(b*i+d)*4]/255*t]),f.push([0,-1,s[(b*i+r)*4]/255*t]),f.push([1,-1,s[(b*i+g)*4]/255*t]),f.push([1,0,s[(u*i+g)*4]/255*t]),f.push([1,1,s[(k*i+g)*4]/255*t]),f.push([0,1,s[(k*i+r)*4]/255*t]),f.push([-1,1,s[(k*i+d)*4]/255*t]),h=[],nt=f.length,e=0;e<nt;e++)p=f[e],w=f[(e+1)%nt],p=tt(p,rt),w=tt(w,rt),h.push(ft(ut(p,w)));for(o=[0,0,0],e=0;e<h.length;e++)o[0]+=h[e][0],o[1]+=h[e][1],o[2]+=h[e][2];o[0]/=h.length;o[1]/=h.length;o[2]/=h.length;a=(u*i+r)*4;y[a]=(o[0]+1)/2*255|0;y[a+1]=(o[1]+1)/2*255|0;y[a+2]=o[2]*255|0;y[a+3]=255}return l.putImageData(it,0,0),v},generateDataTexture:function(n,t,i){for(var f,e=n*t,u=new Uint8Array(3*e),o=Math.floor(i.r*255),s=Math.floor(i.g*255),h=Math.floor(i.b*255),r=0;r<e;r++)u[r*3]=o,u[r*3+1]=s,u[r*3+2]=h;return f=new THREE.DataTexture(u,n,t,THREE.RGBFormat),f.needsUpdate=!0,f}};THREE.SceneUtils={createMultiMaterialObject:function(n,t){for(var r=new THREE.Object3D,i=0,u=t.length;i<u;i++)r.add(new THREE.Mesh(n,t[i]));return r},detach:function(n,t,i){n.applyMatrix(t.matrixWorld);t.remove(n);i.add(n)},attach:function(n,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld);n.applyMatrix(r);t.remove(n);i.add(n)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(n){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing.";}},loadFace:function(n){var t=n.familyName.toLowerCase(),i=this;return i.faces[t]=i.faces[t]||{},i.faces[t][n.cssFontWeight]=i.faces[t][n.cssFontWeight]||{},i.faces[t][n.cssFontWeight][n.cssFontStyle]=n,i.faces[t][n.cssFontWeight][n.cssFontStyle]=n,n},drawText:function(n){for(var u=this.getFace(),h=this.size/u.resolution,i=0,f=String(n).split(""),c=f.length,e=[],o,r,s,t=0;t<c;t++)o=new THREE.Path,r=this.extractGlyphPoints(f[t],u,h,i,o),i+=r.offset,e.push(r.path);return s=i/2,{paths:e,offset:s}},extractGlyphPoints:function(n,t,i,r,u){var k=[],f,o,l,e,ut,ft,s,h,d,g,a,v,nt,tt,y,p,it,rt,c,w=t.glyphs[n]||t.glyphs["?"],b;if(w){if(w.o)for(e=w._cachedOutline||(w._cachedOutline=w.o.split(" ")),ft=e.length,s=i,h=i,f=0;f<ft;){ut=e[f++];switch(ut){case"m":d=e[f++]*s+r;g=e[f++]*h;u.moveTo(d,g);break;case"l":d=e[f++]*s+r;g=e[f++]*h;u.lineTo(d,g);break;case"q":if(a=e[f++]*s+r,v=e[f++]*h,y=e[f++]*s+r,p=e[f++]*h,u.quadraticCurveTo(y,p,a,v),c=k[k.length-1],c)for(nt=c.x,tt=c.y,o=1,l=this.divisions;o<=l;o++)b=o/l,THREE.Shape.Utils.b2(b,nt,y,a),THREE.Shape.Utils.b2(b,tt,p,v);break;case"b":if(a=e[f++]*s+r,v=e[f++]*h,y=e[f++]*s+r,p=e[f++]*h,it=e[f++]*s+r,rt=e[f++]*h,u.bezierCurveTo(y,p,it,rt,a,v),c=k[k.length-1],c)for(nt=c.x,tt=c.y,o=1,l=this.divisions;o<=l;o++)b=o/l,THREE.Shape.Utils.b3(b,nt,y,it,a),THREE.Shape.Utils.b3(b,tt,p,rt,v)}}return{offset:w.ha*i,path:u}}}};THREE.FontUtils.generateShapes=function(n,t){var i,f;t=t||{};var e=t.size!==undefined?t.size:100,o=t.curveSegments!==undefined?t.curveSegments:4,s=t.font!==undefined?t.font:"helvetiker",h=t.weight!==undefined?t.weight:"normal",c=t.style!==undefined?t.style:"normal";THREE.FontUtils.size=e;THREE.FontUtils.divisions=o;THREE.FontUtils.face=s;THREE.FontUtils.weight=h;THREE.FontUtils.style=c;var l=THREE.FontUtils.drawText(n),r=l.paths,u=[];for(i=0,f=r.length;i<f;i++)Array.prototype.push.apply(u,r[i].toShapes());return u},function(n){var t=1e-10,r=function(n,t){var h=n.length,e,v,p,w,b,y,c;if(h<3)return null;var l=[],f=[],a=[],o,r,s;if(i(n)>0)for(r=0;r<h;r++)f[r]=r;else for(r=0;r<h;r++)f[r]=h-1-r;for(e=h,v=2*e,r=e-1;e>2;){if(v--<=0)return(THREE.warn("THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()"),t)?a:l;if(o=r,e<=o&&(o=0),r=o+1,e<=r&&(r=0),s=r+1,e<=s&&(s=0),u(n,o,r,s,e,f)){for(p=f[o],w=f[r],b=f[s],l.push([n[p],n[w],n[b]]),a.push([f[o],f[r],f[s]]),y=r,c=r+1;c<e;y++,c++)f[y]=f[c];e--;v=2*e}}return t?a:l},i=function(n){for(var r=n.length,u=0,i=r-1,t=0;t<r;i=t++)u+=n[i].x*n[t].y-n[t].x*n[i].y;return u*.5},u=function(n,i,r,u,f,e){var p,o,s,l,a,v,y,h,c,w,b,k,d,g,nt,tt,it,rt,ut,ft,et,ot,st,ht;if(o=n[e[i]].x,s=n[e[i]].y,l=n[e[r]].x,a=n[e[r]].y,v=n[e[u]].x,y=n[e[u]].y,t>(l-o)*(y-s)-(a-s)*(v-o))return!1;for(w=v-l,b=y-a,k=o-v,d=s-y,g=l-o,nt=a-s,p=0;p<f;p++)if((h=n[e[p]].x,c=n[e[p]].y,(h!==o||c!==s)&&(h!==l||c!==a)&&(h!==v||c!==y))&&(tt=h-o,it=c-s,rt=h-l,ut=c-a,ft=h-v,et=c-y,ht=w*ut-b*rt,ot=g*it-nt*tt,st=k*et-d*ft,ht>=-t&&st>=-t&&ot>=-t))return!1;return!0};return n.Triangulate=r,n.Triangulate.area=i,n}(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Audio=function(n){THREE.Object3D.call(this);this.type="Audio";this.context=n.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain);this.autoplay=!1;this.startTime=0;this.isPlaying=!1};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;THREE.Audio.prototype.load=function(n){var t=this,i=new XMLHttpRequest;return i.open("GET",n,!0),i.responseType="arraybuffer",i.onload=function(){t.context.decodeAudioData(this.response,function(n){t.source.buffer=n;t.autoplay&&t.play()})},i.send(),this};THREE.Audio.prototype.play=function(){if(this.isPlaying===!0){THREE.warn("THREE.Audio: Audio is already playing.");return}var n=this.context.createBufferSource();n.buffer=this.source.buffer;n.loop=this.source.loop;n.onended=this.source.onended;n.connect(this.panner);n.start(0,this.startTime);this.isPlaying=!0;this.source=n};THREE.Audio.prototype.pause=function(){this.source.stop();this.startTime=this.context.currentTime};THREE.Audio.prototype.stop=function(){this.source.stop();this.startTime=0};THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1};THREE.Audio.prototype.setLoop=function(n){this.source.loop=n};THREE.Audio.prototype.setRefDistance=function(n){this.panner.refDistance=n};THREE.Audio.prototype.setRolloffFactor=function(n){this.panner.rolloffFactor=n};THREE.Audio.prototype.setVolume=function(n){this.gain.gain.value=n};THREE.Audio.prototype.updateMatrixWorld=function(){var n=new THREE.Vector3;return function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t);n.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(n.x,n.y,n.z)}}();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=new(window.AudioContext||window.webkitAudioContext)};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;THREE.AudioListener.prototype.updateMatrixWorld=function(){var n=new THREE.Vector3,r=new THREE.Quaternion,f=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3,u=new THREE.Vector3;return function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);var o=this.context.listener,s=this.up;this.matrixWorld.decompose(n,r,f);t.set(0,0,-1).applyQuaternion(r);i.subVectors(n,u);o.setPosition(n.x,n.y,n.z);o.setOrientation(t.x,t.y,t.z,s.x,s.y,s.z);o.setVelocity(i.x,i.y,i.z);u.copy(n)}}();THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){return THREE.warn("THREE.Curve: Warning, getPoint() not implemented!"),null};THREE.Curve.prototype.getPointAt=function(n){var t=this.getUtoTmapping(n);return this.getPoint(t)};THREE.Curve.prototype.getPoints=function(n){n||(n=5);for(var i=[],t=0;t<=n;t++)i.push(this.getPoint(t/n));return i};THREE.Curve.prototype.getSpacedPoints=function(n){n||(n=5);for(var i=[],t=0;t<=n;t++)i.push(this.getPointAt(t/n));return i};THREE.Curve.prototype.getLength=function(){var n=this.getLengths();return n[n.length-1]};THREE.Curve.prototype.getLengths=function(n){if(n||(n=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==n+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],r,u=this.getPoint(0),i,f=0;for(t.push(0),i=1;i<=n;i++)r=this.getPoint(i/n),f+=r.distanceTo(u),t.push(f),u=r;return this.cacheArcLengths=t,t};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(n,t){var r=this.getLengths(),i=0,e=r.length,o,f,u,s;for(o=t?t:n*r[e-1],f=0,u=e-1;f<=u;)if(i=Math.floor(f+(u-f)/2),s=r[i]-o,s<0)f=i+1;else if(s>0)u=i-1;else{u=i;break}if(i=u,r[i]==o)return i/(e-1);var h=r[i],c=r[i+1],l=c-h,a=(o-h)/l;return(i+a)/(e-1)};THREE.Curve.prototype.getTangent=function(n){var r=.0001,t=n-r,i=n+r;t<0&&(t=0);i>1&&(i=1);var u=this.getPoint(t),f=this.getPoint(i),e=f.clone().sub(u);return e.normalize()};THREE.Curve.prototype.getTangentAt=function(n){var t=this.getUtoTmapping(n);return this.getTangent(t)};THREE.Curve.Utils={tangentQuadraticBezier:function(n,t,i,r){return 2*(1-n)*(i-t)+2*n*(r-i)},tangentCubicBezier:function(n,t,i,r,u){return-3*t*(1-n)*(1-n)+3*i*(1-n)*(1-n)-6*n*i*(1-n)+6*n*r*(1-n)-3*n*n*r+3*n*n*u},tangentSpline:function(n){var t=6*n*n-6*n,i=3*n*n-4*n+1,r=-6*n*n+6*n,u=3*n*n-2*n;return t+i+r+u},interpolate:function(n,t,i,r,u){var f=(i-n)*.5,e=(r-t)*.5,o=u*u,s=u*o;return(2*t-2*i+f+e)*s+(-3*t+3*i-2*f-e)*o+f*u+t}};THREE.Curve.create=function(n,t){return n.prototype=Object.create(THREE.Curve.prototype),n.prototype.constructor=n,n.prototype.getPoint=t,n};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(n){this.curves.push(n)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var n=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);n.equals(t)||this.curves.push(new THREE.LineCurve(t,n))};THREE.CurvePath.prototype.getPoint=function(n){for(var u=n*this.getLength(),i=this.getCurveLengths(),t=0,f,r,e;t<i.length;){if(i[t]>=u)return f=i[t]-u,r=this.curves[t],e=1-f/r.getLength(),r.getPointAt(e);t++}return null};THREE.CurvePath.prototype.getLength=function(){var n=this.getCurveLengths();return n[n.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;for(var t=[],i=0,r=this.curves.length,n=0;n<r;n++)i+=this.curves[n].getLength(),t.push(i);return this.cacheLengths=t,t};THREE.CurvePath.prototype.getBoundingBox=function(){var s=this.getPoints(),t,i,h,r,u,c,n,f,l,a,e,o;for(t=i=Number.NEGATIVE_INFINITY,r=u=Number.POSITIVE_INFINITY,e=s[0]instanceof THREE.Vector3,a=e?new THREE.Vector3:new THREE.Vector2,f=0,l=s.length;f<l;f++)n=s[f],n.x>t?t=n.x:n.x<r&&(r=n.x),n.y>i?i=n.y:n.y<u&&(u=n.y),e&&(n.z>h?h=n.z:n.z<c&&(c=n.z)),a.add(n);return o={minX:r,minY:u,maxX:t,maxY:i},e&&(o.maxZ=h,o.minZ=c),o};THREE.CurvePath.prototype.createPointsGeometry=function(n){var t=this.getPoints(n,!0);return this.createGeometry(t)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(n){var t=this.getSpacedPoints(n,!0);return this.createGeometry(t)};THREE.CurvePath.prototype.createGeometry=function(n){for(var i=new THREE.Geometry,t=0;t<n.length;t++)i.vertices.push(new THREE.Vector3(n[t].x,n[t].y,n[t].z||0));return i};THREE.CurvePath.prototype.addWrapPath=function(n){this.bends.push(n)};THREE.CurvePath.prototype.getTransformedPoints=function(n,t){var r=this.getPoints(n),i,u;for(t||(t=this.bends),i=0,u=t.length;i<u;i++)r=this.getWrapPoints(r,t[i]);return r};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(n,t){var r=this.getSpacedPoints(n),i,u;for(t||(t=this.bends),i=0,u=t.length;i<u;i++)r=this.getWrapPoints(r,t[i]);return r};THREE.CurvePath.prototype.getWrapPoints=function(n,t){for(var c=this.getBoundingBox(),r,e,h,u,o,i,f=0,s=n.length;f<s;f++)r=n[f],e=r.x,h=r.y,u=e/c.maxX,u=t.getUtoTmapping(u,e),o=t.getPoint(u),i=t.getTangent(u),i.set(-i.y,i.x).multiplyScalar(h),r.x=o.x+i.x,r.y=o.y+i.y;return n};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.constructor=THREE.Gyroscope;THREE.Gyroscope.prototype.updateMatrixWorld=function(){var r=new THREE.Vector3,n=new THREE.Quaternion,u=new THREE.Vector3,t=new THREE.Vector3,f=new THREE.Quaternion,i=new THREE.Vector3;return function(e){this.matrixAutoUpdate&&this.updateMatrix();(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(t,f,i),this.matrix.decompose(r,n,u),this.matrixWorld.compose(t,n,i)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var o=0,s=this.children.length;o<s;o++)this.children[o].updateMatrixWorld(e)}}();THREE.Path=function(n){THREE.CurvePath.call(this);this.actions=[];n&&this.fromPoints(n)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(n){this.moveTo(n[0].x,n[0].y);for(var t=1,i=n.length;t<i;t++)this.lineTo(n[t].x,n[t].y)};THREE.Path.prototype.moveTo=function(){var n=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:n})};THREE.Path.prototype.lineTo=function(n,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,u=i[i.length-2],f=i[i.length-1],e=new THREE.LineCurve(new THREE.Vector2(u,f),new THREE.Vector2(n,t));this.curves.push(e);this.actions.push({action:THREE.PathActions.LINE_TO,args:r})};THREE.Path.prototype.quadraticCurveTo=function(n,t,i,r){var f=Array.prototype.slice.call(arguments),u=this.actions[this.actions.length-1].args,e=u[u.length-2],o=u[u.length-1],s=new THREE.QuadraticBezierCurve(new THREE.Vector2(e,o),new THREE.Vector2(n,t),new THREE.Vector2(i,r));this.curves.push(s);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};THREE.Path.prototype.bezierCurveTo=function(n,t,i,r,u,f){var o=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,s=e[e.length-2],h=e[e.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(s,h),new THREE.Vector2(n,t),new THREE.Vector2(i,r),new THREE.Vector2(u,f));this.curves.push(c);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})};THREE.Path.prototype.splineThru=function(n){var u=Array.prototype.slice.call(arguments),t=this.actions[this.actions.length-1].args,f=t[t.length-2],e=t[t.length-1],i=[new THREE.Vector2(f,e)],r;Array.prototype.push.apply(i,n);r=new THREE.SplineCurve(i);this.curves.push(r);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:u})};THREE.Path.prototype.arc=function(n,t,i,r,u,f){var e=this.actions[this.actions.length-1].args,o=e[e.length-2],s=e[e.length-1];this.absarc(n+o,t+s,i,r,u,f)};THREE.Path.prototype.absarc=function(n,t,i,r,u,f){this.absellipse(n,t,i,i,r,u,f)};THREE.Path.prototype.ellipse=function(n,t,i,r,u,f,e){var o=this.actions[this.actions.length-1].args,s=o[o.length-2],h=o[o.length-1];this.absellipse(n+s,t+h,i,r,u,f,e)};THREE.Path.prototype.absellipse=function(n,t,i,r,u,f,e){var o=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(n,t,i,r,u,f,e),s;this.curves.push(h);s=h.getPoint(1);o.push(s.x);o.push(s.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:o})};THREE.Path.prototype.getSpacedPoints=function(n){var i,t;for(n||(n=40),i=[],t=0;t<n;t++)i.push(this.getPoint(t/n));return i};THREE.Path.prototype.getPoints=function(n,t){var r,h,it,d,rt,i,v,y,ut,ft,p,w,c,l,u,f,e,o,s,ot,nt,tt;if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(n,t);for(n=n||12,r=[],h=0,it=this.actions.length;h<it;h++){d=this.actions[h];rt=d.action;i=d.args;switch(rt){case THREE.PathActions.MOVE_TO:r.push(new THREE.Vector2(i[0],i[1]));break;case THREE.PathActions.LINE_TO:r.push(new THREE.Vector2(i[0],i[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(v=i[2],y=i[3],p=i[0],w=i[1],r.length>0?(u=r[r.length-1],c=u.x,l=u.y):(u=this.actions[h-1].args,c=u[u.length-2],l=u[u.length-1]),f=1;f<=n;f++)e=f/n,o=THREE.Shape.Utils.b2(e,c,p,v),s=THREE.Shape.Utils.b2(e,l,w,y),r.push(new THREE.Vector2(o,s));break;case THREE.PathActions.BEZIER_CURVE_TO:for(v=i[4],y=i[5],p=i[0],w=i[1],ut=i[2],ft=i[3],r.length>0?(u=r[r.length-1],c=u.x,l=u.y):(u=this.actions[h-1].args,c=u[u.length-2],l=u[u.length-1]),f=1;f<=n;f++)e=f/n,o=THREE.Shape.Utils.b3(e,c,p,ut,v),s=THREE.Shape.Utils.b3(e,l,w,ft,y),r.push(new THREE.Vector2(o,s));break;case THREE.PathActions.CSPLINE_THRU:u=this.actions[h-1].args;var yt=new THREE.Vector2(u[u.length-2],u[u.length-1]),g=[yt],et=n*i[0].length;for(g=g.concat(i[0]),ot=new THREE.SplineCurve(g),f=1;f<=et;f++)r.push(ot.getPointAt(f/et));break;case THREE.PathActions.ARC:var st=i[0],ht=i[1],ct=i[2],b=i[3],lt=i[4],at=!!i[5],vt=lt-b,a,k=n*2;for(f=1;f<=k;f++)e=f/k,at||(e=1-e),a=b+e*vt,o=st+ct*Math.cos(a),s=ht+ct*Math.sin(a),r.push(new THREE.Vector2(o,s));break;case THREE.PathActions.ELLIPSE:var st=i[0],ht=i[1],pt=i[2],wt=i[3],b=i[4],lt=i[5],at=!!i[6],vt=lt-b,a,k=n*2;for(f=1;f<=k;f++)e=f/k,at||(e=1-e),a=b+e*vt,o=st+pt*Math.cos(a),s=ht+wt*Math.sin(a),r.push(new THREE.Vector2(o,s))}}return nt=r[r.length-1],tt=1e-10,Math.abs(nt.x-r[0].x)<tt&&Math.abs(nt.y-r[0].y)<tt&&r.splice(r.length-1,1),t&&r.push(r[0]),r};THREE.Path.prototype.toShapes=function(n,t){function ot(n){for(var r,u,o,f=[],t=new THREE.Path,i=0,e=n.length;i<e;i++)r=n[i],o=r.args,u=r.action,u==THREE.PathActions.MOVE_TO&&t.actions.length!=0&&(f.push(t),t=new THREE.Path),t[u].apply(t,o);return t.actions.length!=0&&f.push(t),f}function ft(n){for(var r,t,u=[],i=0,f=n.length;i<f;i++)r=n[i],t=new THREE.Shape,t.actions=r.actions,t.curves=r.curves,u.push(t);return u}function st(n,t){for(var h,c=t.length,e=!1,o=c-1,f=0;f<c;o=f++){var i=t[o],r=t[f],s=r.x-i.x,u=r.y-i.y;if(Math.abs(u)>1e-10){if(u<0&&(i=t[f],s=-s,r=t[o],u=-u),n.y<i.y||n.y>r.y)continue;if(n.y==i.y){if(n.x==i.x)return!0}else{if(h=u*(n.x-i.x)-s*(n.y-i.y),h==0)return!0;if(h<0)continue;e=!e}}else{if(n.y!=i.y)continue;if(r.x<=n.x&&n.x<=i.x||i.x<=n.x&&n.x<=r.x)return!0}}return e}var e=ot(this.actions),a,o,s,v,c,f,b,tt,it,r,k,rt,y,d,g,h,ut,nt,et;if(e.length==0)return[];if(t===!0)return ft(e);if(v=[],e.length==1)return o=e[0],s=new THREE.Shape,s.actions=o.actions,s.curves=o.curves,v.push(s),v;c=!THREE.Shape.Utils.isClockWise(e[0].getPoints());c=n?!c:c;var p=[],i=[],l=[],u=0,w;for(i[u]=undefined,l[u]=[],f=0,b=e.length;f<b;f++)o=e[f],w=o.getPoints(),a=THREE.Shape.Utils.isClockWise(w),a=n?!a:a,a?(!c&&i[u]&&u++,i[u]={s:new THREE.Shape,p:w},i[u].s.actions=o.actions,i[u].s.curves=o.curves,c&&u++,l[u]=[]):l[u].push({h:o,p:w[0]});if(!i[0])return ft(e);if(i.length>1){for(tt=!1,it=[],r=0,k=i.length;r<k;r++)p[r]=[];for(r=0,k=i.length;r<k;r++)for(rt=l[r],y=0;y<rt.length;y++){for(d=rt[y],g=!0,h=0;h<i.length;h++)st(d.p,i[h].p)&&(r!=h&&it.push({froms:r,tos:h,hole:y}),g?(g=!1,p[h].push(d)):tt=!0);g&&p[r].push(d)}it.length>0&&(tt||(l=p))}for(f=0,b=i.length;f<b;f++)for(s=i[f].s,v.push(s),ut=l[f],nt=0,et=ut.length;nt<et;nt++)s.holes.push(ut[nt].h);return v};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(n){return new THREE.ExtrudeGeometry(this,n)};THREE.Shape.prototype.makeGeometry=function(n){return new THREE.ShapeGeometry(this,n)};THREE.Shape.prototype.getPointsHoles=function(n){for(var r=this.holes.length,i=[],t=0;t<r;t++)i[t]=this.holes[t].getTransformedPoints(n,this.bends);return i};THREE.Shape.prototype.getSpacedPointsHoles=function(n){for(var r=this.holes.length,i=[],t=0;t<r;t++)i[t]=this.holes[t].getTransformedSpacedPoints(n,this.bends);return i};THREE.Shape.prototype.extractAllPoints=function(n){return{shape:this.getTransformedPoints(n),holes:this.getPointsHoles(n)}};THREE.Shape.prototype.extractPoints=function(n){return this.useSpacedPoints?this.extractAllSpacedPoints(n):this.extractAllPoints(n)};THREE.Shape.prototype.extractAllSpacedPoints=function(n){return{shape:this.getTransformedSpacedPoints(n),holes:this.getSpacedPointsHoles(n)}};THREE.Shape.Utils={triangulateShape:function(n,t){function a(n,t,i){return n.x!=t.x?n.x<t.x?n.x<=i.x&&i.x<=t.x:t.x<=i.x&&i.x<=n.x:n.y<t.y?n.y<=i.y&&i.y<=t.y:t.y<=i.y&&i.y<=n.y}function v(n,t,i,r,u){var b=t.x-n.x,g=t.y-n.y,k=r.x-i.x,d=r.y-i.y,nt=n.x-i.x,tt=n.y-i.y,f=g*k-b*d,e=g*nt-b*tt,o,it,rt,ut,c,p,l,s,v,w,y,h;if(Math.abs(f)>1e-10){if(f>0){if(e<0||e>f)return[];if(o=d*nt-k*tt,o<0||o>f)return[]}else{if(e>0||e<f)return[];if(o=d*nt-k*tt,o>0||o<f)return[]}return o==0?u&&(e==0||e==f)?[]:[n]:o==f?u&&(e==0||e==f)?[]:[t]:e==0?[i]:e==f?[r]:(it=o/f,[{x:n.x+it*b,y:n.y+it*g}])}return e!=0||d*nt!=k*tt?[]:(rt=b==0&&g==0,ut=k==0&&d==0,rt&&ut)?n.x!=i.x||n.y!=i.y?[]:[n]:rt?a(i,r,n)?[n]:[]:ut?a(n,t,i)?[i]:[]:(b!=0?(n.x<t.x?(c=n,l=n.x,p=t,s=t.x):(c=t,l=t.x,p=n,s=n.x),i.x<r.x?(v=i,y=i.x,w=r,h=r.x):(v=r,y=r.x,w=i,h=i.x)):(n.y<t.y?(c=n,l=n.y,p=t,s=t.y):(c=t,l=t.y,p=n,s=n.y),i.y<r.y?(v=i,y=i.y,w=r,h=r.y):(v=r,y=r.y,w=i,h=i.y)),l<=y?s<y?[]:s==y?u?[]:[v]:s<=h?[v,p]:[v,w]:l>h?[]:l==h?u?[]:[c]:s<=h?[c,p]:[c,w])}function y(n,t,i,r){var e=t.x-n.x,o=t.y-n.y,s=i.x-n.x,h=i.y-n.y,c=r.x-n.x,l=r.y-n.y,a=e*h-o*s,u=e*l-o*c,f;return Math.abs(a)>1e-10?(f=c*h-l*s,a>0?u>=0&&f>=0:u>=0||f>=0):u>0}function w(n,t){function tt(n,t){var c=i.length-1,s=n-1,u,f,h,e,o;return(s<0&&(s=c),u=n+1,u>c&&(u=0),f=y(i[n],i[s],i[u],r[t]),!f)?!1:(h=r.length-1,e=t-1,e<0&&(e=h),o=t+1,o>h&&(o=0),f=y(r[t],r[e],r[o],i[n]),!f)?!1:!0}function it(n,t){for(var u,f,r=0;r<i.length;r++)if(u=r+1,u%=i.length,f=v(n,t,i[r],i[u],!0),f.length>0)return!0;return!1}function rt(n,i){for(var r,f,o,s,e=0;e<u.length;e++)for(r=t[u[e]],f=0;f<r.length;f++)if(o=f+1,o%=r.length,s=v(n,i,r[f],r[o],!0),s.length>0)return!0;return!1}for(var p,w,s,i=n.concat(),r,u=[],o,f,h,c,l,a,b=[],k,d,g,nt,e=0,ut=t.length;e<ut;e++)u.push(e);for(p=0,w=u.length*2;u.length>0;){if(w--,w<0){console.log("Infinite Loop! Holes left:"+u.length+", Probably Hole outside Shape!");break}for(f=p;f<i.length;f++){for(h=i[f],o=-1,e=0;e<u.length;e++)if(l=u[e],a=h.x+":"+h.y+":"+l,b[a]===undefined){for(r=t[l],s=0;s<r.length;s++)if((c=r[s],tt(f,s))&&!it(h,c)&&!rt(h,c)){o=s;u.splice(e,1);k=i.slice(0,f+1);d=i.slice(f);g=r.slice(o);nt=r.slice(0,o+1);i=k.concat(g).concat(nt).concat(d);p=f;break}if(o>=0)break;b[a]=!0}if(o>=0)break}}return i}for(var p,s,i,f,r,e,u,h,c={},o=n.concat(),l=0,b=t.length;l<b;l++)Array.prototype.push.apply(o,t[l]);for(i=0,f=o.length;i<f;i++)u=o[i].x+":"+o[i].y,c[u]!==undefined&&THREE.warn("THREE.Shape: Duplicate point",u),c[u]=i;for(p=w(n,t),s=THREE.FontUtils.Triangulate(p,!1),i=0,f=s.length;i<f;i++)for(e=s[i],r=0;r<3;r++)u=e[r].x+":"+e[r].y,h=c[u],h!==undefined&&(e[r]=h);return s.concat()},isClockWise:function(n){return THREE.FontUtils.Triangulate.area(n)<0},b2p0:function(n,t){var i=1-n;return i*i*t},b2p1:function(n,t){return 2*(1-n)*n*t},b2p2:function(n,t){return n*n*t},b2:function(n,t,i,r){return this.b2p0(n,t)+this.b2p1(n,i)+this.b2p2(n,r)},b3p0:function(n,t){var i=1-n;return i*i*i*t},b3p1:function(n,t){var i=1-n;return 3*i*i*n*t},b3p2:function(n,t){var i=1-n;return 3*i*n*n*t},b3p3:function(n,t){return n*n*n*t},b3:function(n,t,i,r,u){return this.b3p0(n,t)+this.b3p1(n,i)+this.b3p2(n,r)+this.b3p3(n,u)}};THREE.LineCurve=function(n,t){this.v1=n;this.v2=t};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(n){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(n).add(this.v1),t};THREE.LineCurve.prototype.getPointAt=function(n){return this.getPoint(n)};THREE.LineCurve.prototype.getTangent=function(){var n=this.v2.clone().sub(this.v1);return n.normalize()};THREE.QuadraticBezierCurve=function(n,t,i){this.v0=n;this.v1=t;this.v2=i};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(n){var t=new THREE.Vector2;return t.x=THREE.Shape.Utils.b2(n,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Shape.Utils.b2(n,this.v0.y,this.v1.y,this.v2.y),t};THREE.QuadraticBezierCurve.prototype.getTangent=function(n){var t=new THREE.Vector2;return t.x=THREE.Curve.Utils.tangentQuadraticBezier(n,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Curve.Utils.tangentQuadraticBezier(n,this.v0.y,this.v1.y,this.v2.y),t.normalize()};THREE.CubicBezierCurve=function(n,t,i,r){this.v0=n;this.v1=t;this.v2=i;this.v3=r};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(n){var t,i;return t=THREE.Shape.Utils.b3(n,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(n,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,i)};THREE.CubicBezierCurve.prototype.getTangent=function(n){var i,r,t;return i=THREE.Curve.Utils.tangentCubicBezier(n,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(n,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(i,r),t.normalize(),t};THREE.SplineCurve=function(n){this.points=n==undefined?[]:n};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(n){var t=this.points,u=(t.length-1)*n,i=Math.floor(u),f=u-i,e=t[i==0?i:i-1],o=t[i],s=t[i>t.length-2?t.length-1:i+1],h=t[i>t.length-3?t.length-1:i+2],r=new THREE.Vector2;return r.x=THREE.Curve.Utils.interpolate(e.x,o.x,s.x,h.x,f),r.y=THREE.Curve.Utils.interpolate(e.y,o.y,s.y,h.y,f),r};THREE.EllipseCurve=function(n,t,i,r,u,f,e){this.aX=n;this.aY=t;this.xRadius=i;this.yRadius=r;this.aStartAngle=u;this.aEndAngle=f;this.aClockwise=e};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(n){var t=this.aEndAngle-this.aStartAngle,r,i;return t<0&&(t+=Math.PI*2),t>Math.PI*2&&(t-=Math.PI*2),r=this.aClockwise===!0?this.aEndAngle+(1-n)*(Math.PI*2-t):this.aStartAngle+n*t,i=new THREE.Vector2,i.x=this.aX+this.xRadius*Math.cos(r),i.y=this.aY+this.yRadius*Math.sin(r),i};THREE.ArcCurve=function(n,t,i,r,u,f){THREE.EllipseCurve.call(this,n,t,i,i,r,u,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(n,t){this.v1=n;this.v2=t},function(n){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(n),t.add(this.v1),t});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(n,t,i){this.v0=n;this.v1=t;this.v2=i},function(n){var t=new THREE.Vector3;return t.x=THREE.Shape.Utils.b2(n,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Shape.Utils.b2(n,this.v0.y,this.v1.y,this.v2.y),t.z=THREE.Shape.Utils.b2(n,this.v0.z,this.v1.z,this.v2.z),t});THREE.CubicBezierCurve3=THREE.Curve.create(function(n,t,i,r){this.v0=n;this.v1=t;this.v2=i;this.v3=r},function(n){var t=new THREE.Vector3;return t.x=THREE.Shape.Utils.b3(n,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t.y=THREE.Shape.Utils.b3(n,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t.z=THREE.Shape.Utils.b3(n,this.v0.z,this.v1.z,this.v2.z,this.v3.z),t});THREE.SplineCurve3=THREE.Curve.create(function(n){this.points=n==undefined?[]:n},function(n){var t=this.points,h=(t.length-1)*n,i=Math.floor(h),u=h-i,f=t[i==0?i:i-1],e=t[i],o=t[i>t.length-2?t.length-1:i+1],s=t[i>t.length-3?t.length-1:i+2],r=new THREE.Vector3;return r.x=THREE.Curve.Utils.interpolate(f.x,e.x,o.x,s.x,u),r.y=THREE.Curve.Utils.interpolate(f.y,e.y,o.y,s.y,u),r.z=THREE.Curve.Utils.interpolate(f.z,e.z,o.z,s.z,u),r});THREE.ClosedSplineCurve3=THREE.Curve.create(function(n){this.points=n==undefined?[]:n},function(n){var t=this.points,h=(t.length-0)*n,i=Math.floor(h),u=h-i;i+=i>0?0:(Math.floor(Math.abs(i)/t.length)+1)*t.length;var f=t[(i-1)%t.length],e=t[i%t.length],o=t[(i+1)%t.length],s=t[(i+2)%t.length],r=new THREE.Vector3;return r.x=THREE.Curve.Utils.interpolate(f.x,e.x,o.x,s.x,u),r.y=THREE.Curve.Utils.interpolate(f.y,e.y,o.y,s.y,u),r.z=THREE.Curve.Utils.interpolate(f.z,e.z,o.z,s.z,u),r});THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){THREE.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){THREE.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){THREE.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(n){var i,o,f,e,u,r,t;if(n.initialized===!0)return n;for(i=0;i<n.hierarchy.length;i++){for(t=0;t<n.hierarchy[i].keys.length;t++)n.hierarchy[i].keys[t].time<0&&(n.hierarchy[i].keys[t].time=0),n.hierarchy[i].keys[t].rot===undefined||n.hierarchy[i].keys[t].rot instanceof THREE.Quaternion||(o=n.hierarchy[i].keys[t].rot,n.hierarchy[i].keys[t].rot=(new THREE.Quaternion).fromArray(o));if(n.hierarchy[i].keys.length&&n.hierarchy[i].keys[0].morphTargets!==undefined){for(f={},t=0;t<n.hierarchy[i].keys.length;t++)for(r=0;r<n.hierarchy[i].keys[t].morphTargets.length;r++)u=n.hierarchy[i].keys[t].morphTargets[r],f[u]=-1;for(n.hierarchy[i].usedMorphTargets=f,t=0;t<n.hierarchy[i].keys.length;t++){e={};for(u in f){for(r=0;r<n.hierarchy[i].keys[t].morphTargets.length;r++)if(n.hierarchy[i].keys[t].morphTargets[r]===u){e[u]=n.hierarchy[i].keys[t].morphTargetsInfluences[r];break}r===n.hierarchy[i].keys[t].morphTargets.length&&(e[u]=0)}n.hierarchy[i].keys[t].morphTargetsInfluences=e}}for(t=1;t<n.hierarchy[i].keys.length;t++)n.hierarchy[i].keys[t].time===n.hierarchy[i].keys[t-1].time&&(n.hierarchy[i].keys.splice(t,1),t--);for(t=0;t<n.hierarchy[i].keys.length;t++)n.hierarchy[i].keys[t].index=t}return n.initialized=!0,n},parse:function(n){var r=function(n,t){t.push(n);for(var i=0;i<n.children.length;i++)r(n.children[i],t)},i=[],t;if(n instanceof THREE.SkinnedMesh)for(t=0;t<n.skeleton.bones.length;t++)i.push(n.skeleton.bones[t]);else r(n,i);return i},play:function(n){this.animations.indexOf(n)===-1&&this.animations.push(n)},stop:function(n){var t=this.animations.indexOf(n);t!==-1&&this.animations.splice(t,1)},update:function(n){for(var t=0;t<this.animations.length;t++)this.animations[t].resetBlendWeights();for(t=0;t<this.animations.length;t++)this.animations[t].update(n)}};THREE.Animation=function(n,t){this.root=n;this.data=THREE.AnimationHandler.init(t);this.hierarchy=THREE.AnimationHandler.parse(n);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype={constructor:THREE.Animation,keyTypes:["pos","rot","scl"],play:function(n,t){this.currentTime=n!==undefined?n:0;this.weight=t!==undefined?t:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)},reset:function(){for(var i,u,n=0,o=this.hierarchy.length;n<o;n++){i=this.hierarchy[n];i.animationCache===undefined&&(i.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});var s=this.data.name,h=i.animationCache.animations,r=h[s];for(r===undefined&&(r={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:i.matrix},h[s]=r),u=0;u<3;u++){for(var f=this.keyTypes[u],e=this.data.hierarchy[n].keys[0],t=this.getNextKeyWith(f,n,1);t.time<this.currentTime&&t.index>e.index;)e=t,t=this.getNextKeyWith(f,n,t.index+1);r.prevKey[f]=e;r.nextKey[f]=t}}},resetBlendWeights:function(){for(var u,i,t,n=0,r=this.hierarchy.length;n<r;n++)u=this.hierarchy[n],i=u.animationCache,i!==undefined&&(t=i.blending,t.positionWeight=0,t.quaternionWeight=0,t.scaleWeight=0)},update:function(){var t=[],i=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Quaternion,f=function(n,t){var r=[],o=[],v,i,f,e,s,h,c,l,a;return v=(n.length-1)*t,i=Math.floor(v),f=v-i,r[0]=i===0?i:i-1,r[1]=i,r[2]=i>n.length-2?i:i+1,r[3]=i>n.length-3?i:i+2,h=n[r[0]],c=n[r[1]],l=n[r[2]],a=n[r[3]],e=f*f,s=f*e,o[0]=u(h[0],c[0],l[0],a[0],f,e,s),o[1]=u(h[1],c[1],l[1],a[1],f,e,s),o[2]=u(h[2],c[2],l[2],a[2],f,e,s),o},u=function(n,t,i,r,u,f,e){var o=(i-n)*.5,s=(r-t)*.5;return(2*(t-i)+o+s)*e+(-3*(t-i)-2*o-s)*f+o*u+t};return function(u){var b,v,tt,d,g,c,nt,it,a;if(this.isPlaying!==!1&&(this.currentTime+=u*this.timeScale,this.weight!==0)){for(b=this.data.length,(this.currentTime>b||this.currentTime<0)&&(this.loop?(this.currentTime%=b,this.currentTime<0&&(this.currentTime+=b),this.reset()):this.stop()),v=0,tt=this.hierarchy.length;v<tt;v++){var y=this.hierarchy[v],k=y.animationCache.animations[this.data.name],l=y.animationCache.blending;for(d=0;d<3;d++){var s=this.keyTypes[d],p=k.prevKey[s],h=k.nextKey[s];if(this.timeScale>0&&h.time<=this.currentTime||this.timeScale<0&&p.time>=this.currentTime){for(p=this.data.hierarchy[v].keys[0],h=this.getNextKeyWith(s,v,1);h.time<this.currentTime&&h.index>p.index;)p=h,h=this.getNextKeyWith(s,v,h.index+1);k.prevKey[s]=p;k.nextKey[s]=h}var e=(this.currentTime-p.time)/(h.time-p.time),o=p[s],w=h[s];e<0&&(e=0);e>1&&(e=1);s==="pos"?this.interpolationType===THREE.AnimationHandler.LINEAR?(n.x=o[0]+(w[0]-o[0])*e,n.y=o[1]+(w[1]-o[1])*e,n.z=o[2]+(w[2]-o[2])*e,a=this.weight/(this.weight+l.positionWeight),y.position.lerp(n,a),l.positionWeight+=this.weight):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(t[0]=this.getPrevKeyWith("pos",v,p.index-1).pos,t[1]=o,t[2]=w,t[3]=this.getNextKeyWith("pos",v,h.index+1).pos,e=e*.33+.33,g=f(t,e),a=this.weight/(this.weight+l.positionWeight),l.positionWeight+=this.weight,c=y.position,c.x=c.x+(g[0]-c.x)*a,c.y=c.y+(g[1]-c.y)*a,c.z=c.z+(g[2]-c.z)*a,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(nt=f(t,e*1.01),i.set(nt[0],nt[1],nt[2]),i.sub(c),i.y=0,i.normalize(),it=Math.atan2(i.x,i.z),y.rotation.set(0,it,0))):s==="rot"?(THREE.Quaternion.slerp(o,w,r,e),l.quaternionWeight===0?(y.quaternion.copy(r),l.quaternionWeight=this.weight):(a=this.weight/(this.weight+l.quaternionWeight),THREE.Quaternion.slerp(y.quaternion,r,y.quaternion,a),l.quaternionWeight+=this.weight)):s==="scl"&&(n.x=o[0]+(w[0]-o[0])*e,n.y=o[1]+(w[1]-o[1])*e,n.z=o[2]+(w[2]-o[2])*e,a=this.weight/(this.weight+l.scaleWeight),y.scale.lerp(n,a),l.scaleWeight+=this.weight)}}return!0}}}(),getNextKeyWith:function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i<r.length-1?i:r.length-1:i%r.length;i<r.length;i++)if(r[i][n]!==undefined)return r[i];return this.data.hierarchy[t].keys[0]},getPrevKeyWith:function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i>0?i:0:i>=0?i:i+r.length;i>=0;i--)if(r[i][n]!==undefined)return r[i];return this.data.hierarchy[t].keys[r.length-1]}};THREE.KeyFrameAnimation=function(n){var t,e,i,u,f;for(this.root=n.node,this.data=THREE.AnimationHandler.init(n),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,t=0,e=this.hierarchy.length;t<e;t++){var s=this.data.hierarchy[t].keys,r=this.data.hierarchy[t].sids,o=this.hierarchy[t];if(s.length&&r){for(i=0;i<r.length;i++)u=r[i],f=this.getNextKeyWith(u,t,0),f&&f.apply(u);o.matrixAutoUpdate=!1;this.data.hierarchy[t].node.updateMatrix();o.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(n){var r,u,f,t,i;if(this.currentTime=n!==undefined?n:0,this.isPlaying===!1){for(this.isPlaying=!0,u=this.hierarchy.length,r=0;r<u;r++)f=this.hierarchy[r],t=this.data.hierarchy[r],t.animationCache===undefined&&(t.animationCache={},t.animationCache.prevKey=null,t.animationCache.nextKey=null,t.animationCache.originalMatrix=f.matrix),i=this.data.hierarchy[r].keys,i.length&&(t.animationCache.prevKey=i[0],t.animationCache.nextKey=i[1],this.startTime=Math.min(i[0].time,this.startTime),this.endTime=Math.max(i[i.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)},stop:function(){var n,i,t,r;for(this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.stop(this),n=0;n<this.data.hierarchy.length;n++)i=this.hierarchy[n],t=this.data.hierarchy[n],t.animationCache!==undefined&&(r=t.animationCache.originalMatrix,r.copy(i.matrix),i.matrix=r,delete t.animationCache)},update:function(n){var u,r,e,i,t;if(this.isPlaying!==!1)for(this.currentTime+=n*this.timeScale,u=this.data.length,this.loop===!0&&this.currentTime>u&&(this.currentTime%=u),this.currentTime=Math.min(this.currentTime,u),r=0,e=this.hierarchy.length;r<e;r++){var h=this.hierarchy[r],o=this.data.hierarchy[r],s=o.keys,f=o.animationCache;if(s.length){if(i=f.prevKey,t=f.nextKey,t.time<=this.currentTime){while(t.time<this.currentTime&&t.index>i.index)i=t,t=s[i.index+1];f.prevKey=i;f.nextKey=t}t.time>=this.currentTime?i.interpolate(t,this.currentTime):i.interpolate(t,t.time);this.data.hierarchy[r].node.updateMatrix();h.matrixWorldNeedsUpdate=!0}}},getNextKeyWith:function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=i%r.length;i<r.length;i++)if(r[i].hasTarget(n))return r[i];return r[0]},getPrevKeyWith:function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=i>=0?i:i+r.length;i>=0;i--)if(r[i].hasTarget(n))return r[i];return r[r.length-1]}};THREE.MorphAnimation=function(n){this.mesh=n;this.frames=n.morphTargetInfluences.length;this.currentTime=0;this.duration=1e3;this.loop=!0;this.lastFrame=0;this.currentFrame=0;this.isPlaying=!1};THREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(n){if(this.isPlaying!==!1){this.currentTime+=n;this.loop===!0&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);var r=this.duration/this.frames,i=Math.floor(this.currentTime/r),t=this.mesh.morphTargetInfluences;i!=this.currentFrame&&(t[this.lastFrame]=0,t[this.currentFrame]=1,t[i]=0,this.lastFrame=this.currentFrame,this.currentFrame=i);t[i]=this.currentTime%r/r;t[this.lastFrame]=1-t[i]}}};THREE.BoxGeometry=function(n,t,i,r,u,f){function o(n,t,i,r,u,f,o,s){var w,h,c,v=e.widthSegments,y=e.heightSegments,it=u/2,rt=f/2,p=e.vertices.length,k;n==="x"&&t==="y"||n==="y"&&t==="x"?w="z":n==="x"&&t==="z"||n==="z"&&t==="x"?(w="y",y=e.depthSegments):(n==="z"&&t==="y"||n==="y"&&t==="z")&&(w="x",v=e.depthSegments);var b=v+1,ut=y+1,ft=u/v,et=f/y,l=new THREE.Vector3;for(l[w]=o>0?1:-1,c=0;c<ut;c++)for(h=0;h<b;h++)k=new THREE.Vector3,k[n]=(h*ft-it)*i,k[t]=(c*et-rt)*r,k[w]=o,e.vertices.push(k);for(c=0;c<y;c++)for(h=0;h<v;h++){var ot=h+b*c,d=h+b*(c+1),st=h+1+b*(c+1),g=h+1+b*c,ht=new THREE.Vector2(h/v,1-c/y),nt=new THREE.Vector2(h/v,1-(c+1)/y),ct=new THREE.Vector2((h+1)/v,1-(c+1)/y),tt=new THREE.Vector2((h+1)/v,1-c/y),a=new THREE.Face3(ot+p,d+p,g+p);a.normal.copy(l);a.vertexNormals.push(l.clone(),l.clone(),l.clone());a.materialIndex=s;e.faces.push(a);e.faceVertexUvs[0].push([ht,nt,tt]);a=new THREE.Face3(d+p,st+p,g+p);a.normal.copy(l);a.vertexNormals.push(l.clone(),l.clone(),l.clone());a.materialIndex=s;e.faces.push(a);e.faceVertexUvs[0].push([nt.clone(),ct,tt.clone()])}}THREE.Geometry.call(this);this.type="BoxGeometry";this.parameters={width:n,height:t,depth:i,widthSegments:r,heightSegments:u,depthSegments:f};this.widthSegments=r||1;this.heightSegments=u||1;this.depthSegments=f||1;var e=this,s=n/2,h=t/2,c=i/2;o("z","y",-1,-1,i,t,s,0);o("z","y",1,-1,i,t,-s,1);o("x","z",1,1,n,i,h,2);o("x","z",1,-1,n,i,-h,3);o("x","y",1,-1,n,t,c,4);o("x","y",-1,-1,n,t,-c,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.BoxGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.BoxGeometry(n.width,n.height,n.depth,n.widthSegments,n.heightSegments,n.depthSegments)};THREE.CubeGeometry=THREE.BoxGeometry;THREE.CircleGeometry=function(n,t,i,r){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:n,segments:t,thetaStart:i,thetaLength:r};this.fromBufferGeometry(new THREE.CircleBufferGeometry(n,t,i,r))};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;THREE.CircleGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.CircleGeometry(n.radius,n.segments,n.thetaStart,n.thetaLength)};THREE.CircleBufferGeometry=function(n,t,i,r){var l,a,u;THREE.BufferGeometry.call(this);this.type="CircleBufferGeometry";this.parameters={radius:n,segments:t,thetaStart:i,thetaLength:r};n=n||50;t=t!==undefined?Math.max(3,t):8;i=i!==undefined?i:0;r=r!==undefined?r:Math.PI*2;var o=t+2,f=new Float32Array(o*3),s=new Float32Array(o*3),e=new Float32Array(o*2);s[2]=1;e[0]=.5;e[1]=.5;for(var h=0,u=3,c=2;h<=t;h++,u+=3,c+=2)l=i+h/t*r,f[u]=n*Math.cos(l),f[u+1]=n*Math.sin(l),s[u+2]=1,e[c]=(f[u]/n+1)/2,e[c+1]=(f[u+1]/n+1)/2;for(a=[],u=1;u<=t;u++)a.push(u,u+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(a),1));this.addAttribute("position",new THREE.BufferAttribute(f,3));this.addAttribute("normal",new THREE.BufferAttribute(s,3));this.addAttribute("uv",new THREE.BufferAttribute(e,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;THREE.CircleBufferGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.CircleBufferGeometry(n.radius,n.segments,n.thetaStart,n.thetaLength)};THREE.CylinderGeometry=function(n,t,i,r,u,f,e,o){var w,p,nt,a,v;THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:n,radiusBottom:t,height:i,radialSegments:r,heightSegments:u,openEnded:f,thetaStart:e,thetaLength:o};n=n!==undefined?n:20;t=t!==undefined?t:20;i=i!==undefined?i:100;r=r||8;u=u||1;f=f!==undefined?f:!1;e=e!==undefined?e:0;o=o!==undefined?o:2*Math.PI;for(var d=i/2,s,c=[],l=[],h=0;h<=u;h++){var ot=[],st=[],g=h/u,ht=g*(t-n)+n;for(s=0;s<=r;s++)w=s/r,p=new THREE.Vector3,p.x=ht*Math.sin(w*o+e),p.y=-g*i+d,p.z=ht*Math.cos(w*o+e),this.vertices.push(p),ot.push(this.vertices.length-1),st.push(new THREE.Vector2(w,1-g));c.push(ot);l.push(st)}for(nt=(t-n)/i,s=0;s<r;s++)for(n!==0?(a=this.vertices[c[0][s]].clone(),v=this.vertices[c[0][s+1]].clone()):(a=this.vertices[c[1][s]].clone(),v=this.vertices[c[1][s+1]].clone()),a.setY(Math.sqrt(a.x*a.x+a.z*a.z)*nt).normalize(),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*nt).normalize(),h=0;h<u;h++){var tt=c[h][s],b=c[h+1][s],it=c[h+1][s+1],ct=c[h][s+1],rt=a.clone(),k=a.clone(),ut=v.clone(),lt=v.clone(),ft=l[h][s].clone(),y=l[h+1][s].clone(),et=l[h+1][s+1].clone(),at=l[h][s+1].clone();this.faces.push(new THREE.Face3(tt,b,ct,[rt,k,lt]));this.faceVertexUvs[0].push([ft,y,at]);this.faces.push(new THREE.Face3(b,it,ct,[k.clone(),ut,lt.clone()]));this.faceVertexUvs[0].push([y.clone(),et,at.clone()])}if(f===!1&&n>0)for(this.vertices.push(new THREE.Vector3(0,d,0)),s=0;s<r;s++){var tt=c[0][s],b=c[0][s+1],it=this.vertices.length-1,rt=new THREE.Vector3(0,1,0),k=new THREE.Vector3(0,1,0),ut=new THREE.Vector3(0,1,0),ft=l[0][s].clone(),y=l[0][s+1].clone(),et=new THREE.Vector2(y.x,0);this.faces.push(new THREE.Face3(tt,b,it,[rt,k,ut],undefined,1));this.faceVertexUvs[0].push([ft,y,et])}if(f===!1&&t>0)for(this.vertices.push(new THREE.Vector3(0,-d,0)),s=0;s<r;s++){var tt=c[u][s+1],b=c[u][s],it=this.vertices.length-1,rt=new THREE.Vector3(0,-1,0),k=new THREE.Vector3(0,-1,0),ut=new THREE.Vector3(0,-1,0),ft=l[u][s+1].clone(),y=l[u][s].clone(),et=new THREE.Vector2(y.x,1);this.faces.push(new THREE.Face3(tt,b,it,[rt,k,ut],undefined,2));this.faceVertexUvs[0].push([ft,y,et])}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.CylinderGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.CylinderGeometry(n.radiusTop,n.radiusBottom,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength)};THREE.EdgesGeometry=function(n,t){function b(n,t){return n-t}var a,u,v,c,e,p,y,l,i,o,s,r;THREE.BufferGeometry.call(this);t=t!==undefined?t:1;var w=Math.cos(THREE.Math.degToRad(t)),f=[0,0],h={};for(a=["a","b","c"],n instanceof THREE.BufferGeometry?(u=new THREE.Geometry,u.fromBufferGeometry(n)):u=n.clone(),u.mergeVertices(),u.computeFaceNormals(),v=u.vertices,c=u.faces,e=0,p=c.length;e<p;e++)for(y=c[e],l=0;l<3;l++)f[0]=y[a[l]],f[1]=y[a[(l+1)%3]],f.sort(b),o=f.toString(),h[o]===undefined?h[o]={vert1:f[0],vert2:f[1],face1:e,face2:undefined}:h[o].face2=e;i=[];for(o in h)s=h[o],(s.face2===undefined||c[s.face1].normal.dot(c[s.face2].normal)<=w)&&(r=v[s.vert1],i.push(r.x),i.push(r.y),i.push(r.z),r=v[s.vert2],i.push(r.x),i.push(r.y),i.push(r.z));this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(i),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;THREE.PlaneGeometry=function(n,t,i,r){THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:n,height:t,widthSegments:i,heightSegments:r};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(n,t,i,r))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;THREE.PlaneGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.PlaneGeometry(n.width,n.height,n.widthSegments,n.heightSegments)};THREE.PlaneBufferGeometry=function(n,t,i,r){var w,b,s,f,e;THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:n,height:t,widthSegments:i,heightSegments:r};var g=n/2,nt=t/2,h=Math.floor(i)||1,c=Math.floor(r)||1,o=h+1,l=c+1,tt=n/h,it=t/c,a=new Float32Array(o*l*3),p=new Float32Array(o*l*3),v=new Float32Array(o*l*2),u=0,y=0;for(f=0;f<l;f++)for(w=f*it-nt,e=0;e<o;e++)b=e*tt-g,a[u]=b,a[u+1]=-w,p[u+2]=1,v[y]=e/h,v[y+1]=1-f/c,u+=3,y+=2;for(u=0,s=new(a.length/3>65535?Uint32Array:Uint16Array)(h*c*6),f=0;f<c;f++)for(e=0;e<h;e++){var rt=e+o*f,k=e+o*(f+1),ut=e+1+o*(f+1),d=e+1+o*f;s[u]=rt;s[u+1]=k;s[u+2]=d;s[u+3]=k;s[u+4]=ut;s[u+5]=d;u+=6}this.addAttribute("index",new THREE.BufferAttribute(s,1));this.addAttribute("position",new THREE.BufferAttribute(a,3));this.addAttribute("normal",new THREE.BufferAttribute(p,3));this.addAttribute("uv",new THREE.BufferAttribute(v,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;THREE.PlaneBufferGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.PlaneBufferGeometry(n.width,n.height,n.widthSegments,n.heightSegments)};THREE.RingGeometry=function(n,t,i,r,u,f){var l,e,c,w;THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:n,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:u,thetaLength:f};n=n||0;t=t||50;u=u!==undefined?u:0;f=f!==undefined?f:Math.PI*2;i=i!==undefined?Math.max(3,i):8;r=r!==undefined?Math.max(1,r):8;for(var o,h=[],p=n,b=(t-n)/r,s=0;s<r+1;s++){for(o=0;o<i+1;o++)l=new THREE.Vector3,e=u+o/i*f,l.x=p*Math.cos(e),l.y=p*Math.sin(e),this.vertices.push(l),h.push(new THREE.Vector2((l.x/t+1)/2,(l.y/t+1)/2));p+=b}for(c=new THREE.Vector3(0,0,1),s=0;s<r;s++)for(w=s*(i+1),o=0;o<i;o++){var e=o+w,a=e,v=e+i+1,y=e+i+2;this.faces.push(new THREE.Face3(a,v,y,[c.clone(),c.clone(),c.clone()]));this.faceVertexUvs[0].push([h[a].clone(),h[v].clone(),h[y].clone()]);a=e;v=e+i+2;y=e+1;this.faces.push(new THREE.Face3(a,v,y,[c.clone(),c.clone(),c.clone()]));this.faceVertexUvs[0].push([h[a].clone(),h[v].clone(),h[y].clone()])}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,p)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.RingGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.RingGeometry(n.innerRadius,n.outerRadius,n.thetaSegments,n.phiSegments,n.thetaStart,n.thetaLength)};THREE.SphereGeometry=function(n,t,i,r,u,f,e){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:n,widthSegments:t,heightSegments:i,phiStart:r,phiLength:u,thetaStart:f,thetaLength:e};this.fromBufferGeometry(new THREE.SphereBufferGeometry(n,t,i,r,u,f,e))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.SphereGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.SphereGeometry(n.radius,n.widthSegments,n.heightSegments,n.phiStart,n.phiLength,n.thetaStart,n.thetaLength)};THREE.SphereBufferGeometry=function(n,t,i,r,u,f,e){var w,l,v,o,s;THREE.BufferGeometry.call(this);this.type="SphereBufferGeometry";this.parameters={radius:n,widthSegments:t,heightSegments:i,phiStart:r,phiLength:u,thetaStart:f,thetaLength:e};n=n||50;t=Math.max(3,Math.floor(t)||8);i=Math.max(2,Math.floor(i)||6);r=r!==undefined?r:0;u=u!==undefined?u:Math.PI*2;f=f!==undefined?f:0;e=e!==undefined?e:Math.PI;var ut=f+e,y=(t+1)*(i+1),p=new THREE.BufferAttribute(new Float32Array(y*3),3),k=new THREE.BufferAttribute(new Float32Array(y*3),3),d=new THREE.BufferAttribute(new Float32Array(y*2),2),h=0,c=[],a=new THREE.Vector3;for(o=0;o<=i;o++){for(w=[],l=o/i,s=0;s<=t;s++){var b=s/t,g=-n*Math.cos(r+b*u)*Math.sin(f+l*e),nt=n*Math.cos(f+l*e),tt=n*Math.sin(r+b*u)*Math.sin(f+l*e);a.set(g,nt,tt).normalize();p.setXYZ(h,g,nt,tt);k.setXYZ(h,a.x,a.y,a.z);d.setXY(h,b,1-l);w.push(h);h++}c.push(w)}for(v=[],o=0;o<i;o++)for(s=0;s<t;s++){var ft=c[o][s+1],it=c[o][s],et=c[o+1][s],rt=c[o+1][s+1];(o!==0||f>0)&&v.push(ft,it,rt);(o!==i-1||ut<Math.PI)&&v.push(it,et,rt)}this.setIndex(new(p.count>65535?THREE.Uint32Attribute:THREE.Uint16Attribute)(v,1));this.addAttribute("position",p);this.addAttribute("normal",k);this.addAttribute("uv",d);this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;THREE.SphereBufferGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.SphereBufferGeometry(n.radius,n.widthSegments,n.heightSegments,n.phiStart,n.phiLength,n.thetaStart,n.thetaLength)};THREE.TorusGeometry=function(n,t,i,r,u){var a,v,h,f,e;THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:n,tube:t,radialSegments:i,tubularSegments:r,arc:u};n=n||100;t=t||40;i=i||8;r=r||6;u=u||Math.PI*2;var y=new THREE.Vector3,o=[],s=[];for(f=0;f<=i;f++)for(e=0;e<=r;e++)a=e/r*u,v=f/i*Math.PI*2,y.x=n*Math.cos(a),y.y=n*Math.sin(a),h=new THREE.Vector3,h.x=(n+t*Math.cos(v))*Math.cos(a),h.y=(n+t*Math.cos(v))*Math.sin(a),h.z=t*Math.sin(v),this.vertices.push(h),o.push(new THREE.Vector2(e/r,f/i)),s.push(h.clone().sub(y).normalize());for(f=1;f<=i;f++)for(e=1;e<=r;e++){var p=(r+1)*f+e-1,c=(r+1)*(f-1)+e-1,w=(r+1)*(f-1)+e,l=(r+1)*f+e,b=new THREE.Face3(p,c,l,[s[p].clone(),s[c].clone(),s[l].clone()]);this.faces.push(b);this.faceVertexUvs[0].push([o[p].clone(),o[c].clone(),o[l].clone()]);b=new THREE.Face3(c,w,l,[s[c].clone(),s[w].clone(),s[l].clone()]);this.faces.push(b);this.faceVertexUvs[0].push([o[c].clone(),o[w].clone(),o[l].clone()])}this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;THREE.TorusGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.TorusGeometry(n.radius,n.tube,n.radialSegments,n.tubularSegments,n.arc)};THREE.TorusKnotGeometry=function(n,t,i,r,u,f,e){function ft(n,t,i,r,u){var o=Math.cos(n),s=Math.sin(n),f=t/i*n,e=Math.cos(f),h=r*(2+e)*.5*o,c=r*(2+e)*s*.5,l=u*r*Math.sin(f)*.5;return new THREE.Vector3(h,c,l)}var o,s;THREE.Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:n,tube:t,radialSegments:i,tubularSegments:r,p:u,q:f,heightScale:e};n=n||100;t=t||40;i=i||64;r=r||8;u=u||2;f=f||3;e=e||1;var c=new Array(i),y=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3;for(o=0;o<i;++o){c[o]=new Array(r);var b=o/i*2*u*Math.PI,a=ft(b,f,u,n,e),k=ft(b+.01,f,u,n,e);for(y.subVectors(k,a),h.addVectors(k,a),l.crossVectors(y,h),h.crossVectors(l,y),l.normalize(),h.normalize(),s=0;s<r;++s){var d=s/r*2*Math.PI,p=-t*Math.cos(d),w=t*Math.sin(d),v=new THREE.Vector3;v.x=a.x+p*h.x+w*l.x;v.y=a.y+p*h.y+w*l.y;v.z=a.z+p*h.z+w*l.z;c[o][s]=this.vertices.push(v)-1}}for(o=0;o<i;++o)for(s=0;s<r;++s){var g=(o+1)%i,nt=(s+1)%r,et=c[o][s],tt=c[g][s],ot=c[g][nt],it=c[o][nt],st=new THREE.Vector2(o/i,s/r),rt=new THREE.Vector2((o+1)/i,s/r),ht=new THREE.Vector2((o+1)/i,(s+1)/r),ut=new THREE.Vector2(o/i,(s+1)/r);this.faces.push(new THREE.Face3(et,tt,it));this.faceVertexUvs[0].push([st,rt,ut]);this.faces.push(new THREE.Face3(tt,ot,it));this.faceVertexUvs[0].push([rt.clone(),ht,ut.clone()])}this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.TorusKnotGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.TorusKnotGeometry(n.radius,n.tube,n.radialSegments,n.tubularSegments,n.p,n.q,n.heightScale)};THREE.TubeGeometry=function(n,t,i,r,u,f){function yt(n,t,i){return at.vertices.push(new THREE.Vector3(n,t,i))-1}THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:n,segments:t,radius:i,radialSegments:r,closed:u,taper:f};t=t||64;i=i||1;r=r||8;u=u||!1;f=f||THREE.TubeGeometry.NoTaper;var h=[],at=this,vt,c,l,rt=t+1,y,p,w,a,v,ut,s=new THREE.Vector3,e,o,b,k,ft,d,et,g,ot,nt,st,tt,it=new THREE.TubeGeometry.FrenetFrames(n,t,u),ht=it.tangents,ct=it.normals,lt=it.binormals;for(this.tangents=ht,this.normals=ct,this.binormals=lt,e=0;e<rt;e++)for(h[e]=[],y=e/(rt-1),ut=n.getPointAt(y),vt=ht[e],c=ct[e],l=lt[e],w=i*f(y),o=0;o<r;o++)p=o/r*2*Math.PI,a=-w*Math.cos(p),v=w*Math.sin(p),s.copy(ut),s.x+=a*c.x+v*l.x,s.y+=a*c.y+v*l.y,s.z+=a*c.z+v*l.z,h[e][o]=yt(s.x,s.y,s.z);for(e=0;e<t;e++)for(o=0;o<r;o++)b=u?(e+1)%t:e+1,k=(o+1)%r,ft=h[e][o],d=h[b][o],et=h[b][k],g=h[e][k],ot=new THREE.Vector2(e/t,o/r),nt=new THREE.Vector2((e+1)/t,o/r),st=new THREE.Vector2((e+1)/t,(o+1)/r),tt=new THREE.Vector2(e/t,(o+1)/r),this.faces.push(new THREE.Face3(ft,d,g)),this.faceVertexUvs[0].push([ot,nt,tt]),this.faces.push(new THREE.Face3(d,et,g)),this.faceVertexUvs[0].push([nt.clone(),st,tt.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.prototype.clone=function(){return new this.constructor(this.parameters.path,this.parameters.segments,this.parameters.radius,this.parameters.radialSegments,this.parameters.closed,this.parameters.taper)};THREE.TubeGeometry.NoTaper=function(){return 1};THREE.TubeGeometry.SinusoidalTaper=function(n){return Math.sin(Math.PI*n)};THREE.TubeGeometry.FrenetFrames=function(n,t,i){function b(){f[0]=new THREE.Vector3;e[0]=new THREE.Vector3;c=Number.MAX_VALUE;a=Math.abs(u[0].x);v=Math.abs(u[0].y);p=Math.abs(u[0].z);a<=c&&(c=a,l.set(1,0,0));v<=c&&(c=v,l.set(0,1,0));p<=c&&l.set(0,0,1);o.crossVectors(u[0],l).normalize();f[0].crossVectors(u[0],o);e[0].crossVectors(u[0],f[0])}var l=new THREE.Vector3,u=[],f=[],e=[],o=new THREE.Vector3,y=new THREE.Matrix4,s=t+1,h,c,a,v,p,r,w;for(this.tangents=u,this.normals=f,this.binormals=e,r=0;r<s;r++)w=r/(s-1),u[r]=n.getTangentAt(w),u[r].normalize();for(b(),r=1;r<s;r++)f[r]=f[r-1].clone(),e[r]=e[r-1].clone(),o.crossVectors(u[r-1],u[r]),o.length()>Number.EPSILON&&(o.normalize(),h=Math.acos(THREE.Math.clamp(u[r-1].dot(u[r]),-1,1)),f[r].applyMatrix4(y.makeRotationAxis(o,h))),e[r].crossVectors(u[r],f[r]);if(i)for(h=Math.acos(THREE.Math.clamp(f[0].dot(f[s-1]),-1,1)),h/=s-1,u[0].dot(o.crossVectors(f[0],f[s-1]))>0&&(h=-h),r=1;r<s;r++)f[r].applyMatrix4(y.makeRotationAxis(u[r],h*r)),e[r].crossVectors(u[r],f[r])};THREE.PolyhedronGeometry=function(n,t,i,r){function o(n){var t=n.normalize().clone(),i,r;return t.index=e.vertices.push(t)-1,i=nt(n)/2/Math.PI+.5,r=ut(n)/Math.PI+.5,t.uv=new THREE.Vector2(i,1-r),t}function g(n,t,i,r){var f=new THREE.Face3(n.index,t.index,i.index,[n.clone(),t.clone(),i.clone()],undefined,r),u;e.faces.push(f);a.copy(n).add(t).add(i).divideScalar(3);u=nt(a);e.faceVertexUvs[0].push([w(n.uv,n,u),w(t.uv,t,u),w(i.uv,i,u)])}function rt(n,t){for(var r,s,f=Math.pow(2,t),v=o(e.vertices[n.a]),y=o(e.vertices[n.b]),h=o(e.vertices[n.c]),u=[],c=n.materialIndex,i=0;i<=f;i++){u[i]=[];var l=o(v.clone().lerp(h,i/f)),p=o(y.clone().lerp(h,i/f)),a=f-i;for(r=0;r<=a;r++)u[i][r]=r===0&&i===f?l:o(l.clone().lerp(p,r/a))}for(i=0;i<f;i++)for(r=0;r<2*(f-i)-1;r++)s=Math.floor(r/2),r%2==0?g(u[i][s+1],u[i+1][s],u[i][s],c):g(u[i][s+1],u[i+1][s+1],u[i+1][s],c)}function nt(n){return Math.atan2(n.z,-n.x)}function ut(n){return Math.atan2(-n.y,Math.sqrt(n.x*n.x+n.z*n.z))}function w(n,t,i){return i<0&&n.x===1&&(n=new THREE.Vector2(n.x-1,n.y)),t.x===0&&t.z===0&&(n=new THREE.Vector2(i/2/Math.PI+.5,n.y)),n.clone()}var e,h,c,a,u,f;for(THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:n,indices:t,radius:i,detail:r},i=i||1,r=r||0,e=this,u=0,f=n.length;u<f;u+=3)o(new THREE.Vector3(n[u],n[u+1],n[u+2]));h=this.vertices;c=[];for(var u=0,l=0,f=t.length;u<f;u+=3,l++){var b=h[t[u]],k=h[t[u+1]],d=h[t[u+2]];c[l]=new THREE.Face3(b.index,k.index,d.index,[b.clone(),k.clone(),d.clone()],undefined,l)}for(a=new THREE.Vector3,u=0,f=c.length;u<f;u++)rt(c[u],r);for(u=0,f=this.faceVertexUvs[0].length;u<f;u++){var s=this.faceVertexUvs[0][u],v=s[0].x,y=s[1].x,p=s[2].x,tt=Math.max(v,y,p),it=Math.min(v,y,p);tt>.9&&it<.1&&(v<.2&&(s[0].x+=1),y<.2&&(s[1].x+=1),p<.2&&(s[2].x+=1))}for(u=0,f=this.vertices.length;u<f;u++)this.vertices[u].multiplyScalar(i);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.PolyhedronGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.PolyhedronGeometry(n.vertices,n.indices,n.radius,n.detail)};THREE.DodecahedronGeometry=function(n,t){var i=(1+Math.sqrt(5))/2,r=1/i,u=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r];THREE.PolyhedronGeometry.call(this,u,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],n,t);this.type="DodecahedronGeometry";this.parameters={radius:n,detail:t}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;THREE.DodecahedronGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.DodecahedronGeometry(n.radius,n.detail)};THREE.IcosahedronGeometry=function(n,t){var i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1];THREE.PolyhedronGeometry.call(this,r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],n,t);this.type="IcosahedronGeometry";this.parameters={radius:n,detail:t}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.IcosahedronGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.IcosahedronGeometry(n.radius,n.detail)};THREE.OctahedronGeometry=function(n,t){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],n,t);this.type="OctahedronGeometry";this.parameters={radius:n,detail:t}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.OctahedronGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.OctahedronGeometry(n.radius,n.detail)};THREE.TetrahedronGeometry=function(n,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],n,t);this.type="TetrahedronGeometry";this.parameters={radius:n,detail:t}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;THREE.TetrahedronGeometry.prototype.clone=function(){var n=this.parameters;return new THREE.TetrahedronGeometry(n.radius,n.detail)};THREE.ParametricGeometry=function(n,t,i){var p,e,w,o,b,s,k,h;THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:n,slices:t,stacks:i};for(var d=this.vertices,c=this.faces,l=this.faceVertexUvs[0],u,a,v,y,f=t+1,r=0;r<=i;r++)for(y=r/i,u=0;u<=t;u++)v=u/t,a=n(v,y),d.push(a);for(r=0;r<i;r++)for(u=0;u<t;u++)p=r*f+u,e=r*f+u+1,w=(r+1)*f+u+1,o=(r+1)*f+u,b=new THREE.Vector2(u/t,r/i),s=new THREE.Vector2((u+1)/t,r/i),k=new THREE.Vector2((u+1)/t,(r+1)/i),h=new THREE.Vector2(u/t,(r+1)/i),c.push(new THREE.Face3(p,e,o)),l.push([b,s,h]),c.push(new THREE.Face3(e,w,o)),l.push([s.clone(),k,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;THREE.WireframeGeometry=function(n){function nt(n,t){return n-t}var f,a,b,d,v,c,p,tt,ut,l,r,i,s,t,u,w,h;if(THREE.BufferGeometry.call(this),f=[0,0],a={},b=["a","b","c"],n instanceof THREE.Geometry){var o=n.vertices,k=n.faces,e=0,c=new Uint32Array(6*k.length);for(i=0,s=k.length;i<s;i++)for(d=k[i],t=0;t<3;t++)f[0]=d[b[t]],f[1]=d[b[(t+1)%3]],f.sort(nt),l=f.toString(),a[l]===undefined&&(c[2*e]=f[0],c[2*e+1]=f[1],a[l]=!0,e++);for(r=new Float32Array(e*6),i=0,s=e;i<s;i++)for(t=0;t<2;t++)v=o[c[2*i+t]],u=6*i+3*t,r[u+0]=v.x,r[u+1]=v.y,r[u+2]=v.z;this.addAttribute("position",new THREE.BufferAttribute(r,3))}else if(n instanceof THREE.BufferGeometry)if(n.index!==null){var y=n.index.array,o=n.attributes.position,g=n.drawcalls,e=0;for(g.length===0&&n.addGroup(0,y.length),c=new Uint32Array(2*y.length),p=0,tt=g.length;p<tt;++p){var it=g[p],rt=it.start,ft=it.count;for(i=rt,ut=rt+ft;i<ut;i+=3)for(t=0;t<3;t++)f[0]=y[i+t],f[1]=y[i+(t+1)%3],f.sort(nt),l=f.toString(),a[l]===undefined&&(c[2*e]=f[0],c[2*e+1]=f[1],a[l]=!0,e++)}for(r=new Float32Array(e*6),i=0,s=e;i<s;i++)for(t=0;t<2;t++)u=6*i+3*t,h=c[2*i+t],r[u+0]=o.getX(h),r[u+1]=o.getY(h),r[u+2]=o.getZ(h);this.addAttribute("position",new THREE.BufferAttribute(r,3))}else{var o=n.attributes.position.array,e=o.length/3,et=e/3,r=new Float32Array(e*6);for(i=0,s=et;i<s;i++)for(t=0;t<3;t++)u=18*i+6*t,w=9*i+3*t,r[u+0]=o[w],r[u+1]=o[w+1],r[u+2]=o[w+2],h=9*i+3*((t+1)%3),r[u+3]=o[h],r[u+4]=o[h+1],r[u+5]=o[h+2];this.addAttribute("position",new THREE.BufferAttribute(r,3))}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(n){var i;n=n||1;var r=new Float32Array([0,0,0,n,0,0,0,0,0,0,n,0,0,0,0,0,0,n]),u=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(r,3));t.addAttribute("color",new THREE.BufferAttribute(u,3));i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,i,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;THREE.ArrowHelper=function(){var t=new THREE.Geometry,n;return t.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0)),n=new THREE.CylinderGeometry(0,.5,1,5,1),n.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(i,r,u,f,e,o){THREE.Object3D.call(this);f===undefined&&(f=16776960);u===undefined&&(u=1);e===undefined&&(e=.2*u);o===undefined&&(o=.2*e);this.position.copy(r);this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(i);this.setLength(u,e,o)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=function(){var n=new THREE.Vector3,t;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(n.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(n,t))}}();THREE.ArrowHelper.prototype.setLength=function(n,t,i){t===undefined&&(t=.2*n);i===undefined&&(i=.2*t);this.line.scale.set(1,n-t,1);this.line.updateMatrix();this.cone.scale.set(i,t,i);this.cone.position.y=n;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(n){this.line.material.color.set(n);this.cone.material.color.set(n)};THREE.BoxHelper=function(n){var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),t=new THREE.BufferGeometry;t.setIndex(new THREE.BufferAttribute(i,1));t.addAttribute("position",new THREE.BufferAttribute(r,3));THREE.LineSegments.call(this,t,new THREE.LineBasicMaterial({color:16776960}));n!==undefined&&this.update(n)};THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;THREE.BoxHelper.prototype.update=function(){var n=new THREE.Box3;return function(t){if(n.setFromObject(t),!n.empty()){var r=n.min,u=n.max,f=this.geometry.attributes.position,i=f.array;i[0]=u.x;i[1]=u.y;i[2]=u.z;i[3]=r.x;i[4]=u.y;i[5]=u.z;i[6]=r.x;i[7]=r.y;i[8]=u.z;i[9]=u.x;i[10]=r.y;i[11]=u.z;i[12]=u.x;i[13]=u.y;i[14]=r.z;i[15]=r.x;i[16]=u.y;i[17]=r.z;i[18]=r.x;i[19]=r.y;i[20]=r.z;i[21]=u.x;i[22]=r.y;i[23]=r.z;f.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();THREE.BoundingBoxHelper=function(n,t){var i=t!==undefined?t:8947848;this.object=n;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:i,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(n){function t(n,t,i){s(n,i);s(t,i)}function s(n,t){u.vertices.push(new THREE.Vector3);u.colors.push(new THREE.Color(t));f[n]===undefined&&(f[n]=[]);f[n].push(u.vertices.length-1)}var u=new THREE.Geometry,h=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={},i=16755200,e=16711680,o=43775,r=3355443;t("n1","n2",i);t("n2","n4",i);t("n4","n3",i);t("n3","n1",i);t("f1","f2",i);t("f2","f4",i);t("f4","f3",i);t("f3","f1",i);t("n1","f1",i);t("n2","f2",i);t("n3","f3",i);t("n4","f4",i);t("p","n1",e);t("p","n2",e);t("p","n3",e);t("p","n4",e);t("u1","u2",o);t("u2","u3",o);t("u3","u1",o);t("c","t",16777215);t("p","c",r);t("cn1","cn2",r);t("cn3","cn4",r);t("cf1","cf2",r);t("cf3","cf4",r);THREE.Line.call(this,u,h,THREE.LinePieces);this.camera=n;this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;THREE.CameraHelper.prototype.update=function(){var t,i,r=new THREE.Vector3,u=new THREE.Camera,n=function(n,f,e,o){var s,h,c;if(r.set(f,e,o).unproject(u),s=i[n],s!==undefined)for(h=0,c=s.length;h<c;h++)t.vertices[s[h]].copy(r)};return function(){t=this.geometry;i=this.pointMap;var f=1,r=1;u.projectionMatrix.copy(this.camera.projectionMatrix);n("c",0,0,-1);n("t",0,0,1);n("n1",-f,-r,-1);n("n2",f,-r,-1);n("n3",-f,r,-1);n("n4",f,r,-1);n("f1",-f,-r,1);n("f2",f,-r,1);n("f3",-f,r,1);n("f4",f,r,1);n("u1",f*.7,r*1.1,-1);n("u2",-f*.7,r*1.1,-1);n("u3",0,r*2,-1);n("cf1",-f,0,1);n("cf2",f,0,1);n("cf3",0,-r,1);n("cf4",0,r,1);n("cn1",-f,0,-1);n("cn2",f,0,-1);n("cn3",0,-r,-1);n("cn4",0,r,-1);t.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(n,t){var i,r;THREE.Object3D.call(this);this.light=n;this.light.updateMatrixWorld();this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;t=t||1;i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(i,r);this.add(this.lightPlane);i=new THREE.Geometry;i.vertices.push(new THREE.Vector3,new THREE.Vector3);r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(i,r);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Vector3;return function(){t.setFromMatrixPosition(this.light.matrixWorld);i.setFromMatrixPosition(this.light.target.matrixWorld);n.subVectors(i,t);this.lightPlane.lookAt(n);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(n);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(n,t,i){var g=t!==undefined?t:16777215,s,d,y,a,r,e,h,c,u;i=i!==undefined?i:1;var nt=Math.cos(THREE.Math.degToRad(i)),o=[0,0],l={},tt=function(n,t){return n-t},p=["a","b","c"],w=new THREE.BufferGeometry,f;n.geometry instanceof THREE.BufferGeometry?(f=new THREE.Geometry,f.fromBufferGeometry(n.geometry)):f=n.geometry.clone();f.mergeVertices();f.computeFaceNormals();var b=f.vertices,v=f.faces,k=0;for(s=0,d=v.length;s<d;s++)for(y=v[s],a=0;a<3;a++)o[0]=y[p[a]],o[1]=y[p[(a+1)%3]],o.sort(tt),h=o.toString(),l[h]===undefined?(l[h]={vert1:o[0],vert2:o[1],face1:s,face2:undefined},k++):l[h].face2=s;r=new Float32Array(k*6);e=0;for(h in l)c=l[h],(c.face2===undefined||v[c.face1].normal.dot(v[c.face2].normal)<=nt)&&(u=b[c.vert1],r[e++]=u.x,r[e++]=u.y,r[e++]=u.z,u=b[c.vert2],r[e++]=u.x,r[e++]=u.y,r[e++]=u.z);w.addAttribute("position",new THREE.BufferAttribute(r,3));THREE.Line.call(this,w,new THREE.LineBasicMaterial({color:g}),THREE.LinePieces);this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;THREE.FaceNormalsHelper=function(n,t,i,r){var u,e;this.object=n;this.size=t!==undefined?t:1;var o=i!==undefined?i:16776960,s=r!==undefined?r:1,f=new THREE.Geometry,h=this.object.geometry.faces;for(u=0,e=h.length;u<e;u++)f.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:o,linewidth:s}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;THREE.FaceNormalsHelper.prototype.update=function(){var r=this.geometry.vertices,t=this.object,u=t.geometry.vertices,e=t.geometry.faces,o=t.matrixWorld,n;t.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(o);for(var f=0,i=0,s=e.length;f<s;f++,i+=2)n=e[f],r[i].copy(u[n.a]).add(u[n.b]).add(u[n.c]).divideScalar(3).applyMatrix4(o),r[i+1].copy(n.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(r[i]);return this.geometry.verticesNeedUpdate=!0,this};THREE.GridHelper=function(n,t){var u=new THREE.Geometry,f=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),i,r;for(this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848),i=-n;i<=n;i+=t)u.vertices.push(new THREE.Vector3(-n,0,i),new THREE.Vector3(n,0,i),new THREE.Vector3(i,0,-n),new THREE.Vector3(i,0,n)),r=i===0?this.color1:this.color2,u.colors.push(r,r,r,r);THREE.Line.call(this,u,f,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(n,t){this.color1.set(n);this.color2.set(t);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(n,t){var r,i,u,f;for(THREE.Object3D.call(this),this.light=n,this.light.updateMatrixWorld(),this.matrix=n.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color],r=new THREE.SphereGeometry(t,4,2),r.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),i=0,u=8;i<u;i++)r.faces[i].color=this.colors[i<4?0:1];f=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(r,f);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var n=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(n.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(n,t){this.light=n;this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,r,i);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(n){var t,i,r,u;for(this.bones=this.getBoneList(n),t=new THREE.Geometry,i=0;i<this.bones.length;i++)r=this.bones[i],r.parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)));u=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,t,u,THREE.LinePieces);this.root=n;this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(n){var t=[],i;for(n instanceof THREE.Bone&&t.push(n),i=0;i<n.children.length;i++)t.push.apply(t,this.getBoneList(n.children[i]));return t};THREE.SkeletonHelper.prototype.update=function(){for(var i,n=this.geometry,f=(new THREE.Matrix4).getInverse(this.root.matrixWorld),t=new THREE.Matrix4,r=0,u=0;u<this.bones.length;u++)i=this.bones[u],i.parent instanceof THREE.Bone&&(t.multiplyMatrices(f,i.matrixWorld),n.vertices[r].setFromMatrixPosition(t),t.multiplyMatrices(f,i.parent.matrixWorld),n.vertices[r+1].setFromMatrixPosition(t),r+=2);n.verticesNeedUpdate=!0;n.computeBoundingSphere()};THREE.SpotLightHelper=function(n){var t,i;THREE.Object3D.call(this);this.light=n;this.light.updateMatrixWorld();this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;t=new THREE.CylinderGeometry(0,1,1,8,1,!0);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,i);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(){var i=this.light.distance?this.light.distance:1e4,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i);n.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(t.sub(n));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(n,t,i,r){var u,s,h,f,c;this.object=n;this.size=t!==undefined?t:1;var l=i!==undefined?i:16711680,a=r!==undefined?r:1,e=new THREE.Geometry,o=n.geometry.faces;for(u=0,s=o.length;u<s;u++)for(h=o[u],f=0,c=h.vertexNormals.length;f<c;f++)e.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,e,new THREE.LineBasicMaterial({color:l,linewidth:a}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;THREE.VertexNormalsHelper.prototype.update=function(){var n=new THREE.Vector3;return function(){var h=["a","b","c","d"],r,o,u,i,s;this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);var f=this.geometry.vertices,c=this.object.geometry.vertices,e=this.object.geometry.faces,l=this.object.matrixWorld,t=0;for(r=0,o=e.length;r<o;r++)for(u=e[r],i=0,s=u.vertexNormals.length;i<s;i++){var a=u[h[i]],v=c[a],y=u.vertexNormals[i];f[t].copy(v).applyMatrix4(l);n.copy(y).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);n.add(f[t]);t=t+1;f[t].copy(n);t=t+1}return this.geometry.verticesNeedUpdate=!0,this}}();THREE.VertexTangentsHelper=function(n,t,i,r){var u,s,h,e,c;this.object=n;this.size=t!==undefined?t:1;var l=i!==undefined?i:255,a=r!==undefined?r:1,f=new THREE.Geometry,o=n.geometry.faces;for(u=0,s=o.length;u<s;u++)for(h=o[u],e=0,c=h.vertexTangents.length;e<c;e++)f.vertices.push(new THREE.Vector3),f.vertices.push(new THREE.Vector3);THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:l,linewidth:a}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper;THREE.VertexTangentsHelper.prototype.update=function(){var n=new THREE.Vector3;return function(){var c=["a","b","c","d"],r,s,u,i,h;this.object.updateMatrixWorld(!0);var f=this.geometry.vertices,l=this.object.geometry.vertices,e=this.object.geometry.faces,o=this.object.matrixWorld,t=0;for(r=0,s=e.length;r<s;r++)for(u=e[r],i=0,h=u.vertexTangents.length;i<h;i++){var a=u[c[i]],v=l[a],y=u.vertexTangents[i];f[t].copy(v).applyMatrix4(o);n.copy(y).transformDirection(o).multiplyScalar(this.size);n.add(f[t]);t=t+1;f[t].copy(n);t=t+1}return this.geometry.verticesNeedUpdate=!0,this}}();THREE.WireframeHelper=function(n,t){var et=t!==undefined?t:16777215,e=[0,0],p={},tt=function(n,t){return n-t},it=["a","b","c"],w=new THREE.BufferGeometry,nt,b,l,y,rt,ft,a,u,r,h,i,f,d,c;if(n.geometry instanceof THREE.Geometry){var s=n.geometry.vertices,g=n.geometry.faces,o=0,l=new Uint32Array(6*g.length);for(r=0,h=g.length;r<h;r++)for(nt=g[r],i=0;i<3;i++)e[0]=nt[it[i]],e[1]=nt[it[(i+1)%3]],e.sort(tt),a=e.toString(),p[a]===undefined&&(l[2*o]=e[0],l[2*o+1]=e[1],p[a]=!0,o++);for(u=new Float32Array(o*6),r=0,h=o;r<h;r++)for(i=0;i<2;i++)b=s[l[2*r+i]],f=6*r+3*i,u[f+0]=b.x,u[f+1]=b.y,u[f+2]=b.z;w.addAttribute("position",new THREE.BufferAttribute(u,3))}else if(n.geometry instanceof THREE.BufferGeometry)if(n.geometry.attributes.index!==undefined){var s=n.geometry.attributes.position.array,k=n.geometry.attributes.index.array,v=n.geometry.drawcalls,o=0;for(v.length===0&&(v=[{count:k.length,index:0,start:0}]),l=new Uint32Array(2*k.length),y=0,rt=v.length;y<rt;++y){var ut=v[y].start,ot=v[y].count,f=v[y].index;for(r=ut,ft=ut+ot;r<ft;r+=3)for(i=0;i<3;i++)e[0]=f+k[r+i],e[1]=f+k[r+(i+1)%3],e.sort(tt),a=e.toString(),p[a]===undefined&&(l[2*o]=e[0],l[2*o+1]=e[1],p[a]=!0,o++)}for(u=new Float32Array(o*6),r=0,h=o;r<h;r++)for(i=0;i<2;i++)f=6*r+3*i,c=3*l[2*r+i],u[f+0]=s[c],u[f+1]=s[c+1],u[f+2]=s[c+2];w.addAttribute("position",new THREE.BufferAttribute(u,3))}else{var s=n.geometry.attributes.position.array,o=s.length/3,st=o/3,u=new Float32Array(o*6);for(r=0,h=st;r<h;r++)for(i=0;i<3;i++)f=18*r+6*i,d=9*r+3*i,u[f+0]=s[d],u[f+1]=s[d+1],u[f+2]=s[d+2],c=9*r+3*((i+1)%3),u[f+3]=s[c],u[f+4]=s[c+1],u[f+5]=s[c+2];w.addAttribute("position",new THREE.BufferAttribute(u,3))}THREE.Line.call(this,w,new THREE.LineBasicMaterial({color:et}),THREE.LinePieces);this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(n,t){THREE.Mesh.call(this,n,t);this.animationsMap={};this.animationsList=[];var i=this.geometry.morphTargets.length,r="__default",u=i-1,f=i/1;this.createAnimation(r,0,u,f);this.setAnimationWeight(r,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;THREE.MorphBlendMesh.prototype.createAnimation=function(n,t,i,r){var u={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[n]=u;this.animationsList.push(u)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(n){for(var s,f,t,i,e,u={},o=this.geometry,r=0,h=o.morphTargets.length;r<h;r++)s=o.morphTargets[r],f=s.name.match(/([a-z]+)_?(\d+)/),f&&f.length>1&&(t=f[1],u[t]||(u[t]={start:Infinity,end:- Infinity}),i=u[t],r<i.start&&(i.start=r),r>i.end&&(i.end=r),e||(e=t));for(t in u)i=u[t],this.createAnimation(t,i.start,i.end,n);this.firstAnimation=e};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(n){var t=this.animationsMap[n];t&&(t.direction=1,t.directionBackwards=!1)};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(n){var t=this.animationsMap[n];t&&(t.direction=-1,t.directionBackwards=!0)};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(n,t){var i=this.animationsMap[n];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(n,t){var i=this.animationsMap[n];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(n,t){var i=this.animationsMap[n];i&&(i.weight=t)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(n,t){var i=this.animationsMap[n];i&&(i.time=t)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(n){var t=0,i=this.animationsMap[n];return i&&(t=i.time),t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(n){var t=-1,i=this.animationsMap[n];return i&&(t=i.duration),t};THREE.MorphBlendMesh.prototype.playAnimation=function(n){var t=this.animationsMap[n];t?(t.time=0,t.active=!0):THREE.warn("THREE.MorphBlendMesh: animation["+n+"] undefined in .playAnimation()")};THREE.MorphBlendMesh.prototype.stopAnimation=function(n){var t=this.animationsMap[n];t&&(t.active=!1)};THREE.MorphBlendMesh.prototype.update=function(n){for(var t,u,f,e,i,r=0,o=this.animationsList.length;r<o;r++)(t=this.animationsList[r],t.active)&&(u=t.duration/t.length,t.time+=t.direction*n,t.mirroredLoop?(t.time>t.duration||t.time<0)&&(t.direction*=-1,t.time>t.duration&&(t.time=t.duration,t.directionBackwards=!0),t.time<0&&(t.time=0,t.directionBackwards=!1)):(t.time=t.time%t.duration,t.time<0&&(t.time+=t.duration)),f=t.startFrame+THREE.Math.clamp(Math.floor(t.time/u),0,t.length-1),e=t.weight,f!==t.currentFrame&&(this.morphTargetInfluences[t.lastFrame]=0,this.morphTargetInfluences[t.currentFrame]=1*e,this.morphTargetInfluences[f]=0,t.lastFrame=t.currentFrame,t.currentFrame=f),i=t.time%u/u,t.directionBackwards&&(i=1-i),this.morphTargetInfluences[t.currentFrame]=i*e,this.morphTargetInfluences[t.lastFrame]=(1-i)*e)};
/*
//# sourceMappingURL=three.min.js.map
*/